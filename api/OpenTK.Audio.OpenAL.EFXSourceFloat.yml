### YamlMime:ManagedReference
items:
- uid: OpenTK.Audio.OpenAL.EFXSourceFloat
  commentId: T:OpenTK.Audio.OpenAL.EFXSourceFloat
  id: EFXSourceFloat
  parent: OpenTK.Audio.OpenAL
  children:
  - OpenTK.Audio.OpenAL.EFXSourceFloat.AirAbsorptionFactor
  - OpenTK.Audio.OpenAL.EFXSourceFloat.ConeOuterGainHighFrequency
  - OpenTK.Audio.OpenAL.EFXSourceFloat.RoomRolloffFactor
  langs:
  - csharp
  - vb
  name: EFXSourceFloat
  nameWithType: EFXSourceFloat
  fullName: OpenTK.Audio.OpenAL.EFXSourceFloat
  type: Enum
  source:
    id: EFXSourceFloat
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EFXSourceFloat.cs
    startLine: 14
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: A list of valid <xref href="System.Single" data-throw-if-not-resolved="false"></xref><xref href="OpenTK.Audio.OpenAL.ALC.EFX.Source(System.Int32%2cOpenTK.Audio.OpenAL.EFXSourceFloat%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>/<xref href="OpenTK.Audio.OpenAL.ALC.EFX.GetSource(System.Int32%2cOpenTK.Audio.OpenAL.EFXSourceFloat)" data-throw-if-not-resolved="false"></xref> parameters.
  example: []
  syntax:
    content: public enum EFXSourceFloat
    content.vb: Public Enum EFXSourceFloat
- uid: OpenTK.Audio.OpenAL.EFXSourceFloat.AirAbsorptionFactor
  commentId: F:OpenTK.Audio.OpenAL.EFXSourceFloat.AirAbsorptionFactor
  id: AirAbsorptionFactor
  parent: OpenTK.Audio.OpenAL.EFXSourceFloat
  langs:
  - csharp
  - vb
  name: AirAbsorptionFactor
  nameWithType: EFXSourceFloat.AirAbsorptionFactor
  fullName: OpenTK.Audio.OpenAL.EFXSourceFloat.AirAbsorptionFactor
  type: Field
  source:
    id: AirAbsorptionFactor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EFXSourceFloat.cs
    startLine: 24
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: >-
    Range [0.0f .. 10.0f]

    Default: 0.0f


    This property is a multiplier on the amount of Air Absorption applied to the Source. The

    AL_AIR_ABSORPTION_FACTOR is multiplied by an internal Air Absorption Gain HF value of 0.994 (-0.05dB) per meter

    which represents normal atmospheric humidity and temperature.
  example: []
  syntax:
    content: AirAbsorptionFactor = 131079
    return:
      type: OpenTK.Audio.OpenAL.EFXSourceFloat
- uid: OpenTK.Audio.OpenAL.EFXSourceFloat.RoomRolloffFactor
  commentId: F:OpenTK.Audio.OpenAL.EFXSourceFloat.RoomRolloffFactor
  id: RoomRolloffFactor
  parent: OpenTK.Audio.OpenAL.EFXSourceFloat
  langs:
  - csharp
  - vb
  name: RoomRolloffFactor
  nameWithType: EFXSourceFloat.RoomRolloffFactor
  fullName: OpenTK.Audio.OpenAL.EFXSourceFloat.RoomRolloffFactor
  type: Field
  source:
    id: RoomRolloffFactor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EFXSourceFloat.cs
    startLine: 34
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: >-
    Range [0.0f .. 10.0f]

    Default: 0.0f


    This property is defined the same way as the Reverb Room Rolloff property: it is one of two

    methods available in the Effect Extension to attenuate the reflected sound (early reflections and reverberation)

    according to source-listener distance.
  example: []
  syntax:
    content: RoomRolloffFactor = 131080
    return:
      type: OpenTK.Audio.OpenAL.EFXSourceFloat
- uid: OpenTK.Audio.OpenAL.EFXSourceFloat.ConeOuterGainHighFrequency
  commentId: F:OpenTK.Audio.OpenAL.EFXSourceFloat.ConeOuterGainHighFrequency
  id: ConeOuterGainHighFrequency
  parent: OpenTK.Audio.OpenAL.EFXSourceFloat
  langs:
  - csharp
  - vb
  name: ConeOuterGainHighFrequency
  nameWithType: EFXSourceFloat.ConeOuterGainHighFrequency
  fullName: OpenTK.Audio.OpenAL.EFXSourceFloat.ConeOuterGainHighFrequency
  type: Field
  source:
    id: ConeOuterGainHighFrequency
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EFXSourceFloat.cs
    startLine: 44
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: >-
    Range [0.0f .. 1.0f]

    Default: 1.0f


    A directed Source points in a specified direction. The Source sounds at full volume when the

    listener is directly in front of the source; it is attenuated as the listener circles the Source away from the

    front.
  example: []
  syntax:
    content: ConeOuterGainHighFrequency = 131081
    return:
      type: OpenTK.Audio.OpenAL.EFXSourceFloat
references:
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: OpenTK.Audio.OpenAL.ALC.EFX.Source(System.Int32,OpenTK.Audio.OpenAL.EFXSourceFloat,System.Single)
  commentId: M:OpenTK.Audio.OpenAL.ALC.EFX.Source(System.Int32,OpenTK.Audio.OpenAL.EFXSourceFloat,System.Single)
  isExternal: true
  href: OpenTK.Audio.OpenAL.ALC.EFX.html#OpenTK_Audio_OpenAL_ALC_EFX_Source_System_Int32_OpenTK_Audio_OpenAL_EFXSourceFloat_System_Single_
  name: Source(int, EFXSourceFloat, float)
  nameWithType: ALC.EFX.Source(int, EFXSourceFloat, float)
  fullName: OpenTK.Audio.OpenAL.ALC.EFX.Source(int, OpenTK.Audio.OpenAL.EFXSourceFloat, float)
  nameWithType.vb: ALC.EFX.Source(Integer, EFXSourceFloat, Single)
  fullName.vb: OpenTK.Audio.OpenAL.ALC.EFX.Source(Integer, OpenTK.Audio.OpenAL.EFXSourceFloat, Single)
  name.vb: Source(Integer, EFXSourceFloat, Single)
  spec.csharp:
  - uid: OpenTK.Audio.OpenAL.ALC.EFX.Source(System.Int32,OpenTK.Audio.OpenAL.EFXSourceFloat,System.Single)
    name: Source
    href: OpenTK.Audio.OpenAL.ALC.EFX.html#OpenTK_Audio_OpenAL_ALC_EFX_Source_System_Int32_OpenTK_Audio_OpenAL_EFXSourceFloat_System_Single_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: OpenTK.Audio.OpenAL.EFXSourceFloat
    name: EFXSourceFloat
    href: OpenTK.Audio.OpenAL.EFXSourceFloat.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: OpenTK.Audio.OpenAL.ALC.EFX.Source(System.Int32,OpenTK.Audio.OpenAL.EFXSourceFloat,System.Single)
    name: Source
    href: OpenTK.Audio.OpenAL.ALC.EFX.html#OpenTK_Audio_OpenAL_ALC_EFX_Source_System_Int32_OpenTK_Audio_OpenAL_EFXSourceFloat_System_Single_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: OpenTK.Audio.OpenAL.EFXSourceFloat
    name: EFXSourceFloat
    href: OpenTK.Audio.OpenAL.EFXSourceFloat.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: OpenTK.Audio.OpenAL.ALC.EFX.GetSource(System.Int32,OpenTK.Audio.OpenAL.EFXSourceFloat)
  commentId: M:OpenTK.Audio.OpenAL.ALC.EFX.GetSource(System.Int32,OpenTK.Audio.OpenAL.EFXSourceFloat)
  isExternal: true
  href: OpenTK.Audio.OpenAL.ALC.EFX.html#OpenTK_Audio_OpenAL_ALC_EFX_GetSource_System_Int32_OpenTK_Audio_OpenAL_EFXSourceFloat_
  name: GetSource(int, EFXSourceFloat)
  nameWithType: ALC.EFX.GetSource(int, EFXSourceFloat)
  fullName: OpenTK.Audio.OpenAL.ALC.EFX.GetSource(int, OpenTK.Audio.OpenAL.EFXSourceFloat)
  nameWithType.vb: ALC.EFX.GetSource(Integer, EFXSourceFloat)
  fullName.vb: OpenTK.Audio.OpenAL.ALC.EFX.GetSource(Integer, OpenTK.Audio.OpenAL.EFXSourceFloat)
  name.vb: GetSource(Integer, EFXSourceFloat)
  spec.csharp:
  - uid: OpenTK.Audio.OpenAL.ALC.EFX.GetSource(System.Int32,OpenTK.Audio.OpenAL.EFXSourceFloat)
    name: GetSource
    href: OpenTK.Audio.OpenAL.ALC.EFX.html#OpenTK_Audio_OpenAL_ALC_EFX_GetSource_System_Int32_OpenTK_Audio_OpenAL_EFXSourceFloat_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: OpenTK.Audio.OpenAL.EFXSourceFloat
    name: EFXSourceFloat
    href: OpenTK.Audio.OpenAL.EFXSourceFloat.html
  - name: )
  spec.vb:
  - uid: OpenTK.Audio.OpenAL.ALC.EFX.GetSource(System.Int32,OpenTK.Audio.OpenAL.EFXSourceFloat)
    name: GetSource
    href: OpenTK.Audio.OpenAL.ALC.EFX.html#OpenTK_Audio_OpenAL_ALC_EFX_GetSource_System_Int32_OpenTK_Audio_OpenAL_EFXSourceFloat_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: OpenTK.Audio.OpenAL.EFXSourceFloat
    name: EFXSourceFloat
    href: OpenTK.Audio.OpenAL.EFXSourceFloat.html
  - name: )
- uid: OpenTK.Audio.OpenAL
  commentId: N:OpenTK.Audio.OpenAL
  href: OpenTK.html
  name: OpenTK.Audio.OpenAL
  nameWithType: OpenTK.Audio.OpenAL
  fullName: OpenTK.Audio.OpenAL
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Audio
    name: Audio
    href: OpenTK.Audio.html
  - name: .
  - uid: OpenTK.Audio.OpenAL
    name: OpenAL
    href: OpenTK.Audio.OpenAL.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Audio
    name: Audio
    href: OpenTK.Audio.html
  - name: .
  - uid: OpenTK.Audio.OpenAL
    name: OpenAL
    href: OpenTK.Audio.OpenAL.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTK.Audio.OpenAL.EFXSourceFloat
  commentId: T:OpenTK.Audio.OpenAL.EFXSourceFloat
  parent: OpenTK.Audio.OpenAL
  href: OpenTK.Audio.OpenAL.EFXSourceFloat.html
  name: EFXSourceFloat
  nameWithType: EFXSourceFloat
  fullName: OpenTK.Audio.OpenAL.EFXSourceFloat
