### YamlMime:ManagedReference
items:
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent
  commentId: T:OpenTK.Platform.Native.X11.X11OpenGLComponent
  id: X11OpenGLComponent
  parent: OpenTK.Platform.Native.X11
  children:
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.CanCreateFromSurface
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.CanCreateFromWindow
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.CanShareContexts
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.CreateFromSurface
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.CreateFromWindow(OpenTK.Platform.WindowHandle)
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.DestroyContext(OpenTK.Platform.OpenGLContextHandle)
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.EXT_swap_control_GetMaxSwapInterval
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientExtensions
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientVendor
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientVersion
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXExtensions
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerExtensions
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerVendor
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerVersion
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXVersion
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.GetBindingsContext(OpenTK.Platform.OpenGLContextHandle)
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.GetCurrentContext
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.GetGLXContext(OpenTK.Platform.OpenGLContextHandle)
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.GetGLXWindow(OpenTK.Platform.OpenGLContextHandle)
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.GetProcedureAddress(OpenTK.Platform.OpenGLContextHandle,System.String)
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.GetSharedContext(OpenTK.Platform.OpenGLContextHandle)
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.GetSwapInterval
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.Initialize(OpenTK.Platform.ToolkitOptions)
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.Logger
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.Name
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.Provides
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.SetCurrentContext(OpenTK.Platform.OpenGLContextHandle)
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.SetSwapInterval(System.Int32)
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.SwapBuffers(OpenTK.Platform.OpenGLContextHandle)
  - OpenTK.Platform.Native.X11.X11OpenGLComponent.Uninitialize
  langs:
  - csharp
  - vb
  name: X11OpenGLComponent
  nameWithType: X11OpenGLComponent
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent
  type: Class
  source:
    id: X11OpenGLComponent
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 13
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  syntax:
    content: 'public class X11OpenGLComponent : IOpenGLComponent, IPalComponent'
    content.vb: Public Class X11OpenGLComponent Implements IOpenGLComponent, IPalComponent
  inheritance:
  - System.Object
  implements:
  - OpenTK.Platform.IOpenGLComponent
  - OpenTK.Platform.IPalComponent
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.Name
  commentId: P:OpenTK.Platform.Native.X11.X11OpenGLComponent.Name
  id: Name
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: X11OpenGLComponent.Name
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.Name
  type: Property
  source:
    id: Name
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 16
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: Name of the abstraction layer component.
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.Name*
  implements:
  - OpenTK.Platform.IPalComponent.Name
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.Provides
  commentId: P:OpenTK.Platform.Native.X11.X11OpenGLComponent.Provides
  id: Provides
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: Provides
  nameWithType: X11OpenGLComponent.Provides
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.Provides
  type: Property
  source:
    id: Provides
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 19
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: Specifies which PAL components this object provides.
  example: []
  syntax:
    content: public PalComponents Provides { get; }
    parameters: []
    return:
      type: OpenTK.Platform.PalComponents
    content.vb: Public ReadOnly Property Provides As PalComponents
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.Provides*
  implements:
  - OpenTK.Platform.IPalComponent.Provides
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.Logger
  commentId: P:OpenTK.Platform.Native.X11.X11OpenGLComponent.Logger
  id: Logger
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: X11OpenGLComponent.Logger
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.Logger
  type: Property
  source:
    id: Logger
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 22
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: The logger that this component uses to log diagnostic messages.
  example: []
  syntax:
    content: public ILogger? Logger { get; set; }
    parameters: []
    return:
      type: OpenTK.Core.Utility.ILogger
    content.vb: Public Property Logger As ILogger
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.Logger*
  seealso:
  - linkId: OpenTK.Core.Utility.ILogger
    commentId: T:OpenTK.Core.Utility.ILogger
  - linkId: OpenTK.Platform.ToolkitOptions.Logger
    commentId: P:OpenTK.Platform.ToolkitOptions.Logger
  implements:
  - OpenTK.Platform.IPalComponent.Logger
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXVersion
  commentId: P:OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXVersion
  id: GLXVersion
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: GLXVersion
  nameWithType: X11OpenGLComponent.GLXVersion
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXVersion
  type: Property
  source:
    id: GLXVersion
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 24
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  syntax:
    content: public Version GLXVersion { get; }
    parameters: []
    return:
      type: System.Version
    content.vb: Public Property GLXVersion As Version
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXVersion*
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXExtensions
  commentId: P:OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXExtensions
  id: GLXExtensions
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: GLXExtensions
  nameWithType: X11OpenGLComponent.GLXExtensions
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXExtensions
  type: Property
  source:
    id: GLXExtensions
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 25
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  syntax:
    content: public HashSet<string> GLXExtensions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.String}
    content.vb: Public ReadOnly Property GLXExtensions As HashSet(Of String)
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXExtensions*
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerExtensions
  commentId: P:OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerExtensions
  id: GLXServerExtensions
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: GLXServerExtensions
  nameWithType: X11OpenGLComponent.GLXServerExtensions
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerExtensions
  type: Property
  source:
    id: GLXServerExtensions
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 26
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  syntax:
    content: public HashSet<string> GLXServerExtensions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.String}
    content.vb: Public ReadOnly Property GLXServerExtensions As HashSet(Of String)
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerExtensions*
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientExtensions
  commentId: P:OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientExtensions
  id: GLXClientExtensions
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: GLXClientExtensions
  nameWithType: X11OpenGLComponent.GLXClientExtensions
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientExtensions
  type: Property
  source:
    id: GLXClientExtensions
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 27
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  syntax:
    content: public HashSet<string> GLXClientExtensions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.String}
    content.vb: Public ReadOnly Property GLXClientExtensions As HashSet(Of String)
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientExtensions*
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerVendor
  commentId: P:OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerVendor
  id: GLXServerVendor
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: GLXServerVendor
  nameWithType: X11OpenGLComponent.GLXServerVendor
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerVendor
  type: Property
  source:
    id: GLXServerVendor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 28
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  syntax:
    content: public string GLXServerVendor { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GLXServerVendor As String
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerVendor*
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientVendor
  commentId: P:OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientVendor
  id: GLXClientVendor
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: GLXClientVendor
  nameWithType: X11OpenGLComponent.GLXClientVendor
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientVendor
  type: Property
  source:
    id: GLXClientVendor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 29
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  syntax:
    content: public string GLXClientVendor { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GLXClientVendor As String
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientVendor*
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerVersion
  commentId: P:OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerVersion
  id: GLXServerVersion
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: GLXServerVersion
  nameWithType: X11OpenGLComponent.GLXServerVersion
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerVersion
  type: Property
  source:
    id: GLXServerVersion
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 30
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  syntax:
    content: public Version? GLXServerVersion { get; }
    parameters: []
    return:
      type: System.Version
    content.vb: Public Property GLXServerVersion As Version
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerVersion*
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientVersion
  commentId: P:OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientVersion
  id: GLXClientVersion
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: GLXClientVersion
  nameWithType: X11OpenGLComponent.GLXClientVersion
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientVersion
  type: Property
  source:
    id: GLXClientVersion
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 31
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  syntax:
    content: public Version? GLXClientVersion { get; }
    parameters: []
    return:
      type: System.Version
    content.vb: Public Property GLXClientVersion As Version
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientVersion*
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.Initialize(OpenTK.Platform.ToolkitOptions)
  commentId: M:OpenTK.Platform.Native.X11.X11OpenGLComponent.Initialize(OpenTK.Platform.ToolkitOptions)
  id: Initialize(OpenTK.Platform.ToolkitOptions)
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: Initialize(ToolkitOptions)
  nameWithType: X11OpenGLComponent.Initialize(ToolkitOptions)
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.Initialize(OpenTK.Platform.ToolkitOptions)
  type: Method
  source:
    id: Initialize
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 45
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: Initialize the component.
  example: []
  syntax:
    content: public void Initialize(ToolkitOptions options)
    parameters:
    - id: options
      type: OpenTK.Platform.ToolkitOptions
      description: The options to initialize the component with.
    content.vb: Public Sub Initialize(options As ToolkitOptions)
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.Initialize*
  seealso:
  - linkId: OpenTK.Platform.ToolkitOptions
    commentId: T:OpenTK.Platform.ToolkitOptions
  - linkId: OpenTK.Platform.Toolkit.Init(OpenTK.Platform.ToolkitOptions)
    commentId: M:OpenTK.Platform.Toolkit.Init(OpenTK.Platform.ToolkitOptions)
  implements:
  - OpenTK.Platform.IPalComponent.Initialize(OpenTK.Platform.ToolkitOptions)
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.Uninitialize
  commentId: M:OpenTK.Platform.Native.X11.X11OpenGLComponent.Uninitialize
  id: Uninitialize
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: Uninitialize()
  nameWithType: X11OpenGLComponent.Uninitialize()
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.Uninitialize()
  type: Method
  source:
    id: Uninitialize
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 133
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: Uninitialize the component. Frees any native resources used by the component.
  example: []
  syntax:
    content: public void Uninitialize()
    content.vb: Public Sub Uninitialize()
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.Uninitialize*
  seealso:
  - linkId: OpenTK.Platform.Toolkit.Uninit
    commentId: M:OpenTK.Platform.Toolkit.Uninit
  implements:
  - OpenTK.Platform.IPalComponent.Uninitialize
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.CanShareContexts
  commentId: P:OpenTK.Platform.Native.X11.X11OpenGLComponent.CanShareContexts
  id: CanShareContexts
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: CanShareContexts
  nameWithType: X11OpenGLComponent.CanShareContexts
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.CanShareContexts
  type: Property
  source:
    id: CanShareContexts
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 138
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: True if the component driver has the capability to share display lists between OpenGL contexts.
  example: []
  syntax:
    content: public bool CanShareContexts { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanShareContexts As Boolean
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.CanShareContexts*
  implements:
  - OpenTK.Platform.IOpenGLComponent.CanShareContexts
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.CanCreateFromWindow
  commentId: P:OpenTK.Platform.Native.X11.X11OpenGLComponent.CanCreateFromWindow
  id: CanCreateFromWindow
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: CanCreateFromWindow
  nameWithType: X11OpenGLComponent.CanCreateFromWindow
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.CanCreateFromWindow
  type: Property
  source:
    id: CanCreateFromWindow
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 141
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: True if the component driver can create a context from windows using <xref href="OpenTK.Platform.IOpenGLComponent.CreateFromWindow(OpenTK.Platform.WindowHandle)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool CanCreateFromWindow { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanCreateFromWindow As Boolean
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.CanCreateFromWindow*
  seealso:
  - linkId: OpenTK.Platform.IOpenGLComponent.CreateFromWindow(OpenTK.Platform.WindowHandle)
    commentId: M:OpenTK.Platform.IOpenGLComponent.CreateFromWindow(OpenTK.Platform.WindowHandle)
  implements:
  - OpenTK.Platform.IOpenGLComponent.CanCreateFromWindow
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.CanCreateFromSurface
  commentId: P:OpenTK.Platform.Native.X11.X11OpenGLComponent.CanCreateFromSurface
  id: CanCreateFromSurface
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: CanCreateFromSurface
  nameWithType: X11OpenGLComponent.CanCreateFromSurface
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.CanCreateFromSurface
  type: Property
  source:
    id: CanCreateFromSurface
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 144
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: True if the component driver can create a context from surfaces using <xref href="OpenTK.Platform.IOpenGLComponent.CreateFromSurface" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool CanCreateFromSurface { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanCreateFromSurface As Boolean
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.CanCreateFromSurface*
  implements:
  - OpenTK.Platform.IOpenGLComponent.CanCreateFromSurface
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.CreateFromSurface
  commentId: M:OpenTK.Platform.Native.X11.X11OpenGLComponent.CreateFromSurface
  id: CreateFromSurface
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: CreateFromSurface()
  nameWithType: X11OpenGLComponent.CreateFromSurface()
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.CreateFromSurface()
  type: Method
  source:
    id: CreateFromSurface
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 147
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: Create and OpenGL context for a surface.
  example: []
  syntax:
    content: public OpenGLContextHandle CreateFromSurface()
    return:
      type: OpenTK.Platform.OpenGLContextHandle
      description: An OpenGL context handle.
    content.vb: Public Function CreateFromSurface() As OpenGLContextHandle
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.CreateFromSurface*
  implements:
  - OpenTK.Platform.IOpenGLComponent.CreateFromSurface
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.CreateFromWindow(OpenTK.Platform.WindowHandle)
  commentId: M:OpenTK.Platform.Native.X11.X11OpenGLComponent.CreateFromWindow(OpenTK.Platform.WindowHandle)
  id: CreateFromWindow(OpenTK.Platform.WindowHandle)
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: CreateFromWindow(WindowHandle)
  nameWithType: X11OpenGLComponent.CreateFromWindow(WindowHandle)
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.CreateFromWindow(OpenTK.Platform.WindowHandle)
  type: Method
  source:
    id: CreateFromWindow
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 153
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: Create an OpenGL context for a window.
  example: []
  syntax:
    content: public OpenGLContextHandle CreateFromWindow(WindowHandle handle)
    parameters:
    - id: handle
      type: OpenTK.Platform.WindowHandle
      description: The window for which the OpenGL context should be created.
    return:
      type: OpenTK.Platform.OpenGLContextHandle
      description: An OpenGL context handle.
    content.vb: Public Function CreateFromWindow(handle As WindowHandle) As OpenGLContextHandle
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.CreateFromWindow*
  seealso:
  - linkId: OpenTK.Platform.IWindowComponent.Create(OpenTK.Platform.GraphicsApiHints)
    commentId: M:OpenTK.Platform.IWindowComponent.Create(OpenTK.Platform.GraphicsApiHints)
  - linkId: OpenTK.Platform.OpenGLGraphicsApiHints
    commentId: T:OpenTK.Platform.OpenGLGraphicsApiHints
  implements:
  - OpenTK.Platform.IOpenGLComponent.CreateFromWindow(OpenTK.Platform.WindowHandle)
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.DestroyContext(OpenTK.Platform.OpenGLContextHandle)
  commentId: M:OpenTK.Platform.Native.X11.X11OpenGLComponent.DestroyContext(OpenTK.Platform.OpenGLContextHandle)
  id: DestroyContext(OpenTK.Platform.OpenGLContextHandle)
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: DestroyContext(OpenGLContextHandle)
  nameWithType: X11OpenGLComponent.DestroyContext(OpenGLContextHandle)
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.DestroyContext(OpenTK.Platform.OpenGLContextHandle)
  type: Method
  source:
    id: DestroyContext
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 296
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: Destroy an OpenGL context.
  example: []
  syntax:
    content: public void DestroyContext(OpenGLContextHandle handle)
    parameters:
    - id: handle
      type: OpenTK.Platform.OpenGLContextHandle
      description: Handle to the OpenGL context to destroy.
    content.vb: Public Sub DestroyContext(handle As OpenGLContextHandle)
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.DestroyContext*
  seealso:
  - linkId: OpenTK.Platform.IOpenGLComponent.CreateFromWindow(OpenTK.Platform.WindowHandle)
    commentId: M:OpenTK.Platform.IOpenGLComponent.CreateFromWindow(OpenTK.Platform.WindowHandle)
  implements:
  - OpenTK.Platform.IOpenGLComponent.DestroyContext(OpenTK.Platform.OpenGLContextHandle)
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetBindingsContext(OpenTK.Platform.OpenGLContextHandle)
  commentId: M:OpenTK.Platform.Native.X11.X11OpenGLComponent.GetBindingsContext(OpenTK.Platform.OpenGLContextHandle)
  id: GetBindingsContext(OpenTK.Platform.OpenGLContextHandle)
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: GetBindingsContext(OpenGLContextHandle)
  nameWithType: X11OpenGLComponent.GetBindingsContext(OpenGLContextHandle)
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetBindingsContext(OpenTK.Platform.OpenGLContextHandle)
  type: Method
  source:
    id: GetBindingsContext
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 305
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: >-
    Gets a <xref href="OpenTK.IBindingsContext" data-throw-if-not-resolved="false"></xref> from an <xref href="OpenTK.Platform.OpenGLContextHandle" data-throw-if-not-resolved="false"></xref>.

    Pass this to <xref href="OpenTK.Graphics.GLLoader.LoadBindings(OpenTK.IBindingsContext)" data-throw-if-not-resolved="false"></xref> to load the OpenGL bindings.
  example: []
  syntax:
    content: public IBindingsContext GetBindingsContext(OpenGLContextHandle handle)
    parameters:
    - id: handle
      type: OpenTK.Platform.OpenGLContextHandle
      description: The handle to get a bindings context for.
    return:
      type: OpenTK.IBindingsContext
      description: The created bindings context.
    content.vb: Public Function GetBindingsContext(handle As OpenGLContextHandle) As IBindingsContext
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetBindingsContext*
  seealso:
  - linkId: OpenTK.Graphics.GLLoader
    commentId: T:OpenTK.Graphics.GLLoader
  - linkId: OpenTK.IBindingsContext
    commentId: T:OpenTK.IBindingsContext
  implements:
  - OpenTK.Platform.IOpenGLComponent.GetBindingsContext(OpenTK.Platform.OpenGLContextHandle)
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetProcedureAddress(OpenTK.Platform.OpenGLContextHandle,System.String)
  commentId: M:OpenTK.Platform.Native.X11.X11OpenGLComponent.GetProcedureAddress(OpenTK.Platform.OpenGLContextHandle,System.String)
  id: GetProcedureAddress(OpenTK.Platform.OpenGLContextHandle,System.String)
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: GetProcedureAddress(OpenGLContextHandle, string)
  nameWithType: X11OpenGLComponent.GetProcedureAddress(OpenGLContextHandle, string)
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetProcedureAddress(OpenTK.Platform.OpenGLContextHandle, string)
  type: Method
  source:
    id: GetProcedureAddress
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 311
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: Get the procedure address for an OpenGL command.
  example: []
  syntax:
    content: public nint GetProcedureAddress(OpenGLContextHandle handle, string procedureName)
    parameters:
    - id: handle
      type: OpenTK.Platform.OpenGLContextHandle
      description: Handle to an OpenGL context.
    - id: procedureName
      type: System.String
      description: Name of the OpenGL command.
    return:
      type: System.IntPtr
      description: The procedure address to the OpenGL command.
    content.vb: Public Function GetProcedureAddress(handle As OpenGLContextHandle, procedureName As String) As IntPtr
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetProcedureAddress*
  implements:
  - OpenTK.Platform.IOpenGLComponent.GetProcedureAddress(OpenTK.Platform.OpenGLContextHandle,System.String)
  nameWithType.vb: X11OpenGLComponent.GetProcedureAddress(OpenGLContextHandle, String)
  fullName.vb: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetProcedureAddress(OpenTK.Platform.OpenGLContextHandle, String)
  name.vb: GetProcedureAddress(OpenGLContextHandle, String)
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetCurrentContext
  commentId: M:OpenTK.Platform.Native.X11.X11OpenGLComponent.GetCurrentContext
  id: GetCurrentContext
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: GetCurrentContext()
  nameWithType: X11OpenGLComponent.GetCurrentContext()
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetCurrentContext()
  type: Method
  source:
    id: GetCurrentContext
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 318
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: Get the current OpenGL context for this thread.
  example: []
  syntax:
    content: public OpenGLContextHandle? GetCurrentContext()
    return:
      type: OpenTK.Platform.OpenGLContextHandle
      description: Handle to the current OpenGL context, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> if no context is current.
    content.vb: Public Function GetCurrentContext() As OpenGLContextHandle
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetCurrentContext*
  seealso:
  - linkId: OpenTK.Platform.IOpenGLComponent.SetCurrentContext(OpenTK.Platform.OpenGLContextHandle)
    commentId: M:OpenTK.Platform.IOpenGLComponent.SetCurrentContext(OpenTK.Platform.OpenGLContextHandle)
  implements:
  - OpenTK.Platform.IOpenGLComponent.GetCurrentContext
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.SetCurrentContext(OpenTK.Platform.OpenGLContextHandle)
  commentId: M:OpenTK.Platform.Native.X11.X11OpenGLComponent.SetCurrentContext(OpenTK.Platform.OpenGLContextHandle)
  id: SetCurrentContext(OpenTK.Platform.OpenGLContextHandle)
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: SetCurrentContext(OpenGLContextHandle?)
  nameWithType: X11OpenGLComponent.SetCurrentContext(OpenGLContextHandle?)
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.SetCurrentContext(OpenTK.Platform.OpenGLContextHandle?)
  type: Method
  source:
    id: SetCurrentContext
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 326
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: Set the current OpenGL context for this thread.
  example: []
  syntax:
    content: public bool SetCurrentContext(OpenGLContextHandle? handle)
    parameters:
    - id: handle
      type: OpenTK.Platform.OpenGLContextHandle
      description: Handle to the OpenGL context to make current, or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a> to make no context current.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> when the OpenGL context is successfully made current.
    content.vb: Public Function SetCurrentContext(handle As OpenGLContextHandle) As Boolean
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.SetCurrentContext*
  seealso:
  - linkId: OpenTK.Platform.IOpenGLComponent.GetCurrentContext
    commentId: M:OpenTK.Platform.IOpenGLComponent.GetCurrentContext
  implements:
  - OpenTK.Platform.IOpenGLComponent.SetCurrentContext(OpenTK.Platform.OpenGLContextHandle)
  nameWithType.vb: X11OpenGLComponent.SetCurrentContext(OpenGLContextHandle)
  fullName.vb: OpenTK.Platform.Native.X11.X11OpenGLComponent.SetCurrentContext(OpenTK.Platform.OpenGLContextHandle)
  name.vb: SetCurrentContext(OpenGLContextHandle)
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetSharedContext(OpenTK.Platform.OpenGLContextHandle)
  commentId: M:OpenTK.Platform.Native.X11.X11OpenGLComponent.GetSharedContext(OpenTK.Platform.OpenGLContextHandle)
  id: GetSharedContext(OpenTK.Platform.OpenGLContextHandle)
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: GetSharedContext(OpenGLContextHandle)
  nameWithType: X11OpenGLComponent.GetSharedContext(OpenGLContextHandle)
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetSharedContext(OpenTK.Platform.OpenGLContextHandle)
  type: Method
  source:
    id: GetSharedContext
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 341
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: Gets the context which the given context shares display lists with.
  example: []
  syntax:
    content: public OpenGLContextHandle? GetSharedContext(OpenGLContextHandle handle)
    parameters:
    - id: handle
      type: OpenTK.Platform.OpenGLContextHandle
      description: Handle to the OpenGL context.
    return:
      type: OpenTK.Platform.OpenGLContextHandle
      description: Handle to the OpenGL context the given context shares display lists with.
    content.vb: Public Function GetSharedContext(handle As OpenGLContextHandle) As OpenGLContextHandle
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetSharedContext*
  seealso:
  - linkId: OpenTK.Platform.OpenGLGraphicsApiHints.SharedContext
    commentId: P:OpenTK.Platform.OpenGLGraphicsApiHints.SharedContext
  implements:
  - OpenTK.Platform.IOpenGLComponent.GetSharedContext(OpenTK.Platform.OpenGLContextHandle)
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.EXT_swap_control_GetMaxSwapInterval
  commentId: M:OpenTK.Platform.Native.X11.X11OpenGLComponent.EXT_swap_control_GetMaxSwapInterval
  id: EXT_swap_control_GetMaxSwapInterval
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: EXT_swap_control_GetMaxSwapInterval()
  nameWithType: X11OpenGLComponent.EXT_swap_control_GetMaxSwapInterval()
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.EXT_swap_control_GetMaxSwapInterval()
  type: Method
  source:
    id: EXT_swap_control_GetMaxSwapInterval
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 350
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: >-
    Queries EXT_swap_control for the max supported swap interval.

    This function returns <code>null</code> if EXT_swap_control is not supported.
  example: []
  syntax:
    content: public int? EXT_swap_control_GetMaxSwapInterval()
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Function EXT_swap_control_GetMaxSwapInterval() As Integer?
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.EXT_swap_control_GetMaxSwapInterval*
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.SetSwapInterval(System.Int32)
  commentId: M:OpenTK.Platform.Native.X11.X11OpenGLComponent.SetSwapInterval(System.Int32)
  id: SetSwapInterval(System.Int32)
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: SetSwapInterval(int)
  nameWithType: X11OpenGLComponent.SetSwapInterval(int)
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.SetSwapInterval(int)
  type: Method
  source:
    id: SetSwapInterval
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 371
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: Sets the swap interval of the current OpenGL context.
  example: []
  syntax:
    content: public void SetSwapInterval(int interval)
    parameters:
    - id: interval
      type: System.Int32
      description: The new swap interval.
    content.vb: Public Sub SetSwapInterval(interval As Integer)
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.SetSwapInterval*
  implements:
  - OpenTK.Platform.IOpenGLComponent.SetSwapInterval(System.Int32)
  nameWithType.vb: X11OpenGLComponent.SetSwapInterval(Integer)
  fullName.vb: OpenTK.Platform.Native.X11.X11OpenGLComponent.SetSwapInterval(Integer)
  name.vb: SetSwapInterval(Integer)
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetSwapInterval
  commentId: M:OpenTK.Platform.Native.X11.X11OpenGLComponent.GetSwapInterval
  id: GetSwapInterval
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: GetSwapInterval()
  nameWithType: X11OpenGLComponent.GetSwapInterval()
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetSwapInterval()
  type: Method
  source:
    id: GetSwapInterval
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 417
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: Gets the swap interval of the current OpenGL context, or <code>-1</code> if no context is current.
  example: []
  syntax:
    content: public int GetSwapInterval()
    return:
      type: System.Int32
      description: The current swap interval, or <code>-1</code> if no context is current.
    content.vb: Public Function GetSwapInterval() As Integer
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetSwapInterval*
  implements:
  - OpenTK.Platform.IOpenGLComponent.GetSwapInterval
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.SwapBuffers(OpenTK.Platform.OpenGLContextHandle)
  commentId: M:OpenTK.Platform.Native.X11.X11OpenGLComponent.SwapBuffers(OpenTK.Platform.OpenGLContextHandle)
  id: SwapBuffers(OpenTK.Platform.OpenGLContextHandle)
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: SwapBuffers(OpenGLContextHandle)
  nameWithType: X11OpenGLComponent.SwapBuffers(OpenGLContextHandle)
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.SwapBuffers(OpenTK.Platform.OpenGLContextHandle)
  type: Method
  source:
    id: SwapBuffers
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 447
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: Swaps the buffer of the specified context.
  example: []
  syntax:
    content: public void SwapBuffers(OpenGLContextHandle handle)
    parameters:
    - id: handle
      type: OpenTK.Platform.OpenGLContextHandle
      description: Handle to the context.
    content.vb: Public Sub SwapBuffers(handle As OpenGLContextHandle)
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.SwapBuffers*
  seealso:
  - linkId: OpenTK.Platform.OpenGLGraphicsApiHints.SwapMethod
    commentId: P:OpenTK.Platform.OpenGLGraphicsApiHints.SwapMethod
  implements:
  - OpenTK.Platform.IOpenGLComponent.SwapBuffers(OpenTK.Platform.OpenGLContextHandle)
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetGLXContext(OpenTK.Platform.OpenGLContextHandle)
  commentId: M:OpenTK.Platform.Native.X11.X11OpenGLComponent.GetGLXContext(OpenTK.Platform.OpenGLContextHandle)
  id: GetGLXContext(OpenTK.Platform.OpenGLContextHandle)
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: GetGLXContext(OpenGLContextHandle)
  nameWithType: X11OpenGLComponent.GetGLXContext(OpenGLContextHandle)
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetGLXContext(OpenTK.Platform.OpenGLContextHandle)
  type: Method
  source:
    id: GetGLXContext
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 458
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: Gets the <code>GLXContext</code> associated with this OpenGL context.
  example: []
  syntax:
    content: public nint GetGLXContext(OpenGLContextHandle handle)
    parameters:
    - id: handle
      type: OpenTK.Platform.OpenGLContextHandle
      description: A handle to the OpenGL context to get the <code>GLXContext</code> from.
    return:
      type: System.IntPtr
      description: The <code>GLXContext</code> associated with the OpenGL context.
    content.vb: Public Function GetGLXContext(handle As OpenGLContextHandle) As IntPtr
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetGLXContext*
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetGLXWindow(OpenTK.Platform.OpenGLContextHandle)
  commentId: M:OpenTK.Platform.Native.X11.X11OpenGLComponent.GetGLXWindow(OpenTK.Platform.OpenGLContextHandle)
  id: GetGLXWindow(OpenTK.Platform.OpenGLContextHandle)
  parent: OpenTK.Platform.Native.X11.X11OpenGLComponent
  langs:
  - csharp
  - vb
  name: GetGLXWindow(OpenGLContextHandle)
  nameWithType: X11OpenGLComponent.GetGLXWindow(OpenGLContextHandle)
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetGLXWindow(OpenTK.Platform.OpenGLContextHandle)
  type: Method
  source:
    id: GetGLXWindow
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Platform\Native\X11\X11OpenGLComponent.cs
    startLine: 470
  assemblies:
  - OpenTK.Platform
  namespace: OpenTK.Platform.Native.X11
  summary: Gets the <code>GLXWindow</code> associated with this OpenGL context.
  example: []
  syntax:
    content: public nint GetGLXWindow(OpenGLContextHandle handle)
    parameters:
    - id: handle
      type: OpenTK.Platform.OpenGLContextHandle
      description: A handle to the OpenGL context to get the <code>GLXWindow</code> from.
    return:
      type: System.IntPtr
      description: The <code>GLXWindow</code> associated with the OpenGL context.
    content.vb: Public Function GetGLXWindow(handle As OpenGLContextHandle) As IntPtr
  overload: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetGLXWindow*
references:
- uid: OpenTK.Platform.Native.X11
  commentId: N:OpenTK.Platform.Native.X11
  href: OpenTK.html
  name: OpenTK.Platform.Native.X11
  nameWithType: OpenTK.Platform.Native.X11
  fullName: OpenTK.Platform.Native.X11
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Platform
    name: Platform
    href: OpenTK.Platform.html
  - name: .
  - uid: OpenTK.Platform.Native
    name: Native
    href: OpenTK.Platform.Native.html
  - name: .
  - uid: OpenTK.Platform.Native.X11
    name: X11
    href: OpenTK.Platform.Native.X11.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Platform
    name: Platform
    href: OpenTK.Platform.html
  - name: .
  - uid: OpenTK.Platform.Native
    name: Native
    href: OpenTK.Platform.Native.html
  - name: .
  - uid: OpenTK.Platform.Native.X11
    name: X11
    href: OpenTK.Platform.Native.X11.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: OpenTK.Platform.IOpenGLComponent
  commentId: T:OpenTK.Platform.IOpenGLComponent
  parent: OpenTK.Platform
  href: OpenTK.Platform.IOpenGLComponent.html
  name: IOpenGLComponent
  nameWithType: IOpenGLComponent
  fullName: OpenTK.Platform.IOpenGLComponent
- uid: OpenTK.Platform.IPalComponent
  commentId: T:OpenTK.Platform.IPalComponent
  parent: OpenTK.Platform
  href: OpenTK.Platform.IPalComponent.html
  name: IPalComponent
  nameWithType: IPalComponent
  fullName: OpenTK.Platform.IPalComponent
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTK.Platform
  commentId: N:OpenTK.Platform
  href: OpenTK.html
  name: OpenTK.Platform
  nameWithType: OpenTK.Platform
  fullName: OpenTK.Platform
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Platform
    name: Platform
    href: OpenTK.Platform.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Platform
    name: Platform
    href: OpenTK.Platform.html
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.Name*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.Name
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_Name
  name: Name
  nameWithType: X11OpenGLComponent.Name
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.Name
- uid: OpenTK.Platform.IPalComponent.Name
  commentId: P:OpenTK.Platform.IPalComponent.Name
  parent: OpenTK.Platform.IPalComponent
  href: OpenTK.Platform.IPalComponent.html#OpenTK_Platform_IPalComponent_Name
  name: Name
  nameWithType: IPalComponent.Name
  fullName: OpenTK.Platform.IPalComponent.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.Provides*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.Provides
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_Provides
  name: Provides
  nameWithType: X11OpenGLComponent.Provides
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.Provides
- uid: OpenTK.Platform.IPalComponent.Provides
  commentId: P:OpenTK.Platform.IPalComponent.Provides
  parent: OpenTK.Platform.IPalComponent
  href: OpenTK.Platform.IPalComponent.html#OpenTK_Platform_IPalComponent_Provides
  name: Provides
  nameWithType: IPalComponent.Provides
  fullName: OpenTK.Platform.IPalComponent.Provides
- uid: OpenTK.Platform.PalComponents
  commentId: T:OpenTK.Platform.PalComponents
  parent: OpenTK.Platform
  href: OpenTK.Platform.PalComponents.html
  name: PalComponents
  nameWithType: PalComponents
  fullName: OpenTK.Platform.PalComponents
- uid: OpenTK.Core.Utility.ILogger
  commentId: T:OpenTK.Core.Utility.ILogger
  parent: OpenTK.Core.Utility
  href: OpenTK.Core.Utility.ILogger.html
  name: ILogger
  nameWithType: ILogger
  fullName: OpenTK.Core.Utility.ILogger
- uid: OpenTK.Platform.ToolkitOptions.Logger
  commentId: P:OpenTK.Platform.ToolkitOptions.Logger
  href: OpenTK.Platform.ToolkitOptions.html#OpenTK_Platform_ToolkitOptions_Logger
  name: Logger
  nameWithType: ToolkitOptions.Logger
  fullName: OpenTK.Platform.ToolkitOptions.Logger
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.Logger*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.Logger
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_Logger
  name: Logger
  nameWithType: X11OpenGLComponent.Logger
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.Logger
- uid: OpenTK.Platform.IPalComponent.Logger
  commentId: P:OpenTK.Platform.IPalComponent.Logger
  parent: OpenTK.Platform.IPalComponent
  href: OpenTK.Platform.IPalComponent.html#OpenTK_Platform_IPalComponent_Logger
  name: Logger
  nameWithType: IPalComponent.Logger
  fullName: OpenTK.Platform.IPalComponent.Logger
- uid: OpenTK.Core.Utility
  commentId: N:OpenTK.Core.Utility
  href: OpenTK.html
  name: OpenTK.Core.Utility
  nameWithType: OpenTK.Core.Utility
  fullName: OpenTK.Core.Utility
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Core
    name: Core
    href: OpenTK.Core.html
  - name: .
  - uid: OpenTK.Core.Utility
    name: Utility
    href: OpenTK.Core.Utility.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Core
    name: Core
    href: OpenTK.Core.html
  - name: .
  - uid: OpenTK.Core.Utility
    name: Utility
    href: OpenTK.Core.Utility.html
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXVersion*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXVersion
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_GLXVersion
  name: GLXVersion
  nameWithType: X11OpenGLComponent.GLXVersion
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXVersion
- uid: System.Version
  commentId: T:System.Version
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.version
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXExtensions*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXExtensions
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_GLXExtensions
  name: GLXExtensions
  nameWithType: X11OpenGLComponent.GLXExtensions
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXExtensions
- uid: System.Collections.Generic.HashSet{System.String}
  commentId: T:System.Collections.Generic.HashSet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<string>
  nameWithType: HashSet<string>
  fullName: System.Collections.Generic.HashSet<string>
  nameWithType.vb: HashSet(Of String)
  fullName.vb: System.Collections.Generic.HashSet(Of String)
  name.vb: HashSet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerExtensions*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerExtensions
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_GLXServerExtensions
  name: GLXServerExtensions
  nameWithType: X11OpenGLComponent.GLXServerExtensions
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerExtensions
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientExtensions*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientExtensions
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_GLXClientExtensions
  name: GLXClientExtensions
  nameWithType: X11OpenGLComponent.GLXClientExtensions
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientExtensions
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerVendor*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerVendor
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_GLXServerVendor
  name: GLXServerVendor
  nameWithType: X11OpenGLComponent.GLXServerVendor
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerVendor
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientVendor*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientVendor
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_GLXClientVendor
  name: GLXClientVendor
  nameWithType: X11OpenGLComponent.GLXClientVendor
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientVendor
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerVersion*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerVersion
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_GLXServerVersion
  name: GLXServerVersion
  nameWithType: X11OpenGLComponent.GLXServerVersion
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXServerVersion
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientVersion*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientVersion
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_GLXClientVersion
  name: GLXClientVersion
  nameWithType: X11OpenGLComponent.GLXClientVersion
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GLXClientVersion
- uid: OpenTK.Platform.ToolkitOptions
  commentId: T:OpenTK.Platform.ToolkitOptions
  parent: OpenTK.Platform
  href: OpenTK.Platform.ToolkitOptions.html
  name: ToolkitOptions
  nameWithType: ToolkitOptions
  fullName: OpenTK.Platform.ToolkitOptions
- uid: OpenTK.Platform.Toolkit.Init(OpenTK.Platform.ToolkitOptions)
  commentId: M:OpenTK.Platform.Toolkit.Init(OpenTK.Platform.ToolkitOptions)
  href: OpenTK.Platform.Toolkit.html#OpenTK_Platform_Toolkit_Init_OpenTK_Platform_ToolkitOptions_
  name: Init(ToolkitOptions)
  nameWithType: Toolkit.Init(ToolkitOptions)
  fullName: OpenTK.Platform.Toolkit.Init(OpenTK.Platform.ToolkitOptions)
  spec.csharp:
  - uid: OpenTK.Platform.Toolkit.Init(OpenTK.Platform.ToolkitOptions)
    name: Init
    href: OpenTK.Platform.Toolkit.html#OpenTK_Platform_Toolkit_Init_OpenTK_Platform_ToolkitOptions_
  - name: (
  - uid: OpenTK.Platform.ToolkitOptions
    name: ToolkitOptions
    href: OpenTK.Platform.ToolkitOptions.html
  - name: )
  spec.vb:
  - uid: OpenTK.Platform.Toolkit.Init(OpenTK.Platform.ToolkitOptions)
    name: Init
    href: OpenTK.Platform.Toolkit.html#OpenTK_Platform_Toolkit_Init_OpenTK_Platform_ToolkitOptions_
  - name: (
  - uid: OpenTK.Platform.ToolkitOptions
    name: ToolkitOptions
    href: OpenTK.Platform.ToolkitOptions.html
  - name: )
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.Initialize*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.Initialize
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_Initialize_OpenTK_Platform_ToolkitOptions_
  name: Initialize
  nameWithType: X11OpenGLComponent.Initialize
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.Initialize
- uid: OpenTK.Platform.IPalComponent.Initialize(OpenTK.Platform.ToolkitOptions)
  commentId: M:OpenTK.Platform.IPalComponent.Initialize(OpenTK.Platform.ToolkitOptions)
  parent: OpenTK.Platform.IPalComponent
  href: OpenTK.Platform.IPalComponent.html#OpenTK_Platform_IPalComponent_Initialize_OpenTK_Platform_ToolkitOptions_
  name: Initialize(ToolkitOptions)
  nameWithType: IPalComponent.Initialize(ToolkitOptions)
  fullName: OpenTK.Platform.IPalComponent.Initialize(OpenTK.Platform.ToolkitOptions)
  spec.csharp:
  - uid: OpenTK.Platform.IPalComponent.Initialize(OpenTK.Platform.ToolkitOptions)
    name: Initialize
    href: OpenTK.Platform.IPalComponent.html#OpenTK_Platform_IPalComponent_Initialize_OpenTK_Platform_ToolkitOptions_
  - name: (
  - uid: OpenTK.Platform.ToolkitOptions
    name: ToolkitOptions
    href: OpenTK.Platform.ToolkitOptions.html
  - name: )
  spec.vb:
  - uid: OpenTK.Platform.IPalComponent.Initialize(OpenTK.Platform.ToolkitOptions)
    name: Initialize
    href: OpenTK.Platform.IPalComponent.html#OpenTK_Platform_IPalComponent_Initialize_OpenTK_Platform_ToolkitOptions_
  - name: (
  - uid: OpenTK.Platform.ToolkitOptions
    name: ToolkitOptions
    href: OpenTK.Platform.ToolkitOptions.html
  - name: )
- uid: OpenTK.Platform.Toolkit.Uninit
  commentId: M:OpenTK.Platform.Toolkit.Uninit
  href: OpenTK.Platform.Toolkit.html#OpenTK_Platform_Toolkit_Uninit
  name: Uninit()
  nameWithType: Toolkit.Uninit()
  fullName: OpenTK.Platform.Toolkit.Uninit()
  spec.csharp:
  - uid: OpenTK.Platform.Toolkit.Uninit
    name: Uninit
    href: OpenTK.Platform.Toolkit.html#OpenTK_Platform_Toolkit_Uninit
  - name: (
  - name: )
  spec.vb:
  - uid: OpenTK.Platform.Toolkit.Uninit
    name: Uninit
    href: OpenTK.Platform.Toolkit.html#OpenTK_Platform_Toolkit_Uninit
  - name: (
  - name: )
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.Uninitialize*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.Uninitialize
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_Uninitialize
  name: Uninitialize
  nameWithType: X11OpenGLComponent.Uninitialize
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.Uninitialize
- uid: OpenTK.Platform.IPalComponent.Uninitialize
  commentId: M:OpenTK.Platform.IPalComponent.Uninitialize
  parent: OpenTK.Platform.IPalComponent
  href: OpenTK.Platform.IPalComponent.html#OpenTK_Platform_IPalComponent_Uninitialize
  name: Uninitialize()
  nameWithType: IPalComponent.Uninitialize()
  fullName: OpenTK.Platform.IPalComponent.Uninitialize()
  spec.csharp:
  - uid: OpenTK.Platform.IPalComponent.Uninitialize
    name: Uninitialize
    href: OpenTK.Platform.IPalComponent.html#OpenTK_Platform_IPalComponent_Uninitialize
  - name: (
  - name: )
  spec.vb:
  - uid: OpenTK.Platform.IPalComponent.Uninitialize
    name: Uninitialize
    href: OpenTK.Platform.IPalComponent.html#OpenTK_Platform_IPalComponent_Uninitialize
  - name: (
  - name: )
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.CanShareContexts*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.CanShareContexts
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_CanShareContexts
  name: CanShareContexts
  nameWithType: X11OpenGLComponent.CanShareContexts
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.CanShareContexts
- uid: OpenTK.Platform.IOpenGLComponent.CanShareContexts
  commentId: P:OpenTK.Platform.IOpenGLComponent.CanShareContexts
  parent: OpenTK.Platform.IOpenGLComponent
  href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_CanShareContexts
  name: CanShareContexts
  nameWithType: IOpenGLComponent.CanShareContexts
  fullName: OpenTK.Platform.IOpenGLComponent.CanShareContexts
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenTK.Platform.IOpenGLComponent.CreateFromWindow(OpenTK.Platform.WindowHandle)
  commentId: M:OpenTK.Platform.IOpenGLComponent.CreateFromWindow(OpenTK.Platform.WindowHandle)
  parent: OpenTK.Platform.IOpenGLComponent
  href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_CreateFromWindow_OpenTK_Platform_WindowHandle_
  name: CreateFromWindow(WindowHandle)
  nameWithType: IOpenGLComponent.CreateFromWindow(WindowHandle)
  fullName: OpenTK.Platform.IOpenGLComponent.CreateFromWindow(OpenTK.Platform.WindowHandle)
  spec.csharp:
  - uid: OpenTK.Platform.IOpenGLComponent.CreateFromWindow(OpenTK.Platform.WindowHandle)
    name: CreateFromWindow
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_CreateFromWindow_OpenTK_Platform_WindowHandle_
  - name: (
  - uid: OpenTK.Platform.WindowHandle
    name: WindowHandle
    href: OpenTK.Platform.WindowHandle.html
  - name: )
  spec.vb:
  - uid: OpenTK.Platform.IOpenGLComponent.CreateFromWindow(OpenTK.Platform.WindowHandle)
    name: CreateFromWindow
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_CreateFromWindow_OpenTK_Platform_WindowHandle_
  - name: (
  - uid: OpenTK.Platform.WindowHandle
    name: WindowHandle
    href: OpenTK.Platform.WindowHandle.html
  - name: )
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.CanCreateFromWindow*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.CanCreateFromWindow
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_CanCreateFromWindow
  name: CanCreateFromWindow
  nameWithType: X11OpenGLComponent.CanCreateFromWindow
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.CanCreateFromWindow
- uid: OpenTK.Platform.IOpenGLComponent.CanCreateFromWindow
  commentId: P:OpenTK.Platform.IOpenGLComponent.CanCreateFromWindow
  parent: OpenTK.Platform.IOpenGLComponent
  href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_CanCreateFromWindow
  name: CanCreateFromWindow
  nameWithType: IOpenGLComponent.CanCreateFromWindow
  fullName: OpenTK.Platform.IOpenGLComponent.CanCreateFromWindow
- uid: OpenTK.Platform.IOpenGLComponent.CreateFromSurface
  commentId: M:OpenTK.Platform.IOpenGLComponent.CreateFromSurface
  parent: OpenTK.Platform.IOpenGLComponent
  href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_CreateFromSurface
  name: CreateFromSurface()
  nameWithType: IOpenGLComponent.CreateFromSurface()
  fullName: OpenTK.Platform.IOpenGLComponent.CreateFromSurface()
  spec.csharp:
  - uid: OpenTK.Platform.IOpenGLComponent.CreateFromSurface
    name: CreateFromSurface
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_CreateFromSurface
  - name: (
  - name: )
  spec.vb:
  - uid: OpenTK.Platform.IOpenGLComponent.CreateFromSurface
    name: CreateFromSurface
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_CreateFromSurface
  - name: (
  - name: )
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.CanCreateFromSurface*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.CanCreateFromSurface
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_CanCreateFromSurface
  name: CanCreateFromSurface
  nameWithType: X11OpenGLComponent.CanCreateFromSurface
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.CanCreateFromSurface
- uid: OpenTK.Platform.IOpenGLComponent.CanCreateFromSurface
  commentId: P:OpenTK.Platform.IOpenGLComponent.CanCreateFromSurface
  parent: OpenTK.Platform.IOpenGLComponent
  href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_CanCreateFromSurface
  name: CanCreateFromSurface
  nameWithType: IOpenGLComponent.CanCreateFromSurface
  fullName: OpenTK.Platform.IOpenGLComponent.CanCreateFromSurface
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.CreateFromSurface*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.CreateFromSurface
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_CreateFromSurface
  name: CreateFromSurface
  nameWithType: X11OpenGLComponent.CreateFromSurface
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.CreateFromSurface
- uid: OpenTK.Platform.OpenGLContextHandle
  commentId: T:OpenTK.Platform.OpenGLContextHandle
  parent: OpenTK.Platform
  href: OpenTK.Platform.OpenGLContextHandle.html
  name: OpenGLContextHandle
  nameWithType: OpenGLContextHandle
  fullName: OpenTK.Platform.OpenGLContextHandle
- uid: OpenTK.Platform.IWindowComponent.Create(OpenTK.Platform.GraphicsApiHints)
  commentId: M:OpenTK.Platform.IWindowComponent.Create(OpenTK.Platform.GraphicsApiHints)
  parent: OpenTK.Platform.IWindowComponent
  href: OpenTK.Platform.IWindowComponent.html#OpenTK_Platform_IWindowComponent_Create_OpenTK_Platform_GraphicsApiHints_
  name: Create(GraphicsApiHints)
  nameWithType: IWindowComponent.Create(GraphicsApiHints)
  fullName: OpenTK.Platform.IWindowComponent.Create(OpenTK.Platform.GraphicsApiHints)
  spec.csharp:
  - uid: OpenTK.Platform.IWindowComponent.Create(OpenTK.Platform.GraphicsApiHints)
    name: Create
    href: OpenTK.Platform.IWindowComponent.html#OpenTK_Platform_IWindowComponent_Create_OpenTK_Platform_GraphicsApiHints_
  - name: (
  - uid: OpenTK.Platform.GraphicsApiHints
    name: GraphicsApiHints
    href: OpenTK.Platform.GraphicsApiHints.html
  - name: )
  spec.vb:
  - uid: OpenTK.Platform.IWindowComponent.Create(OpenTK.Platform.GraphicsApiHints)
    name: Create
    href: OpenTK.Platform.IWindowComponent.html#OpenTK_Platform_IWindowComponent_Create_OpenTK_Platform_GraphicsApiHints_
  - name: (
  - uid: OpenTK.Platform.GraphicsApiHints
    name: GraphicsApiHints
    href: OpenTK.Platform.GraphicsApiHints.html
  - name: )
- uid: OpenTK.Platform.OpenGLGraphicsApiHints
  commentId: T:OpenTK.Platform.OpenGLGraphicsApiHints
  parent: OpenTK.Platform
  href: OpenTK.Platform.OpenGLGraphicsApiHints.html
  name: OpenGLGraphicsApiHints
  nameWithType: OpenGLGraphicsApiHints
  fullName: OpenTK.Platform.OpenGLGraphicsApiHints
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.CreateFromWindow*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.CreateFromWindow
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_CreateFromWindow_OpenTK_Platform_WindowHandle_
  name: CreateFromWindow
  nameWithType: X11OpenGLComponent.CreateFromWindow
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.CreateFromWindow
- uid: OpenTK.Platform.WindowHandle
  commentId: T:OpenTK.Platform.WindowHandle
  parent: OpenTK.Platform
  href: OpenTK.Platform.WindowHandle.html
  name: WindowHandle
  nameWithType: WindowHandle
  fullName: OpenTK.Platform.WindowHandle
- uid: OpenTK.Platform.IWindowComponent
  commentId: T:OpenTK.Platform.IWindowComponent
  parent: OpenTK.Platform
  href: OpenTK.Platform.IWindowComponent.html
  name: IWindowComponent
  nameWithType: IWindowComponent
  fullName: OpenTK.Platform.IWindowComponent
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.DestroyContext*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.DestroyContext
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_DestroyContext_OpenTK_Platform_OpenGLContextHandle_
  name: DestroyContext
  nameWithType: X11OpenGLComponent.DestroyContext
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.DestroyContext
- uid: OpenTK.Platform.IOpenGLComponent.DestroyContext(OpenTK.Platform.OpenGLContextHandle)
  commentId: M:OpenTK.Platform.IOpenGLComponent.DestroyContext(OpenTK.Platform.OpenGLContextHandle)
  parent: OpenTK.Platform.IOpenGLComponent
  href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_DestroyContext_OpenTK_Platform_OpenGLContextHandle_
  name: DestroyContext(OpenGLContextHandle)
  nameWithType: IOpenGLComponent.DestroyContext(OpenGLContextHandle)
  fullName: OpenTK.Platform.IOpenGLComponent.DestroyContext(OpenTK.Platform.OpenGLContextHandle)
  spec.csharp:
  - uid: OpenTK.Platform.IOpenGLComponent.DestroyContext(OpenTK.Platform.OpenGLContextHandle)
    name: DestroyContext
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_DestroyContext_OpenTK_Platform_OpenGLContextHandle_
  - name: (
  - uid: OpenTK.Platform.OpenGLContextHandle
    name: OpenGLContextHandle
    href: OpenTK.Platform.OpenGLContextHandle.html
  - name: )
  spec.vb:
  - uid: OpenTK.Platform.IOpenGLComponent.DestroyContext(OpenTK.Platform.OpenGLContextHandle)
    name: DestroyContext
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_DestroyContext_OpenTK_Platform_OpenGLContextHandle_
  - name: (
  - uid: OpenTK.Platform.OpenGLContextHandle
    name: OpenGLContextHandle
    href: OpenTK.Platform.OpenGLContextHandle.html
  - name: )
- uid: OpenTK.Graphics.GLLoader
  commentId: T:OpenTK.Graphics.GLLoader
  href: OpenTK.Graphics.GLLoader.html
  name: GLLoader
  nameWithType: GLLoader
  fullName: OpenTK.Graphics.GLLoader
- uid: OpenTK.IBindingsContext
  commentId: T:OpenTK.IBindingsContext
  parent: OpenTK
  href: OpenTK.IBindingsContext.html
  name: IBindingsContext
  nameWithType: IBindingsContext
  fullName: OpenTK.IBindingsContext
- uid: OpenTK.Graphics.GLLoader.LoadBindings(OpenTK.IBindingsContext)
  commentId: M:OpenTK.Graphics.GLLoader.LoadBindings(OpenTK.IBindingsContext)
  href: OpenTK.Graphics.GLLoader.html#OpenTK_Graphics_GLLoader_LoadBindings_OpenTK_IBindingsContext_
  name: LoadBindings(IBindingsContext)
  nameWithType: GLLoader.LoadBindings(IBindingsContext)
  fullName: OpenTK.Graphics.GLLoader.LoadBindings(OpenTK.IBindingsContext)
  spec.csharp:
  - uid: OpenTK.Graphics.GLLoader.LoadBindings(OpenTK.IBindingsContext)
    name: LoadBindings
    href: OpenTK.Graphics.GLLoader.html#OpenTK_Graphics_GLLoader_LoadBindings_OpenTK_IBindingsContext_
  - name: (
  - uid: OpenTK.IBindingsContext
    name: IBindingsContext
    href: OpenTK.IBindingsContext.html
  - name: )
  spec.vb:
  - uid: OpenTK.Graphics.GLLoader.LoadBindings(OpenTK.IBindingsContext)
    name: LoadBindings
    href: OpenTK.Graphics.GLLoader.html#OpenTK_Graphics_GLLoader_LoadBindings_OpenTK_IBindingsContext_
  - name: (
  - uid: OpenTK.IBindingsContext
    name: IBindingsContext
    href: OpenTK.IBindingsContext.html
  - name: )
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetBindingsContext*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.GetBindingsContext
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_GetBindingsContext_OpenTK_Platform_OpenGLContextHandle_
  name: GetBindingsContext
  nameWithType: X11OpenGLComponent.GetBindingsContext
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetBindingsContext
- uid: OpenTK.Platform.IOpenGLComponent.GetBindingsContext(OpenTK.Platform.OpenGLContextHandle)
  commentId: M:OpenTK.Platform.IOpenGLComponent.GetBindingsContext(OpenTK.Platform.OpenGLContextHandle)
  parent: OpenTK.Platform.IOpenGLComponent
  href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_GetBindingsContext_OpenTK_Platform_OpenGLContextHandle_
  name: GetBindingsContext(OpenGLContextHandle)
  nameWithType: IOpenGLComponent.GetBindingsContext(OpenGLContextHandle)
  fullName: OpenTK.Platform.IOpenGLComponent.GetBindingsContext(OpenTK.Platform.OpenGLContextHandle)
  spec.csharp:
  - uid: OpenTK.Platform.IOpenGLComponent.GetBindingsContext(OpenTK.Platform.OpenGLContextHandle)
    name: GetBindingsContext
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_GetBindingsContext_OpenTK_Platform_OpenGLContextHandle_
  - name: (
  - uid: OpenTK.Platform.OpenGLContextHandle
    name: OpenGLContextHandle
    href: OpenTK.Platform.OpenGLContextHandle.html
  - name: )
  spec.vb:
  - uid: OpenTK.Platform.IOpenGLComponent.GetBindingsContext(OpenTK.Platform.OpenGLContextHandle)
    name: GetBindingsContext
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_GetBindingsContext_OpenTK_Platform_OpenGLContextHandle_
  - name: (
  - uid: OpenTK.Platform.OpenGLContextHandle
    name: OpenGLContextHandle
    href: OpenTK.Platform.OpenGLContextHandle.html
  - name: )
- uid: OpenTK
  commentId: N:OpenTK
  href: OpenTK.html
  name: OpenTK
  nameWithType: OpenTK
  fullName: OpenTK
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetProcedureAddress*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.GetProcedureAddress
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_GetProcedureAddress_OpenTK_Platform_OpenGLContextHandle_System_String_
  name: GetProcedureAddress
  nameWithType: X11OpenGLComponent.GetProcedureAddress
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetProcedureAddress
- uid: OpenTK.Platform.IOpenGLComponent.GetProcedureAddress(OpenTK.Platform.OpenGLContextHandle,System.String)
  commentId: M:OpenTK.Platform.IOpenGLComponent.GetProcedureAddress(OpenTK.Platform.OpenGLContextHandle,System.String)
  parent: OpenTK.Platform.IOpenGLComponent
  isExternal: true
  href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_GetProcedureAddress_OpenTK_Platform_OpenGLContextHandle_System_String_
  name: GetProcedureAddress(OpenGLContextHandle, string)
  nameWithType: IOpenGLComponent.GetProcedureAddress(OpenGLContextHandle, string)
  fullName: OpenTK.Platform.IOpenGLComponent.GetProcedureAddress(OpenTK.Platform.OpenGLContextHandle, string)
  nameWithType.vb: IOpenGLComponent.GetProcedureAddress(OpenGLContextHandle, String)
  fullName.vb: OpenTK.Platform.IOpenGLComponent.GetProcedureAddress(OpenTK.Platform.OpenGLContextHandle, String)
  name.vb: GetProcedureAddress(OpenGLContextHandle, String)
  spec.csharp:
  - uid: OpenTK.Platform.IOpenGLComponent.GetProcedureAddress(OpenTK.Platform.OpenGLContextHandle,System.String)
    name: GetProcedureAddress
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_GetProcedureAddress_OpenTK_Platform_OpenGLContextHandle_System_String_
  - name: (
  - uid: OpenTK.Platform.OpenGLContextHandle
    name: OpenGLContextHandle
    href: OpenTK.Platform.OpenGLContextHandle.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: OpenTK.Platform.IOpenGLComponent.GetProcedureAddress(OpenTK.Platform.OpenGLContextHandle,System.String)
    name: GetProcedureAddress
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_GetProcedureAddress_OpenTK_Platform_OpenGLContextHandle_System_String_
  - name: (
  - uid: OpenTK.Platform.OpenGLContextHandle
    name: OpenGLContextHandle
    href: OpenTK.Platform.OpenGLContextHandle.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: nint
  nameWithType: nint
  fullName: nint
  nameWithType.vb: IntPtr
  fullName.vb: System.IntPtr
  name.vb: IntPtr
- uid: OpenTK.Platform.IOpenGLComponent.SetCurrentContext(OpenTK.Platform.OpenGLContextHandle)
  commentId: M:OpenTK.Platform.IOpenGLComponent.SetCurrentContext(OpenTK.Platform.OpenGLContextHandle)
  parent: OpenTK.Platform.IOpenGLComponent
  href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_SetCurrentContext_OpenTK_Platform_OpenGLContextHandle_
  name: SetCurrentContext(OpenGLContextHandle)
  nameWithType: IOpenGLComponent.SetCurrentContext(OpenGLContextHandle)
  fullName: OpenTK.Platform.IOpenGLComponent.SetCurrentContext(OpenTK.Platform.OpenGLContextHandle)
  spec.csharp:
  - uid: OpenTK.Platform.IOpenGLComponent.SetCurrentContext(OpenTK.Platform.OpenGLContextHandle)
    name: SetCurrentContext
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_SetCurrentContext_OpenTK_Platform_OpenGLContextHandle_
  - name: (
  - uid: OpenTK.Platform.OpenGLContextHandle
    name: OpenGLContextHandle
    href: OpenTK.Platform.OpenGLContextHandle.html
  - name: )
  spec.vb:
  - uid: OpenTK.Platform.IOpenGLComponent.SetCurrentContext(OpenTK.Platform.OpenGLContextHandle)
    name: SetCurrentContext
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_SetCurrentContext_OpenTK_Platform_OpenGLContextHandle_
  - name: (
  - uid: OpenTK.Platform.OpenGLContextHandle
    name: OpenGLContextHandle
    href: OpenTK.Platform.OpenGLContextHandle.html
  - name: )
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetCurrentContext*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.GetCurrentContext
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_GetCurrentContext
  name: GetCurrentContext
  nameWithType: X11OpenGLComponent.GetCurrentContext
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetCurrentContext
- uid: OpenTK.Platform.IOpenGLComponent.GetCurrentContext
  commentId: M:OpenTK.Platform.IOpenGLComponent.GetCurrentContext
  parent: OpenTK.Platform.IOpenGLComponent
  href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_GetCurrentContext
  name: GetCurrentContext()
  nameWithType: IOpenGLComponent.GetCurrentContext()
  fullName: OpenTK.Platform.IOpenGLComponent.GetCurrentContext()
  spec.csharp:
  - uid: OpenTK.Platform.IOpenGLComponent.GetCurrentContext
    name: GetCurrentContext
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_GetCurrentContext
  - name: (
  - name: )
  spec.vb:
  - uid: OpenTK.Platform.IOpenGLComponent.GetCurrentContext
    name: GetCurrentContext
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_GetCurrentContext
  - name: (
  - name: )
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.SetCurrentContext*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.SetCurrentContext
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_SetCurrentContext_OpenTK_Platform_OpenGLContextHandle_
  name: SetCurrentContext
  nameWithType: X11OpenGLComponent.SetCurrentContext
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.SetCurrentContext
- uid: OpenTK.Platform.OpenGLGraphicsApiHints.SharedContext
  commentId: P:OpenTK.Platform.OpenGLGraphicsApiHints.SharedContext
  href: OpenTK.Platform.OpenGLGraphicsApiHints.html#OpenTK_Platform_OpenGLGraphicsApiHints_SharedContext
  name: SharedContext
  nameWithType: OpenGLGraphicsApiHints.SharedContext
  fullName: OpenTK.Platform.OpenGLGraphicsApiHints.SharedContext
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetSharedContext*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.GetSharedContext
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_GetSharedContext_OpenTK_Platform_OpenGLContextHandle_
  name: GetSharedContext
  nameWithType: X11OpenGLComponent.GetSharedContext
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetSharedContext
- uid: OpenTK.Platform.IOpenGLComponent.GetSharedContext(OpenTK.Platform.OpenGLContextHandle)
  commentId: M:OpenTK.Platform.IOpenGLComponent.GetSharedContext(OpenTK.Platform.OpenGLContextHandle)
  parent: OpenTK.Platform.IOpenGLComponent
  href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_GetSharedContext_OpenTK_Platform_OpenGLContextHandle_
  name: GetSharedContext(OpenGLContextHandle)
  nameWithType: IOpenGLComponent.GetSharedContext(OpenGLContextHandle)
  fullName: OpenTK.Platform.IOpenGLComponent.GetSharedContext(OpenTK.Platform.OpenGLContextHandle)
  spec.csharp:
  - uid: OpenTK.Platform.IOpenGLComponent.GetSharedContext(OpenTK.Platform.OpenGLContextHandle)
    name: GetSharedContext
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_GetSharedContext_OpenTK_Platform_OpenGLContextHandle_
  - name: (
  - uid: OpenTK.Platform.OpenGLContextHandle
    name: OpenGLContextHandle
    href: OpenTK.Platform.OpenGLContextHandle.html
  - name: )
  spec.vb:
  - uid: OpenTK.Platform.IOpenGLComponent.GetSharedContext(OpenTK.Platform.OpenGLContextHandle)
    name: GetSharedContext
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_GetSharedContext_OpenTK_Platform_OpenGLContextHandle_
  - name: (
  - uid: OpenTK.Platform.OpenGLContextHandle
    name: OpenGLContextHandle
    href: OpenTK.Platform.OpenGLContextHandle.html
  - name: )
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.EXT_swap_control_GetMaxSwapInterval*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.EXT_swap_control_GetMaxSwapInterval
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_EXT_swap_control_GetMaxSwapInterval
  name: EXT_swap_control_GetMaxSwapInterval
  nameWithType: X11OpenGLComponent.EXT_swap_control_GetMaxSwapInterval
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.EXT_swap_control_GetMaxSwapInterval
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.SetSwapInterval*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.SetSwapInterval
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_SetSwapInterval_System_Int32_
  name: SetSwapInterval
  nameWithType: X11OpenGLComponent.SetSwapInterval
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.SetSwapInterval
- uid: OpenTK.Platform.IOpenGLComponent.SetSwapInterval(System.Int32)
  commentId: M:OpenTK.Platform.IOpenGLComponent.SetSwapInterval(System.Int32)
  parent: OpenTK.Platform.IOpenGLComponent
  isExternal: true
  href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_SetSwapInterval_System_Int32_
  name: SetSwapInterval(int)
  nameWithType: IOpenGLComponent.SetSwapInterval(int)
  fullName: OpenTK.Platform.IOpenGLComponent.SetSwapInterval(int)
  nameWithType.vb: IOpenGLComponent.SetSwapInterval(Integer)
  fullName.vb: OpenTK.Platform.IOpenGLComponent.SetSwapInterval(Integer)
  name.vb: SetSwapInterval(Integer)
  spec.csharp:
  - uid: OpenTK.Platform.IOpenGLComponent.SetSwapInterval(System.Int32)
    name: SetSwapInterval
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_SetSwapInterval_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: OpenTK.Platform.IOpenGLComponent.SetSwapInterval(System.Int32)
    name: SetSwapInterval
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_SetSwapInterval_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetSwapInterval*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.GetSwapInterval
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_GetSwapInterval
  name: GetSwapInterval
  nameWithType: X11OpenGLComponent.GetSwapInterval
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetSwapInterval
- uid: OpenTK.Platform.IOpenGLComponent.GetSwapInterval
  commentId: M:OpenTK.Platform.IOpenGLComponent.GetSwapInterval
  parent: OpenTK.Platform.IOpenGLComponent
  href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_GetSwapInterval
  name: GetSwapInterval()
  nameWithType: IOpenGLComponent.GetSwapInterval()
  fullName: OpenTK.Platform.IOpenGLComponent.GetSwapInterval()
  spec.csharp:
  - uid: OpenTK.Platform.IOpenGLComponent.GetSwapInterval
    name: GetSwapInterval
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_GetSwapInterval
  - name: (
  - name: )
  spec.vb:
  - uid: OpenTK.Platform.IOpenGLComponent.GetSwapInterval
    name: GetSwapInterval
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_GetSwapInterval
  - name: (
  - name: )
- uid: OpenTK.Platform.OpenGLGraphicsApiHints.SwapMethod
  commentId: P:OpenTK.Platform.OpenGLGraphicsApiHints.SwapMethod
  href: OpenTK.Platform.OpenGLGraphicsApiHints.html#OpenTK_Platform_OpenGLGraphicsApiHints_SwapMethod
  name: SwapMethod
  nameWithType: OpenGLGraphicsApiHints.SwapMethod
  fullName: OpenTK.Platform.OpenGLGraphicsApiHints.SwapMethod
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.SwapBuffers*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.SwapBuffers
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_SwapBuffers_OpenTK_Platform_OpenGLContextHandle_
  name: SwapBuffers
  nameWithType: X11OpenGLComponent.SwapBuffers
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.SwapBuffers
- uid: OpenTK.Platform.IOpenGLComponent.SwapBuffers(OpenTK.Platform.OpenGLContextHandle)
  commentId: M:OpenTK.Platform.IOpenGLComponent.SwapBuffers(OpenTK.Platform.OpenGLContextHandle)
  parent: OpenTK.Platform.IOpenGLComponent
  href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_SwapBuffers_OpenTK_Platform_OpenGLContextHandle_
  name: SwapBuffers(OpenGLContextHandle)
  nameWithType: IOpenGLComponent.SwapBuffers(OpenGLContextHandle)
  fullName: OpenTK.Platform.IOpenGLComponent.SwapBuffers(OpenTK.Platform.OpenGLContextHandle)
  spec.csharp:
  - uid: OpenTK.Platform.IOpenGLComponent.SwapBuffers(OpenTK.Platform.OpenGLContextHandle)
    name: SwapBuffers
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_SwapBuffers_OpenTK_Platform_OpenGLContextHandle_
  - name: (
  - uid: OpenTK.Platform.OpenGLContextHandle
    name: OpenGLContextHandle
    href: OpenTK.Platform.OpenGLContextHandle.html
  - name: )
  spec.vb:
  - uid: OpenTK.Platform.IOpenGLComponent.SwapBuffers(OpenTK.Platform.OpenGLContextHandle)
    name: SwapBuffers
    href: OpenTK.Platform.IOpenGLComponent.html#OpenTK_Platform_IOpenGLComponent_SwapBuffers_OpenTK_Platform_OpenGLContextHandle_
  - name: (
  - uid: OpenTK.Platform.OpenGLContextHandle
    name: OpenGLContextHandle
    href: OpenTK.Platform.OpenGLContextHandle.html
  - name: )
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetGLXContext*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.GetGLXContext
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_GetGLXContext_OpenTK_Platform_OpenGLContextHandle_
  name: GetGLXContext
  nameWithType: X11OpenGLComponent.GetGLXContext
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetGLXContext
- uid: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetGLXWindow*
  commentId: Overload:OpenTK.Platform.Native.X11.X11OpenGLComponent.GetGLXWindow
  href: OpenTK.Platform.Native.X11.X11OpenGLComponent.html#OpenTK_Platform_Native_X11_X11OpenGLComponent_GetGLXWindow_OpenTK_Platform_OpenGLContextHandle_
  name: GetGLXWindow
  nameWithType: X11OpenGLComponent.GetGLXWindow
  fullName: OpenTK.Platform.Native.X11.X11OpenGLComponent.GetGLXWindow
