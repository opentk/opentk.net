### YamlMime:ManagedReference
items:
- uid: OpenTK.Mathematics.Vector2i
  commentId: T:OpenTK.Mathematics.Vector2i
  id: Vector2i
  parent: OpenTK.Mathematics
  children:
  - OpenTK.Mathematics.Vector2i.#ctor(System.Int32)
  - OpenTK.Mathematics.Vector2i.#ctor(System.Int32,System.Int32)
  - OpenTK.Mathematics.Vector2i.Abs
  - OpenTK.Mathematics.Vector2i.Abs(OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Vector2i.Abs(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  - OpenTK.Mathematics.Vector2i.Add(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Vector2i.Add(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  - OpenTK.Mathematics.Vector2i.Clamp(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Vector2i.Clamp(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  - OpenTK.Mathematics.Vector2i.ComponentMax(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Vector2i.ComponentMax(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  - OpenTK.Mathematics.Vector2i.ComponentMin(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Vector2i.ComponentMin(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  - OpenTK.Mathematics.Vector2i.Deconstruct(System.Int32@,System.Int32@)
  - OpenTK.Mathematics.Vector2i.Divide(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Vector2i.Divide(OpenTK.Mathematics.Vector2i,System.Int32)
  - OpenTK.Mathematics.Vector2i.Divide(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  - OpenTK.Mathematics.Vector2i.Divide(OpenTK.Mathematics.Vector2i@,System.Int32,OpenTK.Mathematics.Vector2i@)
  - OpenTK.Mathematics.Vector2i.Equals(OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Vector2i.Equals(System.Object)
  - OpenTK.Mathematics.Vector2i.EuclideanLength
  - OpenTK.Mathematics.Vector2i.EuclideanLengthSquared
  - OpenTK.Mathematics.Vector2i.GetHashCode
  - OpenTK.Mathematics.Vector2i.Item(System.Int32)
  - OpenTK.Mathematics.Vector2i.ManhattanLength
  - OpenTK.Mathematics.Vector2i.Multiply(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Vector2i.Multiply(OpenTK.Mathematics.Vector2i,System.Int32)
  - OpenTK.Mathematics.Vector2i.Multiply(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  - OpenTK.Mathematics.Vector2i.Multiply(OpenTK.Mathematics.Vector2i@,System.Int32,OpenTK.Mathematics.Vector2i@)
  - OpenTK.Mathematics.Vector2i.One
  - OpenTK.Mathematics.Vector2i.PerpendicularLeft
  - OpenTK.Mathematics.Vector2i.PerpendicularRight
  - OpenTK.Mathematics.Vector2i.SizeInBytes
  - OpenTK.Mathematics.Vector2i.Subtract(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Vector2i.Subtract(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  - OpenTK.Mathematics.Vector2i.ToString
  - OpenTK.Mathematics.Vector2i.ToString(System.IFormatProvider)
  - OpenTK.Mathematics.Vector2i.ToString(System.String)
  - OpenTK.Mathematics.Vector2i.ToString(System.String,System.IFormatProvider)
  - OpenTK.Mathematics.Vector2i.ToVector2
  - OpenTK.Mathematics.Vector2i.ToVector2(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2@)
  - OpenTK.Mathematics.Vector2i.UnitX
  - OpenTK.Mathematics.Vector2i.UnitY
  - OpenTK.Mathematics.Vector2i.X
  - OpenTK.Mathematics.Vector2i.Y
  - OpenTK.Mathematics.Vector2i.Yx
  - OpenTK.Mathematics.Vector2i.Zero
  - OpenTK.Mathematics.Vector2i.op_Addition(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Vector2i.op_Division(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Vector2i.op_Division(OpenTK.Mathematics.Vector2i,System.Int32)
  - OpenTK.Mathematics.Vector2i.op_Equality(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Vector2i.op_Explicit(OpenTK.Mathematics.Vector2i)~OpenTK.Mathematics.Vector2h
  - OpenTK.Mathematics.Vector2i.op_Explicit(OpenTK.Mathematics.Vector2i)~System.Drawing.Point
  - OpenTK.Mathematics.Vector2i.op_Explicit(OpenTK.Mathematics.Vector2i)~System.Drawing.Size
  - OpenTK.Mathematics.Vector2i.op_Implicit(OpenTK.Mathematics.Vector2i)~OpenTK.Mathematics.Vector2
  - OpenTK.Mathematics.Vector2i.op_Implicit(OpenTK.Mathematics.Vector2i)~OpenTK.Mathematics.Vector2d
  - OpenTK.Mathematics.Vector2i.op_Implicit(System.ValueTuple{System.Int32,System.Int32})~OpenTK.Mathematics.Vector2i
  - OpenTK.Mathematics.Vector2i.op_Inequality(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Vector2i.op_Multiply(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Vector2i.op_Multiply(OpenTK.Mathematics.Vector2i,System.Int32)
  - OpenTK.Mathematics.Vector2i.op_Multiply(System.Int32,OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Vector2i.op_Subtraction(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  - OpenTK.Mathematics.Vector2i.op_UnaryNegation(OpenTK.Mathematics.Vector2i)
  langs:
  - csharp
  - vb
  name: Vector2i
  nameWithType: Vector2i
  fullName: OpenTK.Mathematics.Vector2i
  type: Struct
  source:
    id: Vector2i
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 23
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Represents a 2D vector using two 32-bit integer numbers.
  remarks: The Vector2i structure is suitable for interoperation with unmanaged code requiring two consecutive integers.
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct Vector2i : IEquatable<Vector2i>, IFormattable
    content.vb: >-
      <Serializable>

      Public Structure Vector2i Implements IEquatable(Of Vector2i), IFormattable
  implements:
  - System.IEquatable{OpenTK.Mathematics.Vector2i}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector2i.X
  commentId: F:OpenTK.Mathematics.Vector2i.X
  id: X
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Vector2i.X
  fullName: OpenTK.Mathematics.Vector2i.X
  type: Field
  source:
    id: X
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 30
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The X component of the Vector2i.
  example: []
  syntax:
    content: public int X
    return:
      type: System.Int32
    content.vb: Public X As Integer
- uid: OpenTK.Mathematics.Vector2i.Y
  commentId: F:OpenTK.Mathematics.Vector2i.Y
  id: Y
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Vector2i.Y
  fullName: OpenTK.Mathematics.Vector2i.Y
  type: Field
  source:
    id: Y
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 35
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The Y component of the Vector2i.
  example: []
  syntax:
    content: public int Y
    return:
      type: System.Int32
    content.vb: Public Y As Integer
- uid: OpenTK.Mathematics.Vector2i.#ctor(System.Int32)
  commentId: M:OpenTK.Mathematics.Vector2i.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Vector2i(int)
  nameWithType: Vector2i.Vector2i(int)
  fullName: OpenTK.Mathematics.Vector2i.Vector2i(int)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 41
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector2i(int value)
    parameters:
    - id: value
      type: System.Int32
      description: The value that will initialize this instance.
    content.vb: Public Sub New(value As Integer)
  overload: OpenTK.Mathematics.Vector2i.#ctor*
  nameWithType.vb: Vector2i.New(Integer)
  fullName.vb: OpenTK.Mathematics.Vector2i.New(Integer)
  name.vb: New(Integer)
- uid: OpenTK.Mathematics.Vector2i.#ctor(System.Int32,System.Int32)
  commentId: M:OpenTK.Mathematics.Vector2i.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Vector2i(int, int)
  nameWithType: Vector2i.Vector2i(int, int)
  fullName: OpenTK.Mathematics.Vector2i.Vector2i(int, int)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 52
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector2i(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: The x component of the Vector2i.
    - id: y
      type: System.Int32
      description: The y component of the Vector2i.
    content.vb: Public Sub New(x As Integer, y As Integer)
  overload: OpenTK.Mathematics.Vector2i.#ctor*
  nameWithType.vb: Vector2i.New(Integer, Integer)
  fullName.vb: OpenTK.Mathematics.Vector2i.New(Integer, Integer)
  name.vb: New(Integer, Integer)
- uid: OpenTK.Mathematics.Vector2i.Item(System.Int32)
  commentId: P:OpenTK.Mathematics.Vector2i.Item(System.Int32)
  id: Item(System.Int32)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: Vector2i.this[int]
  fullName: OpenTK.Mathematics.Vector2i.this[int]
  type: Property
  source:
    id: this[]
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 63
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the value at the index of the vector.
  example: []
  syntax:
    content: public int this[int index] { readonly get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The index of the component from the vector.
    return:
      type: System.Int32
    content.vb: Public Default Property this[](index As Integer) As Integer
  overload: OpenTK.Mathematics.Vector2i.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: Thrown if the index is less than 0 or greater than 1.
  nameWithType.vb: Vector2i.this[](Integer)
  fullName.vb: OpenTK.Mathematics.Vector2i.this[](Integer)
  name.vb: this[](Integer)
- uid: OpenTK.Mathematics.Vector2i.ManhattanLength
  commentId: P:OpenTK.Mathematics.Vector2i.ManhattanLength
  id: ManhattanLength
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: ManhattanLength
  nameWithType: Vector2i.ManhattanLength
  fullName: OpenTK.Mathematics.Vector2i.ManhattanLength
  type: Property
  source:
    id: ManhattanLength
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 100
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the manhattan length of the vector.
  example: []
  syntax:
    content: public readonly int ManhattanLength { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ManhattanLength As Integer
  overload: OpenTK.Mathematics.Vector2i.ManhattanLength*
- uid: OpenTK.Mathematics.Vector2i.EuclideanLengthSquared
  commentId: P:OpenTK.Mathematics.Vector2i.EuclideanLengthSquared
  id: EuclideanLengthSquared
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: EuclideanLengthSquared
  nameWithType: Vector2i.EuclideanLengthSquared
  fullName: OpenTK.Mathematics.Vector2i.EuclideanLengthSquared
  type: Property
  source:
    id: EuclideanLengthSquared
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 105
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the squared euclidean length of the vector.
  example: []
  syntax:
    content: public readonly int EuclideanLengthSquared { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property EuclideanLengthSquared As Integer
  overload: OpenTK.Mathematics.Vector2i.EuclideanLengthSquared*
- uid: OpenTK.Mathematics.Vector2i.EuclideanLength
  commentId: P:OpenTK.Mathematics.Vector2i.EuclideanLength
  id: EuclideanLength
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: EuclideanLength
  nameWithType: Vector2i.EuclideanLength
  fullName: OpenTK.Mathematics.Vector2i.EuclideanLength
  type: Property
  source:
    id: EuclideanLength
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 110
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the euclidean length of the vector.
  example: []
  syntax:
    content: public readonly float EuclideanLength { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property EuclideanLength As Single
  overload: OpenTK.Mathematics.Vector2i.EuclideanLength*
- uid: OpenTK.Mathematics.Vector2i.PerpendicularRight
  commentId: P:OpenTK.Mathematics.Vector2i.PerpendicularRight
  id: PerpendicularRight
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: PerpendicularRight
  nameWithType: Vector2i.PerpendicularRight
  fullName: OpenTK.Mathematics.Vector2i.PerpendicularRight
  type: Property
  source:
    id: PerpendicularRight
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 115
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the perpendicular vector on the right side of this vector.
  example: []
  syntax:
    content: public readonly Vector2i PerpendicularRight { get; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public ReadOnly Property PerpendicularRight As Vector2i
  overload: OpenTK.Mathematics.Vector2i.PerpendicularRight*
- uid: OpenTK.Mathematics.Vector2i.PerpendicularLeft
  commentId: P:OpenTK.Mathematics.Vector2i.PerpendicularLeft
  id: PerpendicularLeft
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: PerpendicularLeft
  nameWithType: Vector2i.PerpendicularLeft
  fullName: OpenTK.Mathematics.Vector2i.PerpendicularLeft
  type: Property
  source:
    id: PerpendicularLeft
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 120
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the perpendicular vector on the left side of this vector.
  example: []
  syntax:
    content: public readonly Vector2i PerpendicularLeft { get; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public ReadOnly Property PerpendicularLeft As Vector2i
  overload: OpenTK.Mathematics.Vector2i.PerpendicularLeft*
- uid: OpenTK.Mathematics.Vector2i.Abs
  commentId: M:OpenTK.Mathematics.Vector2i.Abs
  id: Abs
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Abs()
  nameWithType: Vector2i.Abs()
  fullName: OpenTK.Mathematics.Vector2i.Abs()
  type: Method
  source:
    id: Abs
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 126
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the component-wise absolute value of the vector.
  example: []
  syntax:
    content: public readonly Vector2i Abs()
    return:
      type: OpenTK.Mathematics.Vector2i
      description: The component-wise absolute value vector.
    content.vb: Public Function Abs() As Vector2i
  overload: OpenTK.Mathematics.Vector2i.Abs*
- uid: OpenTK.Mathematics.Vector2i.UnitX
  commentId: F:OpenTK.Mathematics.Vector2i.UnitX
  id: UnitX
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: UnitX
  nameWithType: Vector2i.UnitX
  fullName: OpenTK.Mathematics.Vector2i.UnitX
  type: Field
  source:
    id: UnitX
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 137
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> that points towards the X-axis.
  example: []
  syntax:
    content: public static readonly Vector2i UnitX
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Shared ReadOnly UnitX As Vector2i
- uid: OpenTK.Mathematics.Vector2i.UnitY
  commentId: F:OpenTK.Mathematics.Vector2i.UnitY
  id: UnitY
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: UnitY
  nameWithType: Vector2i.UnitY
  fullName: OpenTK.Mathematics.Vector2i.UnitY
  type: Field
  source:
    id: UnitY
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 142
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> that points towards the Y-axis.
  example: []
  syntax:
    content: public static readonly Vector2i UnitY
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Shared ReadOnly UnitY As Vector2i
- uid: OpenTK.Mathematics.Vector2i.Zero
  commentId: F:OpenTK.Mathematics.Vector2i.Zero
  id: Zero
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Vector2i.Zero
  fullName: OpenTK.Mathematics.Vector2i.Zero
  type: Field
  source:
    id: Zero
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 147
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to 0.
  example: []
  syntax:
    content: public static readonly Vector2i Zero
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Shared ReadOnly Zero As Vector2i
- uid: OpenTK.Mathematics.Vector2i.One
  commentId: F:OpenTK.Mathematics.Vector2i.One
  id: One
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Vector2i.One
  fullName: OpenTK.Mathematics.Vector2i.One
  type: Field
  source:
    id: One
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 152
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to 1.
  example: []
  syntax:
    content: public static readonly Vector2i One
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Shared ReadOnly One As Vector2i
- uid: OpenTK.Mathematics.Vector2i.SizeInBytes
  commentId: F:OpenTK.Mathematics.Vector2i.SizeInBytes
  id: SizeInBytes
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: SizeInBytes
  nameWithType: Vector2i.SizeInBytes
  fullName: OpenTK.Mathematics.Vector2i.SizeInBytes
  type: Field
  source:
    id: SizeInBytes
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 157
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines the size of the <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> struct in bytes.
  example: []
  syntax:
    content: public static readonly int SizeInBytes
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly SizeInBytes As Integer
- uid: OpenTK.Mathematics.Vector2i.Add(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Vector2i.Add(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  id: Add(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Add(Vector2i, Vector2i)
  nameWithType: Vector2i.Add(Vector2i, Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.Add(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    id: Add
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 165
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector2i Add(Vector2i a, Vector2i b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector2i
      description: Left operand.
    - id: b
      type: OpenTK.Mathematics.Vector2i
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector2i
      description: Result of operation.
    content.vb: >-
      <Pure>

      Public Shared Function Add(a As Vector2i, b As Vector2i) As Vector2i
  overload: OpenTK.Mathematics.Vector2i.Add*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector2i.Add(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  commentId: M:OpenTK.Mathematics.Vector2i.Add(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  id: Add(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Add(in Vector2i, in Vector2i, out Vector2i)
  nameWithType: Vector2i.Add(in Vector2i, in Vector2i, out Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.Add(in OpenTK.Mathematics.Vector2i, in OpenTK.Mathematics.Vector2i, out OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    id: Add
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 178
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two vectors.
  example: []
  syntax:
    content: public static void Add(in Vector2i a, in Vector2i b, out Vector2i result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector2i
      description: Left operand.
    - id: b
      type: OpenTK.Mathematics.Vector2i
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector2i
      description: Result of operation.
    content.vb: Public Shared Sub Add(a As Vector2i, b As Vector2i, result As Vector2i)
  overload: OpenTK.Mathematics.Vector2i.Add*
  nameWithType.vb: Vector2i.Add(Vector2i, Vector2i, Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.Add(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  name.vb: Add(Vector2i, Vector2i, Vector2i)
- uid: OpenTK.Mathematics.Vector2i.Subtract(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Vector2i.Subtract(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  id: Subtract(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Subtract(Vector2i, Vector2i)
  nameWithType: Vector2i.Subtract(Vector2i, Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.Subtract(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    id: Subtract
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 190
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtract one Vector from another.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector2i Subtract(Vector2i a, Vector2i b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector2i
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector2i
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector2i
      description: Result of subtraction.
    content.vb: >-
      <Pure>

      Public Shared Function Subtract(a As Vector2i, b As Vector2i) As Vector2i
  overload: OpenTK.Mathematics.Vector2i.Subtract*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector2i.Subtract(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  commentId: M:OpenTK.Mathematics.Vector2i.Subtract(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  id: Subtract(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Subtract(in Vector2i, in Vector2i, out Vector2i)
  nameWithType: Vector2i.Subtract(in Vector2i, in Vector2i, out Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.Subtract(in OpenTK.Mathematics.Vector2i, in OpenTK.Mathematics.Vector2i, out OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    id: Subtract
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 203
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtract one Vector from another.
  example: []
  syntax:
    content: public static void Subtract(in Vector2i a, in Vector2i b, out Vector2i result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector2i
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector2i
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector2i
      description: Result of subtraction.
    content.vb: Public Shared Sub Subtract(a As Vector2i, b As Vector2i, result As Vector2i)
  overload: OpenTK.Mathematics.Vector2i.Subtract*
  nameWithType.vb: Vector2i.Subtract(Vector2i, Vector2i, Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.Subtract(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  name.vb: Subtract(Vector2i, Vector2i, Vector2i)
- uid: OpenTK.Mathematics.Vector2i.Multiply(OpenTK.Mathematics.Vector2i,System.Int32)
  commentId: M:OpenTK.Mathematics.Vector2i.Multiply(OpenTK.Mathematics.Vector2i,System.Int32)
  id: Multiply(OpenTK.Mathematics.Vector2i,System.Int32)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Multiply(Vector2i, int)
  nameWithType: Vector2i.Multiply(Vector2i, int)
  fullName: OpenTK.Mathematics.Vector2i.Multiply(OpenTK.Mathematics.Vector2i, int)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 215
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by an integer scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector2i Multiply(Vector2i vector, int scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector2i
      description: Left operand.
    - id: scale
      type: System.Int32
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector2i
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Multiply(vector As Vector2i, scale As Integer) As Vector2i
  overload: OpenTK.Mathematics.Vector2i.Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2i.Multiply(Vector2i, Integer)
  fullName.vb: OpenTK.Mathematics.Vector2i.Multiply(OpenTK.Mathematics.Vector2i, Integer)
  name.vb: Multiply(Vector2i, Integer)
- uid: OpenTK.Mathematics.Vector2i.Multiply(OpenTK.Mathematics.Vector2i@,System.Int32,OpenTK.Mathematics.Vector2i@)
  commentId: M:OpenTK.Mathematics.Vector2i.Multiply(OpenTK.Mathematics.Vector2i@,System.Int32,OpenTK.Mathematics.Vector2i@)
  id: Multiply(OpenTK.Mathematics.Vector2i@,System.Int32,OpenTK.Mathematics.Vector2i@)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Multiply(in Vector2i, int, out Vector2i)
  nameWithType: Vector2i.Multiply(in Vector2i, int, out Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.Multiply(in OpenTK.Mathematics.Vector2i, int, out OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 228
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by an integer scalar.
  example: []
  syntax:
    content: public static void Multiply(in Vector2i vector, int scale, out Vector2i result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector2i
      description: Left operand.
    - id: scale
      type: System.Int32
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector2i
      description: Result of the operation.
    content.vb: Public Shared Sub Multiply(vector As Vector2i, scale As Integer, result As Vector2i)
  overload: OpenTK.Mathematics.Vector2i.Multiply*
  nameWithType.vb: Vector2i.Multiply(Vector2i, Integer, Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.Multiply(OpenTK.Mathematics.Vector2i, Integer, OpenTK.Mathematics.Vector2i)
  name.vb: Multiply(Vector2i, Integer, Vector2i)
- uid: OpenTK.Mathematics.Vector2i.Multiply(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Vector2i.Multiply(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  id: Multiply(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Multiply(Vector2i, Vector2i)
  nameWithType: Vector2i.Multiply(Vector2i, Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.Multiply(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 240
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by the components a vector (scale).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector2i Multiply(Vector2i vector, Vector2i scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector2i
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector2i
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector2i
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Multiply(vector As Vector2i, scale As Vector2i) As Vector2i
  overload: OpenTK.Mathematics.Vector2i.Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector2i.Multiply(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  commentId: M:OpenTK.Mathematics.Vector2i.Multiply(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  id: Multiply(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Multiply(in Vector2i, in Vector2i, out Vector2i)
  nameWithType: Vector2i.Multiply(in Vector2i, in Vector2i, out Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.Multiply(in OpenTK.Mathematics.Vector2i, in OpenTK.Mathematics.Vector2i, out OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 253
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by the components of a vector (scale).
  example: []
  syntax:
    content: public static void Multiply(in Vector2i vector, in Vector2i scale, out Vector2i result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector2i
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector2i
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector2i
      description: Result of the operation.
    content.vb: Public Shared Sub Multiply(vector As Vector2i, scale As Vector2i, result As Vector2i)
  overload: OpenTK.Mathematics.Vector2i.Multiply*
  nameWithType.vb: Vector2i.Multiply(Vector2i, Vector2i, Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.Multiply(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  name.vb: Multiply(Vector2i, Vector2i, Vector2i)
- uid: OpenTK.Mathematics.Vector2i.Divide(OpenTK.Mathematics.Vector2i,System.Int32)
  commentId: M:OpenTK.Mathematics.Vector2i.Divide(OpenTK.Mathematics.Vector2i,System.Int32)
  id: Divide(OpenTK.Mathematics.Vector2i,System.Int32)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Divide(Vector2i, int)
  nameWithType: Vector2i.Divide(Vector2i, int)
  fullName: OpenTK.Mathematics.Vector2i.Divide(OpenTK.Mathematics.Vector2i, int)
  type: Method
  source:
    id: Divide
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 265
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by a scalar using integer division, floor(a/b).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector2i Divide(Vector2i vector, int scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector2i
      description: Left operand.
    - id: scale
      type: System.Int32
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector2i
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Divide(vector As Vector2i, scale As Integer) As Vector2i
  overload: OpenTK.Mathematics.Vector2i.Divide*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2i.Divide(Vector2i, Integer)
  fullName.vb: OpenTK.Mathematics.Vector2i.Divide(OpenTK.Mathematics.Vector2i, Integer)
  name.vb: Divide(Vector2i, Integer)
- uid: OpenTK.Mathematics.Vector2i.Divide(OpenTK.Mathematics.Vector2i@,System.Int32,OpenTK.Mathematics.Vector2i@)
  commentId: M:OpenTK.Mathematics.Vector2i.Divide(OpenTK.Mathematics.Vector2i@,System.Int32,OpenTK.Mathematics.Vector2i@)
  id: Divide(OpenTK.Mathematics.Vector2i@,System.Int32,OpenTK.Mathematics.Vector2i@)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Divide(in Vector2i, int, out Vector2i)
  nameWithType: Vector2i.Divide(in Vector2i, int, out Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.Divide(in OpenTK.Mathematics.Vector2i, int, out OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    id: Divide
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 278
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by a scalar using integer division, floor(a/b).
  example: []
  syntax:
    content: public static void Divide(in Vector2i vector, int scale, out Vector2i result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector2i
      description: Left operand.
    - id: scale
      type: System.Int32
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector2i
      description: Result of the operation.
    content.vb: Public Shared Sub Divide(vector As Vector2i, scale As Integer, result As Vector2i)
  overload: OpenTK.Mathematics.Vector2i.Divide*
  nameWithType.vb: Vector2i.Divide(Vector2i, Integer, Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.Divide(OpenTK.Mathematics.Vector2i, Integer, OpenTK.Mathematics.Vector2i)
  name.vb: Divide(Vector2i, Integer, Vector2i)
- uid: OpenTK.Mathematics.Vector2i.Divide(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Vector2i.Divide(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  id: Divide(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Divide(Vector2i, Vector2i)
  nameWithType: Vector2i.Divide(Vector2i, Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.Divide(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    id: Divide
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 290
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by the components of a vector using integer division, floor(a/b).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector2i Divide(Vector2i vector, Vector2i scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector2i
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector2i
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector2i
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Divide(vector As Vector2i, scale As Vector2i) As Vector2i
  overload: OpenTK.Mathematics.Vector2i.Divide*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector2i.Divide(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  commentId: M:OpenTK.Mathematics.Vector2i.Divide(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  id: Divide(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Divide(in Vector2i, in Vector2i, out Vector2i)
  nameWithType: Vector2i.Divide(in Vector2i, in Vector2i, out Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.Divide(in OpenTK.Mathematics.Vector2i, in OpenTK.Mathematics.Vector2i, out OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    id: Divide
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 303
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by the components of a vector using integer division, floor(a/b).
  example: []
  syntax:
    content: public static void Divide(in Vector2i vector, in Vector2i scale, out Vector2i result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector2i
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector2i
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector2i
      description: Result of the operation.
    content.vb: Public Shared Sub Divide(vector As Vector2i, scale As Vector2i, result As Vector2i)
  overload: OpenTK.Mathematics.Vector2i.Divide*
  nameWithType.vb: Vector2i.Divide(Vector2i, Vector2i, Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.Divide(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  name.vb: Divide(Vector2i, Vector2i, Vector2i)
- uid: OpenTK.Mathematics.Vector2i.ComponentMin(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Vector2i.ComponentMin(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  id: ComponentMin(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: ComponentMin(Vector2i, Vector2i)
  nameWithType: Vector2i.ComponentMin(Vector2i, Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.ComponentMin(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    id: ComponentMin
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 315
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the smallest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector2i ComponentMin(Vector2i a, Vector2i b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector2i
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector2i
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector2i
      description: The component-wise minimum.
    content.vb: >-
      <Pure>

      Public Shared Function ComponentMin(a As Vector2i, b As Vector2i) As Vector2i
  overload: OpenTK.Mathematics.Vector2i.ComponentMin*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector2i.ComponentMin(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  commentId: M:OpenTK.Mathematics.Vector2i.ComponentMin(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  id: ComponentMin(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: ComponentMin(in Vector2i, in Vector2i, out Vector2i)
  nameWithType: Vector2i.ComponentMin(in Vector2i, in Vector2i, out Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.ComponentMin(in OpenTK.Mathematics.Vector2i, in OpenTK.Mathematics.Vector2i, out OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    id: ComponentMin
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 329
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the smallest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: public static void ComponentMin(in Vector2i a, in Vector2i b, out Vector2i result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector2i
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector2i
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector2i
      description: The component-wise minimum.
    content.vb: Public Shared Sub ComponentMin(a As Vector2i, b As Vector2i, result As Vector2i)
  overload: OpenTK.Mathematics.Vector2i.ComponentMin*
  nameWithType.vb: Vector2i.ComponentMin(Vector2i, Vector2i, Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.ComponentMin(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  name.vb: ComponentMin(Vector2i, Vector2i, Vector2i)
- uid: OpenTK.Mathematics.Vector2i.ComponentMax(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Vector2i.ComponentMax(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  id: ComponentMax(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: ComponentMax(Vector2i, Vector2i)
  nameWithType: Vector2i.ComponentMax(Vector2i, Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.ComponentMax(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    id: ComponentMax
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 341
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the largest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector2i ComponentMax(Vector2i a, Vector2i b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector2i
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector2i
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector2i
      description: The component-wise maximum.
    content.vb: >-
      <Pure>

      Public Shared Function ComponentMax(a As Vector2i, b As Vector2i) As Vector2i
  overload: OpenTK.Mathematics.Vector2i.ComponentMax*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector2i.ComponentMax(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  commentId: M:OpenTK.Mathematics.Vector2i.ComponentMax(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  id: ComponentMax(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: ComponentMax(in Vector2i, in Vector2i, out Vector2i)
  nameWithType: Vector2i.ComponentMax(in Vector2i, in Vector2i, out Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.ComponentMax(in OpenTK.Mathematics.Vector2i, in OpenTK.Mathematics.Vector2i, out OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    id: ComponentMax
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 355
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the largest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: public static void ComponentMax(in Vector2i a, in Vector2i b, out Vector2i result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector2i
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector2i
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector2i
      description: The component-wise maximum.
    content.vb: Public Shared Sub ComponentMax(a As Vector2i, b As Vector2i, result As Vector2i)
  overload: OpenTK.Mathematics.Vector2i.ComponentMax*
  nameWithType.vb: Vector2i.ComponentMax(Vector2i, Vector2i, Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.ComponentMax(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  name.vb: ComponentMax(Vector2i, Vector2i, Vector2i)
- uid: OpenTK.Mathematics.Vector2i.Clamp(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Vector2i.Clamp(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  id: Clamp(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Clamp(Vector2i, Vector2i, Vector2i)
  nameWithType: Vector2i.Clamp(Vector2i, Vector2i, Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.Clamp(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    id: Clamp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 368
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Clamp a vector to the given minimum and maximum vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector2i Clamp(Vector2i vec, Vector2i min, Vector2i max)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector2i
      description: Input vector.
    - id: min
      type: OpenTK.Mathematics.Vector2i
      description: Minimum vector.
    - id: max
      type: OpenTK.Mathematics.Vector2i
      description: Maximum vector.
    return:
      type: OpenTK.Mathematics.Vector2i
      description: The clamped vector.
    content.vb: >-
      <Pure>

      Public Shared Function Clamp(vec As Vector2i, min As Vector2i, max As Vector2i) As Vector2i
  overload: OpenTK.Mathematics.Vector2i.Clamp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector2i.Clamp(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  commentId: M:OpenTK.Mathematics.Vector2i.Clamp(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  id: Clamp(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Clamp(in Vector2i, in Vector2i, in Vector2i, out Vector2i)
  nameWithType: Vector2i.Clamp(in Vector2i, in Vector2i, in Vector2i, out Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.Clamp(in OpenTK.Mathematics.Vector2i, in OpenTK.Mathematics.Vector2i, in OpenTK.Mathematics.Vector2i, out OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    id: Clamp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 383
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Clamp a vector to the given minimum and maximum vectors.
  example: []
  syntax:
    content: public static void Clamp(in Vector2i vec, in Vector2i min, in Vector2i max, out Vector2i result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector2i
      description: Input vector.
    - id: min
      type: OpenTK.Mathematics.Vector2i
      description: Minimum vector.
    - id: max
      type: OpenTK.Mathematics.Vector2i
      description: Maximum vector.
    - id: result
      type: OpenTK.Mathematics.Vector2i
      description: The clamped vector.
    content.vb: Public Shared Sub Clamp(vec As Vector2i, min As Vector2i, max As Vector2i, result As Vector2i)
  overload: OpenTK.Mathematics.Vector2i.Clamp*
  nameWithType.vb: Vector2i.Clamp(Vector2i, Vector2i, Vector2i, Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.Clamp(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  name.vb: Clamp(Vector2i, Vector2i, Vector2i, Vector2i)
- uid: OpenTK.Mathematics.Vector2i.Abs(OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Vector2i.Abs(OpenTK.Mathematics.Vector2i)
  id: Abs(OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Abs(Vector2i)
  nameWithType: Vector2i.Abs(Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.Abs(OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    id: Abs
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 394
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Take the component-wise absolute value of a vector.
  example: []
  syntax:
    content: public static Vector2i Abs(Vector2i vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector2i
      description: The vector to apply component-wise absolute value to.
    return:
      type: OpenTK.Mathematics.Vector2i
      description: The component-wise absolute value vector.
    content.vb: Public Shared Function Abs(vec As Vector2i) As Vector2i
  overload: OpenTK.Mathematics.Vector2i.Abs*
- uid: OpenTK.Mathematics.Vector2i.Abs(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  commentId: M:OpenTK.Mathematics.Vector2i.Abs(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  id: Abs(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2i@)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Abs(in Vector2i, out Vector2i)
  nameWithType: Vector2i.Abs(in Vector2i, out Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.Abs(in OpenTK.Mathematics.Vector2i, out OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    id: Abs
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 406
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Take the component-wise absolute value of a vector.
  example: []
  syntax:
    content: public static void Abs(in Vector2i vec, out Vector2i result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector2i
      description: The vector to apply component-wise absolute value to.
    - id: result
      type: OpenTK.Mathematics.Vector2i
      description: The component-wise absolute value vector.
    content.vb: Public Shared Sub Abs(vec As Vector2i, result As Vector2i)
  overload: OpenTK.Mathematics.Vector2i.Abs*
  nameWithType.vb: Vector2i.Abs(Vector2i, Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.Abs(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  name.vb: Abs(Vector2i, Vector2i)
- uid: OpenTK.Mathematics.Vector2i.Yx
  commentId: P:OpenTK.Mathematics.Vector2i.Yx
  id: Yx
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Yx
  nameWithType: Vector2i.Yx
  fullName: OpenTK.Mathematics.Vector2i.Yx
  type: Property
  source:
    id: Yx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 415
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> with the Y and X components of this instance.
  example: []
  syntax:
    content: public Vector2i Yx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Yx As Vector2i
  overload: OpenTK.Mathematics.Vector2i.Yx*
- uid: OpenTK.Mathematics.Vector2i.ToVector2
  commentId: M:OpenTK.Mathematics.Vector2i.ToVector2
  id: ToVector2
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: ToVector2()
  nameWithType: Vector2i.ToVector2()
  fullName: OpenTK.Mathematics.Vector2i.ToVector2()
  type: Method
  source:
    id: ToVector2
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 430
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets a <xref href="OpenTK.Mathematics.Vector2" data-throw-if-not-resolved="false"></xref> object with the same component values as the <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public readonly Vector2 ToVector2()
    return:
      type: OpenTK.Mathematics.Vector2
      description: The resulting <xref href="OpenTK.Mathematics.Vector3" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Function ToVector2() As Vector2
  overload: OpenTK.Mathematics.Vector2i.ToVector2*
- uid: OpenTK.Mathematics.Vector2i.ToVector2(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2@)
  commentId: M:OpenTK.Mathematics.Vector2i.ToVector2(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2@)
  id: ToVector2(OpenTK.Mathematics.Vector2i@,OpenTK.Mathematics.Vector2@)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: ToVector2(in Vector2i, out Vector2)
  nameWithType: Vector2i.ToVector2(in Vector2i, out Vector2)
  fullName: OpenTK.Mathematics.Vector2i.ToVector2(in OpenTK.Mathematics.Vector2i, out OpenTK.Mathematics.Vector2)
  type: Method
  source:
    id: ToVector2
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 440
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets a <xref href="OpenTK.Mathematics.Vector2" data-throw-if-not-resolved="false"></xref> object with the same component values as the <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public static void ToVector2(in Vector2i input, out Vector2 result)
    parameters:
    - id: input
      type: OpenTK.Mathematics.Vector2i
      description: The given <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> to convert.
    - id: result
      type: OpenTK.Mathematics.Vector2
      description: The resulting <xref href="OpenTK.Mathematics.Vector2" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Sub ToVector2(input As Vector2i, result As Vector2)
  overload: OpenTK.Mathematics.Vector2i.ToVector2*
  nameWithType.vb: Vector2i.ToVector2(Vector2i, Vector2)
  fullName.vb: OpenTK.Mathematics.Vector2i.ToVector2(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2)
  name.vb: ToVector2(Vector2i, Vector2)
- uid: OpenTK.Mathematics.Vector2i.op_Addition(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Vector2i.op_Addition(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  id: op_Addition(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: operator +(Vector2i, Vector2i)
  nameWithType: Vector2i.operator +(Vector2i, Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.operator +(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  type: Operator
  source:
    id: op_Addition
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 452
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds the specified instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector2i operator +(Vector2i left, Vector2i right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector2i
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector2i
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector2i
      description: Result of addition.
    content.vb: >-
      <Pure>

      Public Shared Operator +(left As Vector2i, right As Vector2i) As Vector2i
  overload: OpenTK.Mathematics.Vector2i.op_Addition*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2i.+(Vector2i, Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.+(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  name.vb: +(Vector2i, Vector2i)
- uid: OpenTK.Mathematics.Vector2i.op_Subtraction(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Vector2i.op_Subtraction(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  id: op_Subtraction(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: operator -(Vector2i, Vector2i)
  nameWithType: Vector2i.operator -(Vector2i, Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.operator -(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  type: Operator
  source:
    id: op_Subtraction
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 466
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtracts the specified instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector2i operator -(Vector2i left, Vector2i right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector2i
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector2i
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector2i
      description: Result of subtraction.
    content.vb: >-
      <Pure>

      Public Shared Operator -(left As Vector2i, right As Vector2i) As Vector2i
  overload: OpenTK.Mathematics.Vector2i.op_Subtraction*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2i.-(Vector2i, Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.-(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  name.vb: -(Vector2i, Vector2i)
- uid: OpenTK.Mathematics.Vector2i.op_UnaryNegation(OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Vector2i.op_UnaryNegation(OpenTK.Mathematics.Vector2i)
  id: op_UnaryNegation(OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: operator -(Vector2i)
  nameWithType: Vector2i.operator -(Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.operator -(OpenTK.Mathematics.Vector2i)
  type: Operator
  source:
    id: op_UnaryNegation
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 479
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Negates the specified instance.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector2i operator -(Vector2i vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector2i
      description: Operand.
    return:
      type: OpenTK.Mathematics.Vector2i
      description: Result of negation.
    content.vb: >-
      <Pure>

      Public Shared Operator -(vec As Vector2i) As Vector2i
  overload: OpenTK.Mathematics.Vector2i.op_UnaryNegation*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2i.-(Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.-(OpenTK.Mathematics.Vector2i)
  name.vb: -(Vector2i)
- uid: OpenTK.Mathematics.Vector2i.op_Multiply(OpenTK.Mathematics.Vector2i,System.Int32)
  commentId: M:OpenTK.Mathematics.Vector2i.op_Multiply(OpenTK.Mathematics.Vector2i,System.Int32)
  id: op_Multiply(OpenTK.Mathematics.Vector2i,System.Int32)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: operator *(Vector2i, int)
  nameWithType: Vector2i.operator *(Vector2i, int)
  fullName: OpenTK.Mathematics.Vector2i.operator *(OpenTK.Mathematics.Vector2i, int)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 493
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies the specified instance by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector2i operator *(Vector2i vec, int scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector2i
      description: Left operand.
    - id: scale
      type: System.Int32
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector2i
      description: Result of multiplication.
    content.vb: >-
      <Pure>

      Public Shared Operator *(vec As Vector2i, scale As Integer) As Vector2i
  overload: OpenTK.Mathematics.Vector2i.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2i.*(Vector2i, Integer)
  fullName.vb: OpenTK.Mathematics.Vector2i.*(OpenTK.Mathematics.Vector2i, Integer)
  name.vb: '*(Vector2i, Integer)'
- uid: OpenTK.Mathematics.Vector2i.op_Multiply(System.Int32,OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Vector2i.op_Multiply(System.Int32,OpenTK.Mathematics.Vector2i)
  id: op_Multiply(System.Int32,OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: operator *(int, Vector2i)
  nameWithType: Vector2i.operator *(int, Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.operator *(int, OpenTK.Mathematics.Vector2i)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 507
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies the specified instance by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector2i operator *(int scale, Vector2i vec)
    parameters:
    - id: scale
      type: System.Int32
      description: Left operand.
    - id: vec
      type: OpenTK.Mathematics.Vector2i
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector2i
      description: Result of multiplication.
    content.vb: >-
      <Pure>

      Public Shared Operator *(scale As Integer, vec As Vector2i) As Vector2i
  overload: OpenTK.Mathematics.Vector2i.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2i.*(Integer, Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.*(Integer, OpenTK.Mathematics.Vector2i)
  name.vb: '*(Integer, Vector2i)'
- uid: OpenTK.Mathematics.Vector2i.op_Multiply(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Vector2i.op_Multiply(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  id: op_Multiply(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: operator *(Vector2i, Vector2i)
  nameWithType: Vector2i.operator *(Vector2i, Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.operator *(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 521
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Component-wise multiplication between the specified instance by a scale vector.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector2i operator *(Vector2i vec, Vector2i scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector2i
      description: Right operand.
    - id: scale
      type: OpenTK.Mathematics.Vector2i
      description: Left operand.
    return:
      type: OpenTK.Mathematics.Vector2i
      description: Result of multiplication.
    content.vb: >-
      <Pure>

      Public Shared Operator *(vec As Vector2i, scale As Vector2i) As Vector2i
  overload: OpenTK.Mathematics.Vector2i.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2i.*(Vector2i, Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.*(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  name.vb: '*(Vector2i, Vector2i)'
- uid: OpenTK.Mathematics.Vector2i.op_Division(OpenTK.Mathematics.Vector2i,System.Int32)
  commentId: M:OpenTK.Mathematics.Vector2i.op_Division(OpenTK.Mathematics.Vector2i,System.Int32)
  id: op_Division(OpenTK.Mathematics.Vector2i,System.Int32)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: operator /(Vector2i, int)
  nameWithType: Vector2i.operator /(Vector2i, int)
  fullName: OpenTK.Mathematics.Vector2i.operator /(OpenTK.Mathematics.Vector2i, int)
  type: Operator
  source:
    id: op_Division
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 535
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides the instance by a scalar using integer division, floor(a/b).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector2i operator /(Vector2i vec, int scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector2i
      description: Left operand.
    - id: scale
      type: System.Int32
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector2i
      description: Result of the division.
    content.vb: >-
      <Pure>

      Public Shared Operator /(vec As Vector2i, scale As Integer) As Vector2i
  overload: OpenTK.Mathematics.Vector2i.op_Division*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2i./(Vector2i, Integer)
  fullName.vb: OpenTK.Mathematics.Vector2i./(OpenTK.Mathematics.Vector2i, Integer)
  name.vb: /(Vector2i, Integer)
- uid: OpenTK.Mathematics.Vector2i.op_Division(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Vector2i.op_Division(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  id: op_Division(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: operator /(Vector2i, Vector2i)
  nameWithType: Vector2i.operator /(Vector2i, Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.operator /(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  type: Operator
  source:
    id: op_Division
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 549
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Component-wise division between the specified instance by a scale vector.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector2i operator /(Vector2i vec, Vector2i scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector2i
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector2i
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector2i
      description: Result of the division.
    content.vb: >-
      <Pure>

      Public Shared Operator /(vec As Vector2i, scale As Vector2i) As Vector2i
  overload: OpenTK.Mathematics.Vector2i.op_Division*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2i./(Vector2i, Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i./(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  name.vb: /(Vector2i, Vector2i)
- uid: OpenTK.Mathematics.Vector2i.op_Equality(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Vector2i.op_Equality(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  id: op_Equality(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: operator ==(Vector2i, Vector2i)
  nameWithType: Vector2i.operator ==(Vector2i, Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.operator ==(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  type: Operator
  source:
    id: op_Equality
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 563
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compares the specified instances for equality.
  example: []
  syntax:
    content: public static bool operator ==(Vector2i left, Vector2i right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector2i
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector2i
      description: Right operand.
    return:
      type: System.Boolean
      description: True if both instances are equal; false otherwise.
    content.vb: Public Shared Operator =(left As Vector2i, right As Vector2i) As Boolean
  overload: OpenTK.Mathematics.Vector2i.op_Equality*
  nameWithType.vb: Vector2i.=(Vector2i, Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.=(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  name.vb: =(Vector2i, Vector2i)
- uid: OpenTK.Mathematics.Vector2i.op_Inequality(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Vector2i.op_Inequality(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  id: op_Inequality(OpenTK.Mathematics.Vector2i,OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: operator !=(Vector2i, Vector2i)
  nameWithType: Vector2i.operator !=(Vector2i, Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.operator !=(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  type: Operator
  source:
    id: op_Inequality
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 574
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compares the specified instances for inequality.
  example: []
  syntax:
    content: public static bool operator !=(Vector2i left, Vector2i right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector2i
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector2i
      description: Right operand.
    return:
      type: System.Boolean
      description: True if both instances are not equal; false otherwise.
    content.vb: Public Shared Operator <>(left As Vector2i, right As Vector2i) As Boolean
  overload: OpenTK.Mathematics.Vector2i.op_Inequality*
  nameWithType.vb: Vector2i.<>(Vector2i, Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.<>(OpenTK.Mathematics.Vector2i, OpenTK.Mathematics.Vector2i)
  name.vb: <>(Vector2i, Vector2i)
- uid: OpenTK.Mathematics.Vector2i.op_Implicit(OpenTK.Mathematics.Vector2i)~OpenTK.Mathematics.Vector2
  commentId: M:OpenTK.Mathematics.Vector2i.op_Implicit(OpenTK.Mathematics.Vector2i)~OpenTK.Mathematics.Vector2
  id: op_Implicit(OpenTK.Mathematics.Vector2i)~OpenTK.Mathematics.Vector2
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: implicit operator Vector2(Vector2i)
  nameWithType: Vector2i.implicit operator Vector2(Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.implicit operator OpenTK.Mathematics.Vector2(OpenTK.Mathematics.Vector2i)
  type: Operator
  source:
    id: op_Implicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 584
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector2i to OpenTK.Vector2.
  example: []
  syntax:
    content: >-
      [Pure]

      public static implicit operator Vector2(Vector2i vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector2i
      description: The Vector2i to convert.
    return:
      type: OpenTK.Mathematics.Vector2
      description: The resulting Vector2.
    content.vb: >-
      <Pure>

      Public Shared Widening Operator CType(vec As Vector2i) As Vector2
  overload: OpenTK.Mathematics.Vector2i.op_Implicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2i.CType(Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.CType(OpenTK.Mathematics.Vector2i)
  name.vb: CType(Vector2i)
- uid: OpenTK.Mathematics.Vector2i.op_Implicit(OpenTK.Mathematics.Vector2i)~OpenTK.Mathematics.Vector2d
  commentId: M:OpenTK.Mathematics.Vector2i.op_Implicit(OpenTK.Mathematics.Vector2i)~OpenTK.Mathematics.Vector2d
  id: op_Implicit(OpenTK.Mathematics.Vector2i)~OpenTK.Mathematics.Vector2d
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: implicit operator Vector2d(Vector2i)
  nameWithType: Vector2i.implicit operator Vector2d(Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.implicit operator OpenTK.Mathematics.Vector2d(OpenTK.Mathematics.Vector2i)
  type: Operator
  source:
    id: op_Implicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 595
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector2i to OpenTK.Vector2d.
  example: []
  syntax:
    content: >-
      [Pure]

      public static implicit operator Vector2d(Vector2i vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector2i
      description: The Vector2i to convert.
    return:
      type: OpenTK.Mathematics.Vector2d
      description: The resulting Vector2d.
    content.vb: >-
      <Pure>

      Public Shared Widening Operator CType(vec As Vector2i) As Vector2d
  overload: OpenTK.Mathematics.Vector2i.op_Implicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2i.CType(Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.CType(OpenTK.Mathematics.Vector2i)
  name.vb: CType(Vector2i)
- uid: OpenTK.Mathematics.Vector2i.op_Explicit(OpenTK.Mathematics.Vector2i)~OpenTK.Mathematics.Vector2h
  commentId: M:OpenTK.Mathematics.Vector2i.op_Explicit(OpenTK.Mathematics.Vector2i)~OpenTK.Mathematics.Vector2h
  id: op_Explicit(OpenTK.Mathematics.Vector2i)~OpenTK.Mathematics.Vector2h
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: explicit operator Vector2h(Vector2i)
  nameWithType: Vector2i.explicit operator Vector2h(Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.explicit operator OpenTK.Mathematics.Vector2h(OpenTK.Mathematics.Vector2i)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 606
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector2i to OpenTK.Vector2h.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator Vector2h(Vector2i vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector2i
      description: The Vector2i to convert.
    return:
      type: OpenTK.Mathematics.Vector2h
      description: The resulting Vector2h.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(vec As Vector2i) As Vector2h
  overload: OpenTK.Mathematics.Vector2i.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2i.CType(Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.CType(OpenTK.Mathematics.Vector2i)
  name.vb: CType(Vector2i)
- uid: OpenTK.Mathematics.Vector2i.op_Implicit(System.ValueTuple{System.Int32,System.Int32})~OpenTK.Mathematics.Vector2i
  commentId: M:OpenTK.Mathematics.Vector2i.op_Implicit(System.ValueTuple{System.Int32,System.Int32})~OpenTK.Mathematics.Vector2i
  id: op_Implicit(System.ValueTuple{System.Int32,System.Int32})~OpenTK.Mathematics.Vector2i
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: implicit operator Vector2i((int X, int Y))
  nameWithType: Vector2i.implicit operator Vector2i((int X, int Y))
  fullName: OpenTK.Mathematics.Vector2i.implicit operator OpenTK.Mathematics.Vector2i((int X, int Y))
  type: Operator
  source:
    id: op_Implicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 618
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> struct using a tuple containing the component

    values.
  example: []
  syntax:
    content: >-
      [Pure]

      public static implicit operator Vector2i((int X, int Y) values)
    parameters:
    - id: values
      type: System.ValueTuple{System.Int32,System.Int32}
      description: A tuple containing the component values.
    return:
      type: OpenTK.Mathematics.Vector2i
      description: A new instance of the <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> struct with the given component values.
    content.vb: >-
      <Pure>

      Public Shared Widening Operator CType(values As (X As Integer, Y As Integer)) As Vector2i
  overload: OpenTK.Mathematics.Vector2i.op_Implicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2i.CType((X As Integer, Y As Integer))
  fullName.vb: OpenTK.Mathematics.Vector2i.CType((X As Integer, Y As Integer))
  name.vb: CType((X As Integer, Y As Integer))
- uid: OpenTK.Mathematics.Vector2i.op_Explicit(OpenTK.Mathematics.Vector2i)~System.Drawing.Point
  commentId: M:OpenTK.Mathematics.Vector2i.op_Explicit(OpenTK.Mathematics.Vector2i)~System.Drawing.Point
  id: op_Explicit(OpenTK.Mathematics.Vector2i)~System.Drawing.Point
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: explicit operator Point(Vector2i)
  nameWithType: Vector2i.explicit operator Point(Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.explicit operator System.Drawing.Point(OpenTK.Mathematics.Vector2i)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 629
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> to <xref href="System.Drawing.Point" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator Point(Vector2i vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector2i
      description: The <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> to cast.
    return:
      type: System.Drawing.Point
      description: The resulting <xref href="System.Drawing.Point" data-throw-if-not-resolved="false"></xref>.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(vec As Vector2i) As Point
  overload: OpenTK.Mathematics.Vector2i.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2i.CType(Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.CType(OpenTK.Mathematics.Vector2i)
  name.vb: CType(Vector2i)
- uid: OpenTK.Mathematics.Vector2i.op_Explicit(OpenTK.Mathematics.Vector2i)~System.Drawing.Size
  commentId: M:OpenTK.Mathematics.Vector2i.op_Explicit(OpenTK.Mathematics.Vector2i)~System.Drawing.Size
  id: op_Explicit(OpenTK.Mathematics.Vector2i)~System.Drawing.Size
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: explicit operator Size(Vector2i)
  nameWithType: Vector2i.explicit operator Size(Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.explicit operator System.Drawing.Size(OpenTK.Mathematics.Vector2i)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 640
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> to <xref href="System.Drawing.Size" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator Size(Vector2i vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector2i
      description: The <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> to cast.
    return:
      type: System.Drawing.Size
      description: The resulting <xref href="System.Drawing.Size" data-throw-if-not-resolved="false"></xref>.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(vec As Vector2i) As Size
  overload: OpenTK.Mathematics.Vector2i.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2i.CType(Vector2i)
  fullName.vb: OpenTK.Mathematics.Vector2i.CType(OpenTK.Mathematics.Vector2i)
  name.vb: CType(Vector2i)
- uid: OpenTK.Mathematics.Vector2i.ToString
  commentId: M:OpenTK.Mathematics.Vector2i.ToString
  id: ToString
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector2i.ToString()
  fullName: OpenTK.Mathematics.Vector2i.ToString()
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 647
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: OpenTK.Mathematics.Vector2i.ToString*
- uid: OpenTK.Mathematics.Vector2i.ToString(System.String)
  commentId: M:OpenTK.Mathematics.Vector2i.ToString(System.String)
  id: ToString(System.String)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Vector2i.ToString(string)
  fullName: OpenTK.Mathematics.Vector2i.ToString(string)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 653
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public string ToString(string format)
    parameters:
    - id: format
      type: System.String
      description: >-
        The format to use.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to use the default format defined for the type of the <xref href="System.IFormattable" data-throw-if-not-resolved="false"></xref> implementation.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(format As String) As String
  overload: OpenTK.Mathematics.Vector2i.ToString*
  nameWithType.vb: Vector2i.ToString(String)
  fullName.vb: OpenTK.Mathematics.Vector2i.ToString(String)
  name.vb: ToString(String)
- uid: OpenTK.Mathematics.Vector2i.ToString(System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Vector2i.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: Vector2i.ToString(IFormatProvider)
  fullName: OpenTK.Mathematics.Vector2i.ToString(System.IFormatProvider)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 659
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public string ToString(IFormatProvider formatProvider)
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
      description: >-
        The provider to use to format the value.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Vector2i.ToString*
- uid: OpenTK.Mathematics.Vector2i.ToString(System.String,System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Vector2i.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: ToString(string, IFormatProvider)
  nameWithType: Vector2i.ToString(string, IFormatProvider)
  fullName: OpenTK.Mathematics.Vector2i.ToString(string, System.IFormatProvider)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 665
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public readonly string ToString(string format, IFormatProvider formatProvider)
    parameters:
    - id: format
      type: System.String
      description: >-
        The format to use.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to use the default format defined for the type of the <xref href="System.IFormattable" data-throw-if-not-resolved="false"></xref> implementation.
    - id: formatProvider
      type: System.IFormatProvider
      description: >-
        The provider to use to format the value.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Vector2i.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: Vector2i.ToString(String, IFormatProvider)
  fullName.vb: OpenTK.Mathematics.Vector2i.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
- uid: OpenTK.Mathematics.Vector2i.Equals(System.Object)
  commentId: M:OpenTK.Mathematics.Vector2i.Equals(System.Object)
  id: Equals(System.Object)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Vector2i.Equals(object)
  fullName: OpenTK.Mathematics.Vector2i.Equals(object)
  type: Method
  source:
    id: Equals
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 675
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: OpenTK.Mathematics.Vector2i.Equals*
  nameWithType.vb: Vector2i.Equals(Object)
  fullName.vb: OpenTK.Mathematics.Vector2i.Equals(Object)
  name.vb: Equals(Object)
- uid: OpenTK.Mathematics.Vector2i.Equals(OpenTK.Mathematics.Vector2i)
  commentId: M:OpenTK.Mathematics.Vector2i.Equals(OpenTK.Mathematics.Vector2i)
  id: Equals(OpenTK.Mathematics.Vector2i)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Equals(Vector2i)
  nameWithType: Vector2i.Equals(Vector2i)
  fullName: OpenTK.Mathematics.Vector2i.Equals(OpenTK.Mathematics.Vector2i)
  type: Method
  source:
    id: Equals
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 681
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public readonly bool Equals(Vector2i other)
    parameters:
    - id: other
      type: OpenTK.Mathematics.Vector2i
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As Vector2i) As Boolean
  overload: OpenTK.Mathematics.Vector2i.Equals*
  implements:
  - System.IEquatable{OpenTK.Mathematics.Vector2i}.Equals(OpenTK.Mathematics.Vector2i)
- uid: OpenTK.Mathematics.Vector2i.GetHashCode
  commentId: M:OpenTK.Mathematics.Vector2i.GetHashCode
  id: GetHashCode
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Vector2i.GetHashCode()
  fullName: OpenTK.Mathematics.Vector2i.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 688
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override readonly int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: OpenTK.Mathematics.Vector2i.GetHashCode*
- uid: OpenTK.Mathematics.Vector2i.Deconstruct(System.Int32@,System.Int32@)
  commentId: M:OpenTK.Mathematics.Vector2i.Deconstruct(System.Int32@,System.Int32@)
  id: Deconstruct(System.Int32@,System.Int32@)
  parent: OpenTK.Mathematics.Vector2i
  langs:
  - csharp
  - vb
  name: Deconstruct(out int, out int)
  nameWithType: Vector2i.Deconstruct(out int, out int)
  fullName: OpenTK.Mathematics.Vector2i.Deconstruct(out int, out int)
  type: Method
  source:
    id: Deconstruct
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector2i.cs
    startLine: 698
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Deconstructs the vector into it's individual components.
  example: []
  syntax:
    content: >-
      [Pure]

      public readonly void Deconstruct(out int x, out int y)
    parameters:
    - id: x
      type: System.Int32
      description: The X component of the vector.
    - id: y
      type: System.Int32
      description: The Y component of the vector.
    content.vb: >-
      <Pure>

      Public Sub Deconstruct(x As Integer, y As Integer)
  overload: OpenTK.Mathematics.Vector2i.Deconstruct*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector2i.Deconstruct(Integer, Integer)
  fullName.vb: OpenTK.Mathematics.Vector2i.Deconstruct(Integer, Integer)
  name.vb: Deconstruct(Integer, Integer)
references:
- uid: OpenTK.Mathematics
  commentId: N:OpenTK.Mathematics
  href: OpenTK.html
  name: OpenTK.Mathematics
  nameWithType: OpenTK.Mathematics
  fullName: OpenTK.Mathematics
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
- uid: System.IEquatable{OpenTK.Mathematics.Vector2i}
  commentId: T:System.IEquatable{OpenTK.Mathematics.Vector2i}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Vector2i>
  nameWithType: IEquatable<Vector2i>
  fullName: System.IEquatable<OpenTK.Mathematics.Vector2i>
  nameWithType.vb: IEquatable(Of Vector2i)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Vector2i)
  name.vb: IEquatable(Of Vector2i)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: OpenTK.Mathematics.Vector2i
    name: Vector2i
    href: OpenTK.Mathematics.Vector2i.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Mathematics.Vector2i
    name: Vector2i
    href: OpenTK.Mathematics.Vector2i.html
  - name: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: OpenTK.Mathematics.Vector2i
  commentId: T:OpenTK.Mathematics.Vector2i
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector2i.html
  name: Vector2i
  nameWithType: Vector2i
  fullName: OpenTK.Mathematics.Vector2i
- uid: OpenTK.Mathematics.Vector2i.#ctor*
  commentId: Overload:OpenTK.Mathematics.Vector2i.#ctor
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i__ctor_System_Int32_
  name: Vector2i
  nameWithType: Vector2i.Vector2i
  fullName: OpenTK.Mathematics.Vector2i.Vector2i
  nameWithType.vb: Vector2i.New
  fullName.vb: OpenTK.Mathematics.Vector2i.New
  name.vb: New
- uid: System.IndexOutOfRangeException
  commentId: T:System.IndexOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.indexoutofrangeexception
  name: IndexOutOfRangeException
  nameWithType: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
- uid: OpenTK.Mathematics.Vector2i.Item*
  commentId: Overload:OpenTK.Mathematics.Vector2i.Item
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_Item_System_Int32_
  name: this
  nameWithType: Vector2i.this
  fullName: OpenTK.Mathematics.Vector2i.this
  nameWithType.vb: Vector2i.this[]
  fullName.vb: OpenTK.Mathematics.Vector2i.this[]
  name.vb: this[]
- uid: OpenTK.Mathematics.Vector2i.ManhattanLength*
  commentId: Overload:OpenTK.Mathematics.Vector2i.ManhattanLength
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_ManhattanLength
  name: ManhattanLength
  nameWithType: Vector2i.ManhattanLength
  fullName: OpenTK.Mathematics.Vector2i.ManhattanLength
- uid: OpenTK.Mathematics.Vector2i.EuclideanLengthSquared*
  commentId: Overload:OpenTK.Mathematics.Vector2i.EuclideanLengthSquared
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_EuclideanLengthSquared
  name: EuclideanLengthSquared
  nameWithType: Vector2i.EuclideanLengthSquared
  fullName: OpenTK.Mathematics.Vector2i.EuclideanLengthSquared
- uid: OpenTK.Mathematics.Vector2i.EuclideanLength*
  commentId: Overload:OpenTK.Mathematics.Vector2i.EuclideanLength
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_EuclideanLength
  name: EuclideanLength
  nameWithType: Vector2i.EuclideanLength
  fullName: OpenTK.Mathematics.Vector2i.EuclideanLength
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: OpenTK.Mathematics.Vector2i.PerpendicularRight*
  commentId: Overload:OpenTK.Mathematics.Vector2i.PerpendicularRight
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_PerpendicularRight
  name: PerpendicularRight
  nameWithType: Vector2i.PerpendicularRight
  fullName: OpenTK.Mathematics.Vector2i.PerpendicularRight
- uid: OpenTK.Mathematics.Vector2i.PerpendicularLeft*
  commentId: Overload:OpenTK.Mathematics.Vector2i.PerpendicularLeft
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_PerpendicularLeft
  name: PerpendicularLeft
  nameWithType: Vector2i.PerpendicularLeft
  fullName: OpenTK.Mathematics.Vector2i.PerpendicularLeft
- uid: OpenTK.Mathematics.Vector2i.Abs*
  commentId: Overload:OpenTK.Mathematics.Vector2i.Abs
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_Abs
  name: Abs
  nameWithType: Vector2i.Abs
  fullName: OpenTK.Mathematics.Vector2i.Abs
- uid: OpenTK.Mathematics.Vector2i.Add*
  commentId: Overload:OpenTK.Mathematics.Vector2i.Add
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_Add_OpenTK_Mathematics_Vector2i_OpenTK_Mathematics_Vector2i_
  name: Add
  nameWithType: Vector2i.Add
  fullName: OpenTK.Mathematics.Vector2i.Add
- uid: OpenTK.Mathematics.Vector2i.Subtract*
  commentId: Overload:OpenTK.Mathematics.Vector2i.Subtract
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_Subtract_OpenTK_Mathematics_Vector2i_OpenTK_Mathematics_Vector2i_
  name: Subtract
  nameWithType: Vector2i.Subtract
  fullName: OpenTK.Mathematics.Vector2i.Subtract
- uid: OpenTK.Mathematics.Vector2i.Multiply*
  commentId: Overload:OpenTK.Mathematics.Vector2i.Multiply
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_Multiply_OpenTK_Mathematics_Vector2i_System_Int32_
  name: Multiply
  nameWithType: Vector2i.Multiply
  fullName: OpenTK.Mathematics.Vector2i.Multiply
- uid: OpenTK.Mathematics.Vector2i.Divide*
  commentId: Overload:OpenTK.Mathematics.Vector2i.Divide
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_Divide_OpenTK_Mathematics_Vector2i_System_Int32_
  name: Divide
  nameWithType: Vector2i.Divide
  fullName: OpenTK.Mathematics.Vector2i.Divide
- uid: OpenTK.Mathematics.Vector2i.ComponentMin*
  commentId: Overload:OpenTK.Mathematics.Vector2i.ComponentMin
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_ComponentMin_OpenTK_Mathematics_Vector2i_OpenTK_Mathematics_Vector2i_
  name: ComponentMin
  nameWithType: Vector2i.ComponentMin
  fullName: OpenTK.Mathematics.Vector2i.ComponentMin
- uid: OpenTK.Mathematics.Vector2i.ComponentMax*
  commentId: Overload:OpenTK.Mathematics.Vector2i.ComponentMax
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_ComponentMax_OpenTK_Mathematics_Vector2i_OpenTK_Mathematics_Vector2i_
  name: ComponentMax
  nameWithType: Vector2i.ComponentMax
  fullName: OpenTK.Mathematics.Vector2i.ComponentMax
- uid: OpenTK.Mathematics.Vector2i.Clamp*
  commentId: Overload:OpenTK.Mathematics.Vector2i.Clamp
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_Clamp_OpenTK_Mathematics_Vector2i_OpenTK_Mathematics_Vector2i_OpenTK_Mathematics_Vector2i_
  name: Clamp
  nameWithType: Vector2i.Clamp
  fullName: OpenTK.Mathematics.Vector2i.Clamp
- uid: OpenTK.Mathematics.Vector2i.Yx*
  commentId: Overload:OpenTK.Mathematics.Vector2i.Yx
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_Yx
  name: Yx
  nameWithType: Vector2i.Yx
  fullName: OpenTK.Mathematics.Vector2i.Yx
- uid: OpenTK.Mathematics.Vector2
  commentId: T:OpenTK.Mathematics.Vector2
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector2.html
  name: Vector2
  nameWithType: Vector2
  fullName: OpenTK.Mathematics.Vector2
- uid: OpenTK.Mathematics.Vector3
  commentId: T:OpenTK.Mathematics.Vector3
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: OpenTK.Mathematics.Vector3
- uid: OpenTK.Mathematics.Vector2i.ToVector2*
  commentId: Overload:OpenTK.Mathematics.Vector2i.ToVector2
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_ToVector2
  name: ToVector2
  nameWithType: Vector2i.ToVector2
  fullName: OpenTK.Mathematics.Vector2i.ToVector2
- uid: OpenTK.Mathematics.Vector2i.op_Addition*
  commentId: Overload:OpenTK.Mathematics.Vector2i.op_Addition
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_op_Addition_OpenTK_Mathematics_Vector2i_OpenTK_Mathematics_Vector2i_
  name: operator +
  nameWithType: Vector2i.operator +
  fullName: OpenTK.Mathematics.Vector2i.operator +
  nameWithType.vb: Vector2i.+
  fullName.vb: OpenTK.Mathematics.Vector2i.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector2i.op_Addition*
    name: +
    href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_op_Addition_OpenTK_Mathematics_Vector2i_OpenTK_Mathematics_Vector2i_
- uid: OpenTK.Mathematics.Vector2i.op_Subtraction*
  commentId: Overload:OpenTK.Mathematics.Vector2i.op_Subtraction
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_op_Subtraction_OpenTK_Mathematics_Vector2i_OpenTK_Mathematics_Vector2i_
  name: operator -
  nameWithType: Vector2i.operator -
  fullName: OpenTK.Mathematics.Vector2i.operator -
  nameWithType.vb: Vector2i.-
  fullName.vb: OpenTK.Mathematics.Vector2i.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector2i.op_Subtraction*
    name: '-'
    href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_op_Subtraction_OpenTK_Mathematics_Vector2i_OpenTK_Mathematics_Vector2i_
- uid: OpenTK.Mathematics.Vector2i.op_UnaryNegation*
  commentId: Overload:OpenTK.Mathematics.Vector2i.op_UnaryNegation
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_op_UnaryNegation_OpenTK_Mathematics_Vector2i_
  name: operator -
  nameWithType: Vector2i.operator -
  fullName: OpenTK.Mathematics.Vector2i.operator -
  nameWithType.vb: Vector2i.-
  fullName.vb: OpenTK.Mathematics.Vector2i.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector2i.op_UnaryNegation*
    name: '-'
    href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_op_UnaryNegation_OpenTK_Mathematics_Vector2i_
- uid: OpenTK.Mathematics.Vector2i.op_Multiply*
  commentId: Overload:OpenTK.Mathematics.Vector2i.op_Multiply
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_op_Multiply_OpenTK_Mathematics_Vector2i_System_Int32_
  name: operator *
  nameWithType: Vector2i.operator *
  fullName: OpenTK.Mathematics.Vector2i.operator *
  nameWithType.vb: Vector2i.*
  fullName.vb: OpenTK.Mathematics.Vector2i.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector2i.op_Multiply*
    name: '*'
    href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_op_Multiply_OpenTK_Mathematics_Vector2i_System_Int32_
- uid: OpenTK.Mathematics.Vector2i.op_Division*
  commentId: Overload:OpenTK.Mathematics.Vector2i.op_Division
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_op_Division_OpenTK_Mathematics_Vector2i_System_Int32_
  name: operator /
  nameWithType: Vector2i.operator /
  fullName: OpenTK.Mathematics.Vector2i.operator /
  nameWithType.vb: Vector2i./
  fullName.vb: OpenTK.Mathematics.Vector2i./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector2i.op_Division*
    name: /
    href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_op_Division_OpenTK_Mathematics_Vector2i_System_Int32_
- uid: OpenTK.Mathematics.Vector2i.op_Equality*
  commentId: Overload:OpenTK.Mathematics.Vector2i.op_Equality
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_op_Equality_OpenTK_Mathematics_Vector2i_OpenTK_Mathematics_Vector2i_
  name: operator ==
  nameWithType: Vector2i.operator ==
  fullName: OpenTK.Mathematics.Vector2i.operator ==
  nameWithType.vb: Vector2i.=
  fullName.vb: OpenTK.Mathematics.Vector2i.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector2i.op_Equality*
    name: ==
    href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_op_Equality_OpenTK_Mathematics_Vector2i_OpenTK_Mathematics_Vector2i_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenTK.Mathematics.Vector2i.op_Inequality*
  commentId: Overload:OpenTK.Mathematics.Vector2i.op_Inequality
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_op_Inequality_OpenTK_Mathematics_Vector2i_OpenTK_Mathematics_Vector2i_
  name: operator !=
  nameWithType: Vector2i.operator !=
  fullName: OpenTK.Mathematics.Vector2i.operator !=
  nameWithType.vb: Vector2i.<>
  fullName.vb: OpenTK.Mathematics.Vector2i.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector2i.op_Inequality*
    name: '!='
    href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_op_Inequality_OpenTK_Mathematics_Vector2i_OpenTK_Mathematics_Vector2i_
- uid: OpenTK.Mathematics.Vector2i.op_Implicit*
  commentId: Overload:OpenTK.Mathematics.Vector2i.op_Implicit
  name: implicit operator
  nameWithType: Vector2i.implicit operator
  fullName: OpenTK.Mathematics.Vector2i.implicit operator
  nameWithType.vb: Vector2i.CType
  fullName.vb: OpenTK.Mathematics.Vector2i.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: OpenTK.Mathematics.Vector2d
  commentId: T:OpenTK.Mathematics.Vector2d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector2d.html
  name: Vector2d
  nameWithType: Vector2d
  fullName: OpenTK.Mathematics.Vector2d
- uid: OpenTK.Mathematics.Vector2i.op_Explicit*
  commentId: Overload:OpenTK.Mathematics.Vector2i.op_Explicit
  name: explicit operator
  nameWithType: Vector2i.explicit operator
  fullName: OpenTK.Mathematics.Vector2i.explicit operator
  nameWithType.vb: Vector2i.CType
  fullName.vb: OpenTK.Mathematics.Vector2i.CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: OpenTK.Mathematics.Vector2h
  commentId: T:OpenTK.Mathematics.Vector2h
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector2h.html
  name: Vector2h
  nameWithType: Vector2h
  fullName: OpenTK.Mathematics.Vector2h
- uid: System.ValueTuple{System.Int32,System.Int32}
  commentId: T:System.ValueTuple{System.Int32,System.Int32}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: (int X, int Y)
  nameWithType: (int X, int Y)
  fullName: (int X, int Y)
  nameWithType.vb: (X As Integer, Y As Integer)
  fullName.vb: (X As Integer, Y As Integer)
  name.vb: (X As Integer, Y As Integer)
  spec.csharp:
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.X
    name: X
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.x
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.Y
    name: Y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.y
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32}.X
    name: X
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.x
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.Y
    name: Y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.y
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.Drawing.Point
  commentId: T:System.Drawing.Point
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.point
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Drawing
  commentId: N:System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Drawing
  nameWithType: System.Drawing
  fullName: System.Drawing
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
- uid: System.Drawing.Size
  commentId: T:System.Drawing.Size
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.size
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Vector2i.ToString*
  commentId: Overload:OpenTK.Mathematics.Vector2i.ToString
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_ToString
  name: ToString
  nameWithType: Vector2i.ToString
  fullName: OpenTK.Mathematics.Vector2i.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: OpenTK.Mathematics.Vector2i.Equals*
  commentId: Overload:OpenTK.Mathematics.Vector2i.Equals
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_Equals_System_Object_
  name: Equals
  nameWithType: Vector2i.Equals
  fullName: OpenTK.Mathematics.Vector2i.Equals
- uid: System.IEquatable{OpenTK.Mathematics.Vector2i}.Equals(OpenTK.Mathematics.Vector2i)
  commentId: M:System.IEquatable{OpenTK.Mathematics.Vector2i}.Equals(OpenTK.Mathematics.Vector2i)
  parent: System.IEquatable{OpenTK.Mathematics.Vector2i}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Vector2i)
  nameWithType: IEquatable<Vector2i>.Equals(Vector2i)
  fullName: System.IEquatable<OpenTK.Mathematics.Vector2i>.Equals(OpenTK.Mathematics.Vector2i)
  nameWithType.vb: IEquatable(Of Vector2i).Equals(Vector2i)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Vector2i).Equals(OpenTK.Mathematics.Vector2i)
  spec.csharp:
  - uid: System.IEquatable{OpenTK.Mathematics.Vector2i}.Equals(OpenTK.Mathematics.Vector2i)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: OpenTK.Mathematics.Vector2i
    name: Vector2i
    href: OpenTK.Mathematics.Vector2i.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{OpenTK.Mathematics.Vector2i}.Equals(OpenTK.Mathematics.Vector2i)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: OpenTK.Mathematics.Vector2i
    name: Vector2i
    href: OpenTK.Mathematics.Vector2i.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Vector2i.GetHashCode*
  commentId: Overload:OpenTK.Mathematics.Vector2i.GetHashCode
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_GetHashCode
  name: GetHashCode
  nameWithType: Vector2i.GetHashCode
  fullName: OpenTK.Mathematics.Vector2i.GetHashCode
- uid: OpenTK.Mathematics.Vector2i.Deconstruct*
  commentId: Overload:OpenTK.Mathematics.Vector2i.Deconstruct
  href: OpenTK.Mathematics.Vector2i.html#OpenTK_Mathematics_Vector2i_Deconstruct_System_Int32__System_Int32__
  name: Deconstruct
  nameWithType: Vector2i.Deconstruct
  fullName: OpenTK.Mathematics.Vector2i.Deconstruct
