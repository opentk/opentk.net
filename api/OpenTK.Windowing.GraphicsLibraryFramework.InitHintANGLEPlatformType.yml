### YamlMime:ManagedReference
items:
- uid: OpenTK.Windowing.GraphicsLibraryFramework.InitHintANGLEPlatformType
  commentId: T:OpenTK.Windowing.GraphicsLibraryFramework.InitHintANGLEPlatformType
  id: InitHintANGLEPlatformType
  parent: OpenTK.Windowing.GraphicsLibraryFramework
  children:
  - OpenTK.Windowing.GraphicsLibraryFramework.InitHintANGLEPlatformType.ANGLEPlatformType
  langs:
  - csharp
  - vb
  name: InitHintANGLEPlatformType
  nameWithType: InitHintANGLEPlatformType
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.InitHintANGLEPlatformType
  type: Enum
  source:
    id: InitHintANGLEPlatformType
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Enums\InitHintANGLEPlatformType.cs
    startLine: 6
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  syntax:
    content: public enum InitHintANGLEPlatformType
    content.vb: Public Enum InitHintANGLEPlatformType
- uid: OpenTK.Windowing.GraphicsLibraryFramework.InitHintANGLEPlatformType.ANGLEPlatformType
  commentId: F:OpenTK.Windowing.GraphicsLibraryFramework.InitHintANGLEPlatformType.ANGLEPlatformType
  id: ANGLEPlatformType
  parent: OpenTK.Windowing.GraphicsLibraryFramework.InitHintANGLEPlatformType
  langs:
  - csharp
  - vb
  name: ANGLEPlatformType
  nameWithType: InitHintANGLEPlatformType.ANGLEPlatformType
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.InitHintANGLEPlatformType.ANGLEPlatformType
  type: Field
  source:
    id: ANGLEPlatformType
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Enums\InitHintANGLEPlatformType.cs
    startLine: 16
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: >-
    Specifies the platform type (rendering backend) to request when using OpenGL ES and EGL via ANGLE.

    If the requested platform type is unavailable, ANGLE will use its default.

    Possible values are one of <xref href="OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.None" data-throw-if-not-resolved="false"></xref>, <xref href="OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.OpenGL" data-throw-if-not-resolved="false"></xref>, <xref href="OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.OpenGLES" data-throw-if-not-resolved="false"></xref>, <xref href="OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.D3D9" data-throw-if-not-resolved="false"></xref>, <xref href="OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.D3D11" data-throw-if-not-resolved="false"></xref>, <xref href="OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.Vulkan" data-throw-if-not-resolved="false"></xref> and <xref href="OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.Metal" data-throw-if-not-resolved="false"></xref>.


    The ANGLE platform type is specified via the EGL_ANGLE_platform_angle extension.

    This extension is not used if this hint is GLFW_ANGLE_PLATFORM_TYPE_NONE, which is the default value.
  example: []
  syntax:
    content: ANGLEPlatformType = 327682
    return:
      type: OpenTK.Windowing.GraphicsLibraryFramework.InitHintANGLEPlatformType
references:
- uid: OpenTK.Windowing.GraphicsLibraryFramework
  commentId: N:OpenTK.Windowing.GraphicsLibraryFramework
  href: OpenTK.html
  name: OpenTK.Windowing.GraphicsLibraryFramework
  nameWithType: OpenTK.Windowing.GraphicsLibraryFramework
  fullName: OpenTK.Windowing.GraphicsLibraryFramework
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Windowing
    name: Windowing
    href: OpenTK.Windowing.html
  - name: .
  - uid: OpenTK.Windowing.GraphicsLibraryFramework
    name: GraphicsLibraryFramework
    href: OpenTK.Windowing.GraphicsLibraryFramework.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Windowing
    name: Windowing
    href: OpenTK.Windowing.html
  - name: .
  - uid: OpenTK.Windowing.GraphicsLibraryFramework
    name: GraphicsLibraryFramework
    href: OpenTK.Windowing.GraphicsLibraryFramework.html
- uid: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.None
  commentId: F:OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.None
  href: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.html#OpenTK_Windowing_GraphicsLibraryFramework_ANGLEPlatformType_None
  name: None
  nameWithType: ANGLEPlatformType.None
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.None
- uid: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.OpenGL
  commentId: F:OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.OpenGL
  href: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.html#OpenTK_Windowing_GraphicsLibraryFramework_ANGLEPlatformType_OpenGL
  name: OpenGL
  nameWithType: ANGLEPlatformType.OpenGL
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.OpenGL
- uid: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.OpenGLES
  commentId: F:OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.OpenGLES
  href: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.html#OpenTK_Windowing_GraphicsLibraryFramework_ANGLEPlatformType_OpenGLES
  name: OpenGLES
  nameWithType: ANGLEPlatformType.OpenGLES
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.OpenGLES
- uid: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.D3D9
  commentId: F:OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.D3D9
  href: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.html#OpenTK_Windowing_GraphicsLibraryFramework_ANGLEPlatformType_D3D9
  name: D3D9
  nameWithType: ANGLEPlatformType.D3D9
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.D3D9
- uid: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.D3D11
  commentId: F:OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.D3D11
  href: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.html#OpenTK_Windowing_GraphicsLibraryFramework_ANGLEPlatformType_D3D11
  name: D3D11
  nameWithType: ANGLEPlatformType.D3D11
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.D3D11
- uid: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.Vulkan
  commentId: F:OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.Vulkan
  href: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.html#OpenTK_Windowing_GraphicsLibraryFramework_ANGLEPlatformType_Vulkan
  name: Vulkan
  nameWithType: ANGLEPlatformType.Vulkan
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.Vulkan
- uid: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.Metal
  commentId: F:OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.Metal
  href: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.html#OpenTK_Windowing_GraphicsLibraryFramework_ANGLEPlatformType_Metal
  name: Metal
  nameWithType: ANGLEPlatformType.Metal
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.ANGLEPlatformType.Metal
- uid: OpenTK.Windowing.GraphicsLibraryFramework.InitHintANGLEPlatformType
  commentId: T:OpenTK.Windowing.GraphicsLibraryFramework.InitHintANGLEPlatformType
  parent: OpenTK.Windowing.GraphicsLibraryFramework
  href: OpenTK.Windowing.GraphicsLibraryFramework.InitHintANGLEPlatformType.html
  name: InitHintANGLEPlatformType
  nameWithType: InitHintANGLEPlatformType
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.InitHintANGLEPlatformType
