### YamlMime:ManagedReference
items:
- uid: OpenTK.Mathematics.Quaternion
  commentId: T:OpenTK.Mathematics.Quaternion
  id: Quaternion
  parent: OpenTK.Mathematics
  children:
  - OpenTK.Mathematics.Quaternion.#ctor(OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Quaternion.#ctor(OpenTK.Mathematics.Vector3,System.Single)
  - OpenTK.Mathematics.Quaternion.#ctor(System.Single,System.Single,System.Single)
  - OpenTK.Mathematics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
  - OpenTK.Mathematics.Quaternion.Add(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  - OpenTK.Mathematics.Quaternion.Add(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  - OpenTK.Mathematics.Quaternion.Conjugate
  - OpenTK.Mathematics.Quaternion.Conjugate(OpenTK.Mathematics.Quaternion)
  - OpenTK.Mathematics.Quaternion.Conjugate(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  - OpenTK.Mathematics.Quaternion.Equals(OpenTK.Mathematics.Quaternion)
  - OpenTK.Mathematics.Quaternion.Equals(System.Object)
  - OpenTK.Mathematics.Quaternion.FromAxisAngle(OpenTK.Mathematics.Vector3,System.Single)
  - OpenTK.Mathematics.Quaternion.FromEulerAngles(OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Quaternion.FromEulerAngles(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Quaternion@)
  - OpenTK.Mathematics.Quaternion.FromEulerAngles(System.Single,System.Single,System.Single)
  - OpenTK.Mathematics.Quaternion.FromMatrix(OpenTK.Mathematics.Matrix3)
  - OpenTK.Mathematics.Quaternion.FromMatrix(OpenTK.Mathematics.Matrix3@,OpenTK.Mathematics.Quaternion@)
  - OpenTK.Mathematics.Quaternion.GetHashCode
  - OpenTK.Mathematics.Quaternion.Identity
  - OpenTK.Mathematics.Quaternion.Invert
  - OpenTK.Mathematics.Quaternion.Invert(OpenTK.Mathematics.Quaternion)
  - OpenTK.Mathematics.Quaternion.Invert(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  - OpenTK.Mathematics.Quaternion.Inverted
  - OpenTK.Mathematics.Quaternion.Length
  - OpenTK.Mathematics.Quaternion.LengthSquared
  - OpenTK.Mathematics.Quaternion.Multiply(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  - OpenTK.Mathematics.Quaternion.Multiply(OpenTK.Mathematics.Quaternion,System.Single)
  - OpenTK.Mathematics.Quaternion.Multiply(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  - OpenTK.Mathematics.Quaternion.Multiply(OpenTK.Mathematics.Quaternion@,System.Single,OpenTK.Mathematics.Quaternion@)
  - OpenTK.Mathematics.Quaternion.Normalize
  - OpenTK.Mathematics.Quaternion.Normalize(OpenTK.Mathematics.Quaternion)
  - OpenTK.Mathematics.Quaternion.Normalize(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  - OpenTK.Mathematics.Quaternion.Normalized
  - OpenTK.Mathematics.Quaternion.Slerp(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion,System.Single)
  - OpenTK.Mathematics.Quaternion.Sub(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  - OpenTK.Mathematics.Quaternion.Sub(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  - OpenTK.Mathematics.Quaternion.ToAxisAngle
  - OpenTK.Mathematics.Quaternion.ToAxisAngle(OpenTK.Mathematics.Vector3@,System.Single@)
  - OpenTK.Mathematics.Quaternion.ToEulerAngles
  - OpenTK.Mathematics.Quaternion.ToEulerAngles(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Quaternion.ToEulerAngles(OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Quaternion.ToString
  - OpenTK.Mathematics.Quaternion.ToString(System.IFormatProvider)
  - OpenTK.Mathematics.Quaternion.ToString(System.String)
  - OpenTK.Mathematics.Quaternion.ToString(System.String,System.IFormatProvider)
  - OpenTK.Mathematics.Quaternion.W
  - OpenTK.Mathematics.Quaternion.X
  - OpenTK.Mathematics.Quaternion.Xyz
  - OpenTK.Mathematics.Quaternion.Y
  - OpenTK.Mathematics.Quaternion.Z
  - OpenTK.Mathematics.Quaternion.op_Addition(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  - OpenTK.Mathematics.Quaternion.op_Equality(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  - OpenTK.Mathematics.Quaternion.op_Inequality(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  - OpenTK.Mathematics.Quaternion.op_Multiply(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  - OpenTK.Mathematics.Quaternion.op_Multiply(OpenTK.Mathematics.Quaternion,System.Single)
  - OpenTK.Mathematics.Quaternion.op_Multiply(System.Single,OpenTK.Mathematics.Quaternion)
  - OpenTK.Mathematics.Quaternion.op_Subtraction(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  langs:
  - csharp
  - vb
  name: Quaternion
  nameWithType: Quaternion
  fullName: OpenTK.Mathematics.Quaternion
  type: Struct
  source:
    id: Quaternion
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 33
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Represents a Quaternion.
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct Quaternion : IEquatable<Quaternion>, IFormattable
    content.vb: >-
      <Serializable>

      Public Structure Quaternion Implements IEquatable(Of Quaternion), IFormattable
  implements:
  - System.IEquatable{OpenTK.Mathematics.Quaternion}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Quaternion.Xyz
  commentId: F:OpenTK.Mathematics.Quaternion.Xyz
  id: Xyz
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Xyz
  nameWithType: Quaternion.Xyz
  fullName: OpenTK.Mathematics.Quaternion.Xyz
  type: Field
  source:
    id: Xyz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 39
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The X, Y and Z components of this instance.
  example: []
  syntax:
    content: public Vector3 Xyz
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Xyz As Vector3
- uid: OpenTK.Mathematics.Quaternion.W
  commentId: F:OpenTK.Mathematics.Quaternion.W
  id: W
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: W
  nameWithType: Quaternion.W
  fullName: OpenTK.Mathematics.Quaternion.W
  type: Field
  source:
    id: W
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 44
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The W component of this instance.
  example: []
  syntax:
    content: public float W
    return:
      type: System.Single
    content.vb: Public W As Single
- uid: OpenTK.Mathematics.Quaternion.#ctor(OpenTK.Mathematics.Vector3,System.Single)
  commentId: M:OpenTK.Mathematics.Quaternion.#ctor(OpenTK.Mathematics.Vector3,System.Single)
  id: '#ctor(OpenTK.Mathematics.Vector3,System.Single)'
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Quaternion(Vector3, float)
  nameWithType: Quaternion.Quaternion(Vector3, float)
  fullName: OpenTK.Mathematics.Quaternion.Quaternion(OpenTK.Mathematics.Vector3, float)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 51
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Quaternion" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Quaternion(Vector3 v, float w)
    parameters:
    - id: v
      type: OpenTK.Mathematics.Vector3
      description: The vector part.
    - id: w
      type: System.Single
      description: The w part.
    content.vb: Public Sub New(v As Vector3, w As Single)
  overload: OpenTK.Mathematics.Quaternion.#ctor*
  nameWithType.vb: Quaternion.New(Vector3, Single)
  fullName.vb: OpenTK.Mathematics.Quaternion.New(OpenTK.Mathematics.Vector3, Single)
  name.vb: New(Vector3, Single)
- uid: OpenTK.Mathematics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:OpenTK.Mathematics.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Quaternion(float, float, float, float)
  nameWithType: Quaternion.Quaternion(float, float, float, float)
  fullName: OpenTK.Mathematics.Quaternion.Quaternion(float, float, float, float)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 64
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Quaternion" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Quaternion(float x, float y, float z, float w)
    parameters:
    - id: x
      type: System.Single
      description: The x component.
    - id: y
      type: System.Single
      description: The y component.
    - id: z
      type: System.Single
      description: The z component.
    - id: w
      type: System.Single
      description: The w component.
    content.vb: Public Sub New(x As Single, y As Single, z As Single, w As Single)
  overload: OpenTK.Mathematics.Quaternion.#ctor*
  nameWithType.vb: Quaternion.New(Single, Single, Single, Single)
  fullName.vb: OpenTK.Mathematics.Quaternion.New(Single, Single, Single, Single)
  name.vb: New(Single, Single, Single, Single)
- uid: OpenTK.Mathematics.Quaternion.#ctor(System.Single,System.Single,System.Single)
  commentId: M:OpenTK.Mathematics.Quaternion.#ctor(System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single)'
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Quaternion(float, float, float)
  nameWithType: Quaternion.Quaternion(float, float, float)
  fullName: OpenTK.Mathematics.Quaternion.Quaternion(float, float, float)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 77
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Initializes a new instance of the <xref href="OpenTK.Mathematics.Quaternion" data-throw-if-not-resolved="false"></xref> struct from given Euler angles in radians.

    The rotations will get applied in following order:

    1. around X axis, 2. around Y axis, 3. around Z axis.
  example: []
  syntax:
    content: public Quaternion(float rotationX, float rotationY, float rotationZ)
    parameters:
    - id: rotationX
      type: System.Single
      description: Counterclockwise rotation around X axis in radian.
    - id: rotationY
      type: System.Single
      description: Counterclockwise rotation around Y axis in radian.
    - id: rotationZ
      type: System.Single
      description: Counterclockwise rotation around Z axis in radian.
    content.vb: Public Sub New(rotationX As Single, rotationY As Single, rotationZ As Single)
  overload: OpenTK.Mathematics.Quaternion.#ctor*
  nameWithType.vb: Quaternion.New(Single, Single, Single)
  fullName.vb: OpenTK.Mathematics.Quaternion.New(Single, Single, Single)
  name.vb: New(Single, Single, Single)
- uid: OpenTK.Mathematics.Quaternion.#ctor(OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Quaternion.#ctor(OpenTK.Mathematics.Vector3)
  id: '#ctor(OpenTK.Mathematics.Vector3)'
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Quaternion(Vector3)
  nameWithType: Quaternion.Quaternion(Vector3)
  fullName: OpenTK.Mathematics.Quaternion.Quaternion(OpenTK.Mathematics.Vector3)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 102
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Initializes a new instance of the <xref href="OpenTK.Mathematics.Quaternion" data-throw-if-not-resolved="false"></xref> struct from given Euler angles in radians.

    The rotations will get applied in following order:

    1. Around X, 2. Around Y, 3. Around Z.
  example: []
  syntax:
    content: public Quaternion(Vector3 eulerAngles)
    parameters:
    - id: eulerAngles
      type: OpenTK.Mathematics.Vector3
      description: The counterclockwise euler angles as a Vector3.
    content.vb: Public Sub New(eulerAngles As Vector3)
  overload: OpenTK.Mathematics.Quaternion.#ctor*
  nameWithType.vb: Quaternion.New(Vector3)
  fullName.vb: OpenTK.Mathematics.Quaternion.New(OpenTK.Mathematics.Vector3)
  name.vb: New(Vector3)
- uid: OpenTK.Mathematics.Quaternion.X
  commentId: P:OpenTK.Mathematics.Quaternion.X
  id: X
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Quaternion.X
  fullName: OpenTK.Mathematics.Quaternion.X
  type: Property
  source:
    id: X
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 110
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the X component of this instance.
  example: []
  syntax:
    content: public float X { readonly get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property X As Single
  overload: OpenTK.Mathematics.Quaternion.X*
- uid: OpenTK.Mathematics.Quaternion.Y
  commentId: P:OpenTK.Mathematics.Quaternion.Y
  id: Y
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Quaternion.Y
  fullName: OpenTK.Mathematics.Quaternion.Y
  type: Property
  source:
    id: Y
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 120
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the Y component of this instance.
  example: []
  syntax:
    content: public float Y { readonly get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Y As Single
  overload: OpenTK.Mathematics.Quaternion.Y*
- uid: OpenTK.Mathematics.Quaternion.Z
  commentId: P:OpenTK.Mathematics.Quaternion.Z
  id: Z
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: Quaternion.Z
  fullName: OpenTK.Mathematics.Quaternion.Z
  type: Property
  source:
    id: Z
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 130
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the Z component of this instance.
  example: []
  syntax:
    content: public float Z { readonly get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Z As Single
  overload: OpenTK.Mathematics.Quaternion.Z*
- uid: OpenTK.Mathematics.Quaternion.ToAxisAngle(OpenTK.Mathematics.Vector3@,System.Single@)
  commentId: M:OpenTK.Mathematics.Quaternion.ToAxisAngle(OpenTK.Mathematics.Vector3@,System.Single@)
  id: ToAxisAngle(OpenTK.Mathematics.Vector3@,System.Single@)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: ToAxisAngle(out Vector3, out float)
  nameWithType: Quaternion.ToAxisAngle(out Vector3, out float)
  fullName: OpenTK.Mathematics.Quaternion.ToAxisAngle(out OpenTK.Mathematics.Vector3, out float)
  type: Method
  source:
    id: ToAxisAngle
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 142
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Convert the current quaternion to axis angle representation.
  example: []
  syntax:
    content: public void ToAxisAngle(out Vector3 axis, out float angle)
    parameters:
    - id: axis
      type: OpenTK.Mathematics.Vector3
      description: The resultant axis.
    - id: angle
      type: System.Single
      description: The resultant angle.
    content.vb: Public Sub ToAxisAngle(axis As Vector3, angle As Single)
  overload: OpenTK.Mathematics.Quaternion.ToAxisAngle*
  nameWithType.vb: Quaternion.ToAxisAngle(Vector3, Single)
  fullName.vb: OpenTK.Mathematics.Quaternion.ToAxisAngle(OpenTK.Mathematics.Vector3, Single)
  name.vb: ToAxisAngle(Vector3, Single)
- uid: OpenTK.Mathematics.Quaternion.ToAxisAngle
  commentId: M:OpenTK.Mathematics.Quaternion.ToAxisAngle
  id: ToAxisAngle
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: ToAxisAngle()
  nameWithType: Quaternion.ToAxisAngle()
  fullName: OpenTK.Mathematics.Quaternion.ToAxisAngle()
  type: Method
  source:
    id: ToAxisAngle
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 153
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Convert this instance to an axis-angle representation.
  example: []
  syntax:
    content: public Vector4 ToAxisAngle()
    return:
      type: OpenTK.Mathematics.Vector4
      description: A Vector4 that is the axis-angle representation of this quaternion.
    content.vb: Public Function ToAxisAngle() As Vector4
  overload: OpenTK.Mathematics.Quaternion.ToAxisAngle*
- uid: OpenTK.Mathematics.Quaternion.ToEulerAngles(OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Quaternion.ToEulerAngles(OpenTK.Mathematics.Vector3@)
  id: ToEulerAngles(OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: ToEulerAngles(out Vector3)
  nameWithType: Quaternion.ToEulerAngles(out Vector3)
  fullName: OpenTK.Mathematics.Quaternion.ToEulerAngles(out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: ToEulerAngles
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 185
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Convert the current quaternion to Euler angle representation.
  example: []
  syntax:
    content: public readonly void ToEulerAngles(out Vector3 angles)
    parameters:
    - id: angles
      type: OpenTK.Mathematics.Vector3
      description: The Euler angles in radians.
    content.vb: Public Sub ToEulerAngles(angles As Vector3)
  overload: OpenTK.Mathematics.Quaternion.ToEulerAngles*
  nameWithType.vb: Quaternion.ToEulerAngles(Vector3)
  fullName.vb: OpenTK.Mathematics.Quaternion.ToEulerAngles(OpenTK.Mathematics.Vector3)
  name.vb: ToEulerAngles(Vector3)
- uid: OpenTK.Mathematics.Quaternion.ToEulerAngles
  commentId: M:OpenTK.Mathematics.Quaternion.ToEulerAngles
  id: ToEulerAngles
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: ToEulerAngles()
  nameWithType: Quaternion.ToEulerAngles()
  fullName: OpenTK.Mathematics.Quaternion.ToEulerAngles()
  type: Method
  source:
    id: ToEulerAngles
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 194
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Convert this instance to an Euler angle representation.
  example: []
  syntax:
    content: public readonly Vector3 ToEulerAngles()
    return:
      type: OpenTK.Mathematics.Vector3
      description: The Euler angles in radians.
    content.vb: Public Function ToEulerAngles() As Vector3
  overload: OpenTK.Mathematics.Quaternion.ToEulerAngles*
- uid: OpenTK.Mathematics.Quaternion.Length
  commentId: P:OpenTK.Mathematics.Quaternion.Length
  id: Length
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Quaternion.Length
  fullName: OpenTK.Mathematics.Quaternion.Length
  type: Property
  source:
    id: Length
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 242
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the length (magnitude) of the quaternion.
  example: []
  syntax:
    content: public readonly float Length { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Length As Single
  overload: OpenTK.Mathematics.Quaternion.Length*
  seealso:
  - linkId: OpenTK.Mathematics.Quaternion.LengthSquared
    commentId: P:OpenTK.Mathematics.Quaternion.LengthSquared
- uid: OpenTK.Mathematics.Quaternion.LengthSquared
  commentId: P:OpenTK.Mathematics.Quaternion.LengthSquared
  id: LengthSquared
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: LengthSquared
  nameWithType: Quaternion.LengthSquared
  fullName: OpenTK.Mathematics.Quaternion.LengthSquared
  type: Property
  source:
    id: LengthSquared
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 247
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the square of the quaternion length (magnitude).
  example: []
  syntax:
    content: public readonly float LengthSquared { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property LengthSquared As Single
  overload: OpenTK.Mathematics.Quaternion.LengthSquared*
- uid: OpenTK.Mathematics.Quaternion.Normalized
  commentId: M:OpenTK.Mathematics.Quaternion.Normalized
  id: Normalized
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Normalized()
  nameWithType: Quaternion.Normalized()
  fullName: OpenTK.Mathematics.Quaternion.Normalized()
  type: Method
  source:
    id: Normalized
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 253
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a copy of the Quaternion scaled to unit length.
  example: []
  syntax:
    content: public readonly Quaternion Normalized()
    return:
      type: OpenTK.Mathematics.Quaternion
      description: The normalized copy.
    content.vb: Public Function Normalized() As Quaternion
  overload: OpenTK.Mathematics.Quaternion.Normalized*
- uid: OpenTK.Mathematics.Quaternion.Invert
  commentId: M:OpenTK.Mathematics.Quaternion.Invert
  id: Invert
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Invert()
  nameWithType: Quaternion.Invert()
  fullName: OpenTK.Mathematics.Quaternion.Invert()
  type: Method
  source:
    id: Invert
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 263
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Inverts this Quaternion.
  example: []
  syntax:
    content: public void Invert()
    content.vb: Public Sub Invert()
  overload: OpenTK.Mathematics.Quaternion.Invert*
- uid: OpenTK.Mathematics.Quaternion.Inverted
  commentId: M:OpenTK.Mathematics.Quaternion.Inverted
  id: Inverted
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Inverted()
  nameWithType: Quaternion.Inverted()
  fullName: OpenTK.Mathematics.Quaternion.Inverted()
  type: Method
  source:
    id: Inverted
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 272
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the inverse of this Quaternion.
  example: []
  syntax:
    content: public readonly Quaternion Inverted()
    return:
      type: OpenTK.Mathematics.Quaternion
      description: The inverted copy.
    content.vb: Public Function Inverted() As Quaternion
  overload: OpenTK.Mathematics.Quaternion.Inverted*
- uid: OpenTK.Mathematics.Quaternion.Normalize
  commentId: M:OpenTK.Mathematics.Quaternion.Normalize
  id: Normalize
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: Quaternion.Normalize()
  fullName: OpenTK.Mathematics.Quaternion.Normalize()
  type: Method
  source:
    id: Normalize
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 282
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scales the Quaternion to unit length.
  example: []
  syntax:
    content: public void Normalize()
    content.vb: Public Sub Normalize()
  overload: OpenTK.Mathematics.Quaternion.Normalize*
- uid: OpenTK.Mathematics.Quaternion.Conjugate
  commentId: M:OpenTK.Mathematics.Quaternion.Conjugate
  id: Conjugate
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Conjugate()
  nameWithType: Quaternion.Conjugate()
  fullName: OpenTK.Mathematics.Quaternion.Conjugate()
  type: Method
  source:
    id: Conjugate
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 292
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Inverts the Vector3 component of this Quaternion.
  example: []
  syntax:
    content: public void Conjugate()
    content.vb: Public Sub Conjugate()
  overload: OpenTK.Mathematics.Quaternion.Conjugate*
- uid: OpenTK.Mathematics.Quaternion.Identity
  commentId: F:OpenTK.Mathematics.Quaternion.Identity
  id: Identity
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: Quaternion.Identity
  fullName: OpenTK.Mathematics.Quaternion.Identity
  type: Field
  source:
    id: Identity
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 300
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines the identity quaternion.
  example: []
  syntax:
    content: public static readonly Quaternion Identity
    return:
      type: OpenTK.Mathematics.Quaternion
    content.vb: Public Shared ReadOnly Identity As Quaternion
- uid: OpenTK.Mathematics.Quaternion.Add(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  commentId: M:OpenTK.Mathematics.Quaternion.Add(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  id: Add(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Add(Quaternion, Quaternion)
  nameWithType: Quaternion.Add(Quaternion, Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.Add(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion)
  type: Method
  source:
    id: Add
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 308
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Add two quaternions.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Quaternion Add(Quaternion left, Quaternion right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Quaternion
      description: The first operand.
    - id: right
      type: OpenTK.Mathematics.Quaternion
      description: The second operand.
    return:
      type: OpenTK.Mathematics.Quaternion
      description: The result of the addition.
    content.vb: >-
      <Pure>

      Public Shared Function Add(left As Quaternion, right As Quaternion) As Quaternion
  overload: OpenTK.Mathematics.Quaternion.Add*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Quaternion.Add(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  commentId: M:OpenTK.Mathematics.Quaternion.Add(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  id: Add(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Add(in Quaternion, in Quaternion, out Quaternion)
  nameWithType: Quaternion.Add(in Quaternion, in Quaternion, out Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.Add(in OpenTK.Mathematics.Quaternion, in OpenTK.Mathematics.Quaternion, out OpenTK.Mathematics.Quaternion)
  type: Method
  source:
    id: Add
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 322
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Add two quaternions.
  example: []
  syntax:
    content: public static void Add(in Quaternion left, in Quaternion right, out Quaternion result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Quaternion
      description: The first operand.
    - id: right
      type: OpenTK.Mathematics.Quaternion
      description: The second operand.
    - id: result
      type: OpenTK.Mathematics.Quaternion
      description: The result of the addition.
    content.vb: Public Shared Sub Add(left As Quaternion, right As Quaternion, result As Quaternion)
  overload: OpenTK.Mathematics.Quaternion.Add*
  nameWithType.vb: Quaternion.Add(Quaternion, Quaternion, Quaternion)
  fullName.vb: OpenTK.Mathematics.Quaternion.Add(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion)
  name.vb: Add(Quaternion, Quaternion, Quaternion)
- uid: OpenTK.Mathematics.Quaternion.Sub(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  commentId: M:OpenTK.Mathematics.Quaternion.Sub(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  id: Sub(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Sub(Quaternion, Quaternion)
  nameWithType: Quaternion.Sub(Quaternion, Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.Sub(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion)
  type: Method
  source:
    id: Sub
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 335
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtracts two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Quaternion Sub(Quaternion left, Quaternion right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Quaternion
      description: The left instance.
    - id: right
      type: OpenTK.Mathematics.Quaternion
      description: The right instance.
    return:
      type: OpenTK.Mathematics.Quaternion
      description: The result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function [Sub](left As Quaternion, right As Quaternion) As Quaternion
  overload: OpenTK.Mathematics.Quaternion.Sub*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Quaternion.Sub(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  commentId: M:OpenTK.Mathematics.Quaternion.Sub(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  id: Sub(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Sub(in Quaternion, in Quaternion, out Quaternion)
  nameWithType: Quaternion.Sub(in Quaternion, in Quaternion, out Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.Sub(in OpenTK.Mathematics.Quaternion, in OpenTK.Mathematics.Quaternion, out OpenTK.Mathematics.Quaternion)
  type: Method
  source:
    id: Sub
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 349
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtracts two instances.
  example: []
  syntax:
    content: public static void Sub(in Quaternion left, in Quaternion right, out Quaternion result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Quaternion
      description: The left instance.
    - id: right
      type: OpenTK.Mathematics.Quaternion
      description: The right instance.
    - id: result
      type: OpenTK.Mathematics.Quaternion
      description: The result of the operation.
    content.vb: Public Shared Sub [Sub](left As Quaternion, right As Quaternion, result As Quaternion)
  overload: OpenTK.Mathematics.Quaternion.Sub*
  nameWithType.vb: Quaternion.Sub(Quaternion, Quaternion, Quaternion)
  fullName.vb: OpenTK.Mathematics.Quaternion.Sub(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion)
  name.vb: Sub(Quaternion, Quaternion, Quaternion)
- uid: OpenTK.Mathematics.Quaternion.Multiply(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  commentId: M:OpenTK.Mathematics.Quaternion.Multiply(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  id: Multiply(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Multiply(Quaternion, Quaternion)
  nameWithType: Quaternion.Multiply(Quaternion, Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.Multiply(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 362
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Quaternion Multiply(Quaternion left, Quaternion right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Quaternion
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Quaternion
      description: The second instance.
    return:
      type: OpenTK.Mathematics.Quaternion
      description: A new instance containing the result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Function Multiply(left As Quaternion, right As Quaternion) As Quaternion
  overload: OpenTK.Mathematics.Quaternion.Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Quaternion.Multiply(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  commentId: M:OpenTK.Mathematics.Quaternion.Multiply(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  id: Multiply(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Multiply(in Quaternion, in Quaternion, out Quaternion)
  nameWithType: Quaternion.Multiply(in Quaternion, in Quaternion, out Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.Multiply(in OpenTK.Mathematics.Quaternion, in OpenTK.Mathematics.Quaternion, out OpenTK.Mathematics.Quaternion)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 375
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies two instances.
  example: []
  syntax:
    content: public static void Multiply(in Quaternion left, in Quaternion right, out Quaternion result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Quaternion
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Quaternion
      description: The second instance.
    - id: result
      type: OpenTK.Mathematics.Quaternion
      description: A new instance containing the result of the calculation.
    content.vb: Public Shared Sub Multiply(left As Quaternion, right As Quaternion, result As Quaternion)
  overload: OpenTK.Mathematics.Quaternion.Multiply*
  nameWithType.vb: Quaternion.Multiply(Quaternion, Quaternion, Quaternion)
  fullName.vb: OpenTK.Mathematics.Quaternion.Multiply(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion)
  name.vb: Multiply(Quaternion, Quaternion, Quaternion)
- uid: OpenTK.Mathematics.Quaternion.Multiply(OpenTK.Mathematics.Quaternion@,System.Single,OpenTK.Mathematics.Quaternion@)
  commentId: M:OpenTK.Mathematics.Quaternion.Multiply(OpenTK.Mathematics.Quaternion@,System.Single,OpenTK.Mathematics.Quaternion@)
  id: Multiply(OpenTK.Mathematics.Quaternion@,System.Single,OpenTK.Mathematics.Quaternion@)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Multiply(in Quaternion, float, out Quaternion)
  nameWithType: Quaternion.Multiply(in Quaternion, float, out Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.Multiply(in OpenTK.Mathematics.Quaternion, float, out OpenTK.Mathematics.Quaternion)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 388
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies an instance by a scalar.
  example: []
  syntax:
    content: public static void Multiply(in Quaternion quaternion, float scale, out Quaternion result)
    parameters:
    - id: quaternion
      type: OpenTK.Mathematics.Quaternion
      description: The instance.
    - id: scale
      type: System.Single
      description: The scalar.
    - id: result
      type: OpenTK.Mathematics.Quaternion
      description: A new instance containing the result of the calculation.
    content.vb: Public Shared Sub Multiply(quaternion As Quaternion, scale As Single, result As Quaternion)
  overload: OpenTK.Mathematics.Quaternion.Multiply*
  nameWithType.vb: Quaternion.Multiply(Quaternion, Single, Quaternion)
  fullName.vb: OpenTK.Mathematics.Quaternion.Multiply(OpenTK.Mathematics.Quaternion, Single, OpenTK.Mathematics.Quaternion)
  name.vb: Multiply(Quaternion, Single, Quaternion)
- uid: OpenTK.Mathematics.Quaternion.Multiply(OpenTK.Mathematics.Quaternion,System.Single)
  commentId: M:OpenTK.Mathematics.Quaternion.Multiply(OpenTK.Mathematics.Quaternion,System.Single)
  id: Multiply(OpenTK.Mathematics.Quaternion,System.Single)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Multiply(Quaternion, float)
  nameWithType: Quaternion.Multiply(Quaternion, float)
  fullName: OpenTK.Mathematics.Quaternion.Multiply(OpenTK.Mathematics.Quaternion, float)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 405
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies an instance by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Quaternion Multiply(Quaternion quaternion, float scale)
    parameters:
    - id: quaternion
      type: OpenTK.Mathematics.Quaternion
      description: The instance.
    - id: scale
      type: System.Single
      description: The scalar.
    return:
      type: OpenTK.Mathematics.Quaternion
      description: A new instance containing the result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Function Multiply(quaternion As Quaternion, scale As Single) As Quaternion
  overload: OpenTK.Mathematics.Quaternion.Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Quaternion.Multiply(Quaternion, Single)
  fullName.vb: OpenTK.Mathematics.Quaternion.Multiply(OpenTK.Mathematics.Quaternion, Single)
  name.vb: Multiply(Quaternion, Single)
- uid: OpenTK.Mathematics.Quaternion.Conjugate(OpenTK.Mathematics.Quaternion)
  commentId: M:OpenTK.Mathematics.Quaternion.Conjugate(OpenTK.Mathematics.Quaternion)
  id: Conjugate(OpenTK.Mathematics.Quaternion)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Conjugate(Quaternion)
  nameWithType: Quaternion.Conjugate(Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.Conjugate(OpenTK.Mathematics.Quaternion)
  type: Method
  source:
    id: Conjugate
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 422
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Get the conjugate of the given quaternion.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Quaternion Conjugate(Quaternion q)
    parameters:
    - id: q
      type: OpenTK.Mathematics.Quaternion
      description: The quaternion.
    return:
      type: OpenTK.Mathematics.Quaternion
      description: The conjugate of the given quaternion.
    content.vb: >-
      <Pure>

      Public Shared Function Conjugate(q As Quaternion) As Quaternion
  overload: OpenTK.Mathematics.Quaternion.Conjugate*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Quaternion.Conjugate(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  commentId: M:OpenTK.Mathematics.Quaternion.Conjugate(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  id: Conjugate(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Conjugate(in Quaternion, out Quaternion)
  nameWithType: Quaternion.Conjugate(in Quaternion, out Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.Conjugate(in OpenTK.Mathematics.Quaternion, out OpenTK.Mathematics.Quaternion)
  type: Method
  source:
    id: Conjugate
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 433
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Get the conjugate of the given quaternion.
  example: []
  syntax:
    content: public static void Conjugate(in Quaternion q, out Quaternion result)
    parameters:
    - id: q
      type: OpenTK.Mathematics.Quaternion
      description: The quaternion.
    - id: result
      type: OpenTK.Mathematics.Quaternion
      description: The conjugate of the given quaternion.
    content.vb: Public Shared Sub Conjugate(q As Quaternion, result As Quaternion)
  overload: OpenTK.Mathematics.Quaternion.Conjugate*
  nameWithType.vb: Quaternion.Conjugate(Quaternion, Quaternion)
  fullName.vb: OpenTK.Mathematics.Quaternion.Conjugate(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion)
  name.vb: Conjugate(Quaternion, Quaternion)
- uid: OpenTK.Mathematics.Quaternion.Invert(OpenTK.Mathematics.Quaternion)
  commentId: M:OpenTK.Mathematics.Quaternion.Invert(OpenTK.Mathematics.Quaternion)
  id: Invert(OpenTK.Mathematics.Quaternion)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Invert(Quaternion)
  nameWithType: Quaternion.Invert(Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.Invert(OpenTK.Mathematics.Quaternion)
  type: Method
  source:
    id: Invert
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 443
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Get the inverse of the given quaternion.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Quaternion Invert(Quaternion q)
    parameters:
    - id: q
      type: OpenTK.Mathematics.Quaternion
      description: The quaternion to invert.
    return:
      type: OpenTK.Mathematics.Quaternion
      description: The inverse of the given quaternion.
    content.vb: >-
      <Pure>

      Public Shared Function Invert(q As Quaternion) As Quaternion
  overload: OpenTK.Mathematics.Quaternion.Invert*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Quaternion.Invert(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  commentId: M:OpenTK.Mathematics.Quaternion.Invert(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  id: Invert(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Invert(in Quaternion, out Quaternion)
  nameWithType: Quaternion.Invert(in Quaternion, out Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.Invert(in OpenTK.Mathematics.Quaternion, out OpenTK.Mathematics.Quaternion)
  type: Method
  source:
    id: Invert
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 455
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Get the inverse of the given quaternion.
  example: []
  syntax:
    content: public static void Invert(in Quaternion q, out Quaternion result)
    parameters:
    - id: q
      type: OpenTK.Mathematics.Quaternion
      description: The quaternion to invert.
    - id: result
      type: OpenTK.Mathematics.Quaternion
      description: The inverse of the given quaternion.
    content.vb: Public Shared Sub Invert(q As Quaternion, result As Quaternion)
  overload: OpenTK.Mathematics.Quaternion.Invert*
  nameWithType.vb: Quaternion.Invert(Quaternion, Quaternion)
  fullName.vb: OpenTK.Mathematics.Quaternion.Invert(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion)
  name.vb: Invert(Quaternion, Quaternion)
- uid: OpenTK.Mathematics.Quaternion.Normalize(OpenTK.Mathematics.Quaternion)
  commentId: M:OpenTK.Mathematics.Quaternion.Normalize(OpenTK.Mathematics.Quaternion)
  id: Normalize(OpenTK.Mathematics.Quaternion)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Normalize(Quaternion)
  nameWithType: Quaternion.Normalize(Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.Normalize(OpenTK.Mathematics.Quaternion)
  type: Method
  source:
    id: Normalize
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 474
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scale the given quaternion to unit length.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Quaternion Normalize(Quaternion q)
    parameters:
    - id: q
      type: OpenTK.Mathematics.Quaternion
      description: The quaternion to normalize.
    return:
      type: OpenTK.Mathematics.Quaternion
      description: The normalized copy.
    content.vb: >-
      <Pure>

      Public Shared Function Normalize(q As Quaternion) As Quaternion
  overload: OpenTK.Mathematics.Quaternion.Normalize*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Quaternion.Normalize(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  commentId: M:OpenTK.Mathematics.Quaternion.Normalize(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  id: Normalize(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Quaternion@)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Normalize(in Quaternion, out Quaternion)
  nameWithType: Quaternion.Normalize(in Quaternion, out Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.Normalize(in OpenTK.Mathematics.Quaternion, out OpenTK.Mathematics.Quaternion)
  type: Method
  source:
    id: Normalize
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 486
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scale the given quaternion to unit length.
  example: []
  syntax:
    content: public static void Normalize(in Quaternion q, out Quaternion result)
    parameters:
    - id: q
      type: OpenTK.Mathematics.Quaternion
      description: The quaternion to normalize.
    - id: result
      type: OpenTK.Mathematics.Quaternion
      description: The normalized quaternion.
    content.vb: Public Shared Sub Normalize(q As Quaternion, result As Quaternion)
  overload: OpenTK.Mathematics.Quaternion.Normalize*
  nameWithType.vb: Quaternion.Normalize(Quaternion, Quaternion)
  fullName.vb: OpenTK.Mathematics.Quaternion.Normalize(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion)
  name.vb: Normalize(Quaternion, Quaternion)
- uid: OpenTK.Mathematics.Quaternion.FromAxisAngle(OpenTK.Mathematics.Vector3,System.Single)
  commentId: M:OpenTK.Mathematics.Quaternion.FromAxisAngle(OpenTK.Mathematics.Vector3,System.Single)
  id: FromAxisAngle(OpenTK.Mathematics.Vector3,System.Single)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: FromAxisAngle(Vector3, float)
  nameWithType: Quaternion.FromAxisAngle(Vector3, float)
  fullName: OpenTK.Mathematics.Quaternion.FromAxisAngle(OpenTK.Mathematics.Vector3, float)
  type: Method
  source:
    id: FromAxisAngle
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 498
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Build a quaternion from the given axis and angle in radians.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Quaternion FromAxisAngle(Vector3 axis, float angle)
    parameters:
    - id: axis
      type: OpenTK.Mathematics.Vector3
      description: The axis to rotate about.
    - id: angle
      type: System.Single
      description: The rotation angle in radians.
    return:
      type: OpenTK.Mathematics.Quaternion
      description: The equivalent quaternion.
    content.vb: >-
      <Pure>

      Public Shared Function FromAxisAngle(axis As Vector3, angle As Single) As Quaternion
  overload: OpenTK.Mathematics.Quaternion.FromAxisAngle*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Quaternion.FromAxisAngle(Vector3, Single)
  fullName.vb: OpenTK.Mathematics.Quaternion.FromAxisAngle(OpenTK.Mathematics.Vector3, Single)
  name.vb: FromAxisAngle(Vector3, Single)
- uid: OpenTK.Mathematics.Quaternion.FromEulerAngles(System.Single,System.Single,System.Single)
  commentId: M:OpenTK.Mathematics.Quaternion.FromEulerAngles(System.Single,System.Single,System.Single)
  id: FromEulerAngles(System.Single,System.Single,System.Single)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: FromEulerAngles(float, float, float)
  nameWithType: Quaternion.FromEulerAngles(float, float, float)
  fullName: OpenTK.Mathematics.Quaternion.FromEulerAngles(float, float, float)
  type: Method
  source:
    id: FromEulerAngles
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 525
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Builds a Quaternion from the given euler angles in radians

    The rotations will get applied in following order:

    1. pitch (X axis), 2. yaw (Y axis), 3. roll (Z axis).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Quaternion FromEulerAngles(float pitch, float yaw, float roll)
    parameters:
    - id: pitch
      type: System.Single
      description: The pitch (attitude), counterclockwise rotation around X axis.
    - id: yaw
      type: System.Single
      description: The yaw (heading), counterclockwise rotation around Y axis.
    - id: roll
      type: System.Single
      description: The roll (bank), counterclockwise rotation around Z axis.
    return:
      type: OpenTK.Mathematics.Quaternion
      description: The quaternion.
    content.vb: >-
      <Pure>

      Public Shared Function FromEulerAngles(pitch As Single, yaw As Single, roll As Single) As Quaternion
  overload: OpenTK.Mathematics.Quaternion.FromEulerAngles*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Quaternion.FromEulerAngles(Single, Single, Single)
  fullName.vb: OpenTK.Mathematics.Quaternion.FromEulerAngles(Single, Single, Single)
  name.vb: FromEulerAngles(Single, Single, Single)
- uid: OpenTK.Mathematics.Quaternion.FromEulerAngles(OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Quaternion.FromEulerAngles(OpenTK.Mathematics.Vector3)
  id: FromEulerAngles(OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: FromEulerAngles(Vector3)
  nameWithType: Quaternion.FromEulerAngles(Vector3)
  fullName: OpenTK.Mathematics.Quaternion.FromEulerAngles(OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: FromEulerAngles
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 538
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Builds a Quaternion from the given euler angles in radians.

    The rotations will get applied in following order:

    1. X axis, 2. Y axis, 3. Z axis.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Quaternion FromEulerAngles(Vector3 eulerAngles)
    parameters:
    - id: eulerAngles
      type: OpenTK.Mathematics.Vector3
      description: The counterclockwise euler angles as a vector.
    return:
      type: OpenTK.Mathematics.Quaternion
      description: The equivalent Quaternion.
    content.vb: >-
      <Pure>

      Public Shared Function FromEulerAngles(eulerAngles As Vector3) As Quaternion
  overload: OpenTK.Mathematics.Quaternion.FromEulerAngles*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Quaternion.FromEulerAngles(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Quaternion@)
  commentId: M:OpenTK.Mathematics.Quaternion.FromEulerAngles(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Quaternion@)
  id: FromEulerAngles(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Quaternion@)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: FromEulerAngles(in Vector3, out Quaternion)
  nameWithType: Quaternion.FromEulerAngles(in Vector3, out Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.FromEulerAngles(in OpenTK.Mathematics.Vector3, out OpenTK.Mathematics.Quaternion)
  type: Method
  source:
    id: FromEulerAngles
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 551
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Builds a Quaternion from the given euler angles in radians.

    The rotations will get applied in following order:

    1. Around X, 2. Around Y, 3. Around Z.
  example: []
  syntax:
    content: public static void FromEulerAngles(in Vector3 eulerAngles, out Quaternion result)
    parameters:
    - id: eulerAngles
      type: OpenTK.Mathematics.Vector3
      description: The counterclockwise euler angles a vector.
    - id: result
      type: OpenTK.Mathematics.Quaternion
      description: The equivalent Quaternion.
    content.vb: Public Shared Sub FromEulerAngles(eulerAngles As Vector3, result As Quaternion)
  overload: OpenTK.Mathematics.Quaternion.FromEulerAngles*
  nameWithType.vb: Quaternion.FromEulerAngles(Vector3, Quaternion)
  fullName.vb: OpenTK.Mathematics.Quaternion.FromEulerAngles(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Quaternion)
  name.vb: FromEulerAngles(Vector3, Quaternion)
- uid: OpenTK.Mathematics.Quaternion.ToEulerAngles(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Quaternion.ToEulerAngles(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Vector3@)
  id: ToEulerAngles(OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: ToEulerAngles(in Quaternion, out Vector3)
  nameWithType: Quaternion.ToEulerAngles(in Quaternion, out Vector3)
  fullName: OpenTK.Mathematics.Quaternion.ToEulerAngles(in OpenTK.Mathematics.Quaternion, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: ToEulerAngles
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 571
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts a quaternion to it's euler angle representation.
  example: []
  syntax:
    content: public static void ToEulerAngles(in Quaternion q, out Vector3 result)
    parameters:
    - id: q
      type: OpenTK.Mathematics.Quaternion
      description: The Quaternion.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: The resulting euler angles in radians.
    content.vb: Public Shared Sub ToEulerAngles(q As Quaternion, result As Vector3)
  overload: OpenTK.Mathematics.Quaternion.ToEulerAngles*
  nameWithType.vb: Quaternion.ToEulerAngles(Quaternion, Vector3)
  fullName.vb: OpenTK.Mathematics.Quaternion.ToEulerAngles(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Vector3)
  name.vb: ToEulerAngles(Quaternion, Vector3)
- uid: OpenTK.Mathematics.Quaternion.FromMatrix(OpenTK.Mathematics.Matrix3)
  commentId: M:OpenTK.Mathematics.Quaternion.FromMatrix(OpenTK.Mathematics.Matrix3)
  id: FromMatrix(OpenTK.Mathematics.Matrix3)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: FromMatrix(Matrix3)
  nameWithType: Quaternion.FromMatrix(Matrix3)
  fullName: OpenTK.Mathematics.Quaternion.FromMatrix(OpenTK.Mathematics.Matrix3)
  type: Method
  source:
    id: FromMatrix
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 581
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Builds a quaternion from the given rotation matrix.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Quaternion FromMatrix(Matrix3 matrix)
    parameters:
    - id: matrix
      type: OpenTK.Mathematics.Matrix3
      description: A rotation matrix.
    return:
      type: OpenTK.Mathematics.Quaternion
      description: The equivalent quaternion.
    content.vb: >-
      <Pure>

      Public Shared Function FromMatrix(matrix As Matrix3) As Quaternion
  overload: OpenTK.Mathematics.Quaternion.FromMatrix*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Quaternion.FromMatrix(OpenTK.Mathematics.Matrix3@,OpenTK.Mathematics.Quaternion@)
  commentId: M:OpenTK.Mathematics.Quaternion.FromMatrix(OpenTK.Mathematics.Matrix3@,OpenTK.Mathematics.Quaternion@)
  id: FromMatrix(OpenTK.Mathematics.Matrix3@,OpenTK.Mathematics.Quaternion@)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: FromMatrix(in Matrix3, out Quaternion)
  nameWithType: Quaternion.FromMatrix(in Matrix3, out Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.FromMatrix(in OpenTK.Mathematics.Matrix3, out OpenTK.Mathematics.Quaternion)
  type: Method
  source:
    id: FromMatrix
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 593
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Builds a quaternion from the given rotation matrix.
  example: []
  syntax:
    content: public static void FromMatrix(in Matrix3 matrix, out Quaternion result)
    parameters:
    - id: matrix
      type: OpenTK.Mathematics.Matrix3
      description: A rotation matrix.
    - id: result
      type: OpenTK.Mathematics.Quaternion
      description: The equivalent quaternion.
    content.vb: Public Shared Sub FromMatrix(matrix As Matrix3, result As Quaternion)
  overload: OpenTK.Mathematics.Quaternion.FromMatrix*
  nameWithType.vb: Quaternion.FromMatrix(Matrix3, Quaternion)
  fullName.vb: OpenTK.Mathematics.Quaternion.FromMatrix(OpenTK.Mathematics.Matrix3, OpenTK.Mathematics.Quaternion)
  name.vb: FromMatrix(Matrix3, Quaternion)
- uid: OpenTK.Mathematics.Quaternion.Slerp(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion,System.Single)
  commentId: M:OpenTK.Mathematics.Quaternion.Slerp(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion,System.Single)
  id: Slerp(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion,System.Single)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Slerp(Quaternion, Quaternion, float)
  nameWithType: Quaternion.Slerp(Quaternion, Quaternion, float)
  fullName: OpenTK.Mathematics.Quaternion.Slerp(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion, float)
  type: Method
  source:
    id: Slerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 651
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Do Spherical linear interpolation between two quaternions.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Quaternion Slerp(Quaternion q1, Quaternion q2, float blend)
    parameters:
    - id: q1
      type: OpenTK.Mathematics.Quaternion
      description: The first quaternion.
    - id: q2
      type: OpenTK.Mathematics.Quaternion
      description: The second quaternion.
    - id: blend
      type: System.Single
      description: The blend factor.
    return:
      type: OpenTK.Mathematics.Quaternion
      description: A smooth blend between the given quaternions.
    content.vb: >-
      <Pure>

      Public Shared Function Slerp(q1 As Quaternion, q2 As Quaternion, blend As Single) As Quaternion
  overload: OpenTK.Mathematics.Quaternion.Slerp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Quaternion.Slerp(Quaternion, Quaternion, Single)
  fullName.vb: OpenTK.Mathematics.Quaternion.Slerp(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion, Single)
  name.vb: Slerp(Quaternion, Quaternion, Single)
- uid: OpenTK.Mathematics.Quaternion.op_Addition(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  commentId: M:OpenTK.Mathematics.Quaternion.op_Addition(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  id: op_Addition(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: operator +(Quaternion, Quaternion)
  nameWithType: Quaternion.operator +(Quaternion, Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.operator +(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion)
  type: Operator
  source:
    id: op_Addition
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 718
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Quaternion operator +(Quaternion left, Quaternion right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Quaternion
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Quaternion
      description: The second instance.
    return:
      type: OpenTK.Mathematics.Quaternion
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator +(left As Quaternion, right As Quaternion) As Quaternion
  overload: OpenTK.Mathematics.Quaternion.op_Addition*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Quaternion.+(Quaternion, Quaternion)
  fullName.vb: OpenTK.Mathematics.Quaternion.+(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion)
  name.vb: +(Quaternion, Quaternion)
- uid: OpenTK.Mathematics.Quaternion.op_Subtraction(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  commentId: M:OpenTK.Mathematics.Quaternion.op_Subtraction(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  id: op_Subtraction(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: operator -(Quaternion, Quaternion)
  nameWithType: Quaternion.operator -(Quaternion, Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.operator -(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion)
  type: Operator
  source:
    id: op_Subtraction
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 732
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtracts two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Quaternion operator -(Quaternion left, Quaternion right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Quaternion
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Quaternion
      description: The second instance.
    return:
      type: OpenTK.Mathematics.Quaternion
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator -(left As Quaternion, right As Quaternion) As Quaternion
  overload: OpenTK.Mathematics.Quaternion.op_Subtraction*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Quaternion.-(Quaternion, Quaternion)
  fullName.vb: OpenTK.Mathematics.Quaternion.-(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion)
  name.vb: -(Quaternion, Quaternion)
- uid: OpenTK.Mathematics.Quaternion.op_Multiply(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  commentId: M:OpenTK.Mathematics.Quaternion.op_Multiply(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  id: op_Multiply(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: operator *(Quaternion, Quaternion)
  nameWithType: Quaternion.operator *(Quaternion, Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.operator *(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 746
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Quaternion operator *(Quaternion left, Quaternion right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Quaternion
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Quaternion
      description: The second instance.
    return:
      type: OpenTK.Mathematics.Quaternion
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator *(left As Quaternion, right As Quaternion) As Quaternion
  overload: OpenTK.Mathematics.Quaternion.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Quaternion.*(Quaternion, Quaternion)
  fullName.vb: OpenTK.Mathematics.Quaternion.*(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion)
  name.vb: '*(Quaternion, Quaternion)'
- uid: OpenTK.Mathematics.Quaternion.op_Multiply(OpenTK.Mathematics.Quaternion,System.Single)
  commentId: M:OpenTK.Mathematics.Quaternion.op_Multiply(OpenTK.Mathematics.Quaternion,System.Single)
  id: op_Multiply(OpenTK.Mathematics.Quaternion,System.Single)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: operator *(Quaternion, float)
  nameWithType: Quaternion.operator *(Quaternion, float)
  fullName: OpenTK.Mathematics.Quaternion.operator *(OpenTK.Mathematics.Quaternion, float)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 759
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies an instance by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Quaternion operator *(Quaternion quaternion, float scale)
    parameters:
    - id: quaternion
      type: OpenTK.Mathematics.Quaternion
      description: The instance.
    - id: scale
      type: System.Single
      description: The scalar.
    return:
      type: OpenTK.Mathematics.Quaternion
      description: A new instance containing the result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator *(quaternion As Quaternion, scale As Single) As Quaternion
  overload: OpenTK.Mathematics.Quaternion.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Quaternion.*(Quaternion, Single)
  fullName.vb: OpenTK.Mathematics.Quaternion.*(OpenTK.Mathematics.Quaternion, Single)
  name.vb: '*(Quaternion, Single)'
- uid: OpenTK.Mathematics.Quaternion.op_Multiply(System.Single,OpenTK.Mathematics.Quaternion)
  commentId: M:OpenTK.Mathematics.Quaternion.op_Multiply(System.Single,OpenTK.Mathematics.Quaternion)
  id: op_Multiply(System.Single,OpenTK.Mathematics.Quaternion)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: operator *(float, Quaternion)
  nameWithType: Quaternion.operator *(float, Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.operator *(float, OpenTK.Mathematics.Quaternion)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 772
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies an instance by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Quaternion operator *(float scale, Quaternion quaternion)
    parameters:
    - id: scale
      type: System.Single
      description: The scalar.
    - id: quaternion
      type: OpenTK.Mathematics.Quaternion
      description: The instance.
    return:
      type: OpenTK.Mathematics.Quaternion
      description: A new instance containing the result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator *(scale As Single, quaternion As Quaternion) As Quaternion
  overload: OpenTK.Mathematics.Quaternion.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Quaternion.*(Single, Quaternion)
  fullName.vb: OpenTK.Mathematics.Quaternion.*(Single, OpenTK.Mathematics.Quaternion)
  name.vb: '*(Single, Quaternion)'
- uid: OpenTK.Mathematics.Quaternion.op_Equality(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  commentId: M:OpenTK.Mathematics.Quaternion.op_Equality(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  id: op_Equality(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: operator ==(Quaternion, Quaternion)
  nameWithType: Quaternion.operator ==(Quaternion, Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.operator ==(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion)
  type: Operator
  source:
    id: op_Equality
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 790
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compares two instances for equality.
  example: []
  syntax:
    content: public static bool operator ==(Quaternion left, Quaternion right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Quaternion
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Quaternion
      description: The second instance.
    return:
      type: System.Boolean
      description: True, if left equals right; false otherwise.
    content.vb: Public Shared Operator =(left As Quaternion, right As Quaternion) As Boolean
  overload: OpenTK.Mathematics.Quaternion.op_Equality*
  nameWithType.vb: Quaternion.=(Quaternion, Quaternion)
  fullName.vb: OpenTK.Mathematics.Quaternion.=(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion)
  name.vb: =(Quaternion, Quaternion)
- uid: OpenTK.Mathematics.Quaternion.op_Inequality(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  commentId: M:OpenTK.Mathematics.Quaternion.op_Inequality(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  id: op_Inequality(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Quaternion)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: operator !=(Quaternion, Quaternion)
  nameWithType: Quaternion.operator !=(Quaternion, Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.operator !=(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion)
  type: Operator
  source:
    id: op_Inequality
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 801
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compares two instances for inequality.
  example: []
  syntax:
    content: public static bool operator !=(Quaternion left, Quaternion right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Quaternion
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Quaternion
      description: The second instance.
    return:
      type: System.Boolean
      description: True, if left does not equal right; false otherwise.
    content.vb: Public Shared Operator <>(left As Quaternion, right As Quaternion) As Boolean
  overload: OpenTK.Mathematics.Quaternion.op_Inequality*
  nameWithType.vb: Quaternion.<>(Quaternion, Quaternion)
  fullName.vb: OpenTK.Mathematics.Quaternion.<>(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Quaternion)
  name.vb: <>(Quaternion, Quaternion)
- uid: OpenTK.Mathematics.Quaternion.Equals(System.Object)
  commentId: M:OpenTK.Mathematics.Quaternion.Equals(System.Object)
  id: Equals(System.Object)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Quaternion.Equals(object)
  fullName: OpenTK.Mathematics.Quaternion.Equals(object)
  type: Method
  source:
    id: Equals
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 807
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override readonly bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: OpenTK.Mathematics.Quaternion.Equals*
  nameWithType.vb: Quaternion.Equals(Object)
  fullName.vb: OpenTK.Mathematics.Quaternion.Equals(Object)
  name.vb: Equals(Object)
- uid: OpenTK.Mathematics.Quaternion.Equals(OpenTK.Mathematics.Quaternion)
  commentId: M:OpenTK.Mathematics.Quaternion.Equals(OpenTK.Mathematics.Quaternion)
  id: Equals(OpenTK.Mathematics.Quaternion)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: Equals(Quaternion)
  nameWithType: Quaternion.Equals(Quaternion)
  fullName: OpenTK.Mathematics.Quaternion.Equals(OpenTK.Mathematics.Quaternion)
  type: Method
  source:
    id: Equals
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 813
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public readonly bool Equals(Quaternion other)
    parameters:
    - id: other
      type: OpenTK.Mathematics.Quaternion
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As Quaternion) As Boolean
  overload: OpenTK.Mathematics.Quaternion.Equals*
  implements:
  - System.IEquatable{OpenTK.Mathematics.Quaternion}.Equals(OpenTK.Mathematics.Quaternion)
- uid: OpenTK.Mathematics.Quaternion.GetHashCode
  commentId: M:OpenTK.Mathematics.Quaternion.GetHashCode
  id: GetHashCode
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Quaternion.GetHashCode()
  fullName: OpenTK.Mathematics.Quaternion.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 822
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override readonly int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: OpenTK.Mathematics.Quaternion.GetHashCode*
- uid: OpenTK.Mathematics.Quaternion.ToString
  commentId: M:OpenTK.Mathematics.Quaternion.ToString
  id: ToString
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Quaternion.ToString()
  fullName: OpenTK.Mathematics.Quaternion.ToString()
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 831
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a System.String that represents the current Quaternion.
  example: []
  syntax:
    content: public override readonly string ToString()
    return:
      type: System.String
      description: A human-readable representation of the quaternion.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: OpenTK.Mathematics.Quaternion.ToString*
- uid: OpenTK.Mathematics.Quaternion.ToString(System.String)
  commentId: M:OpenTK.Mathematics.Quaternion.ToString(System.String)
  id: ToString(System.String)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Quaternion.ToString(string)
  fullName: OpenTK.Mathematics.Quaternion.ToString(string)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 837
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public readonly string ToString(string format)
    parameters:
    - id: format
      type: System.String
      description: >-
        The format to use.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to use the default format defined for the type of the <xref href="System.IFormattable" data-throw-if-not-resolved="false"></xref> implementation.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(format As String) As String
  overload: OpenTK.Mathematics.Quaternion.ToString*
  nameWithType.vb: Quaternion.ToString(String)
  fullName.vb: OpenTK.Mathematics.Quaternion.ToString(String)
  name.vb: ToString(String)
- uid: OpenTK.Mathematics.Quaternion.ToString(System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Quaternion.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: Quaternion.ToString(IFormatProvider)
  fullName: OpenTK.Mathematics.Quaternion.ToString(System.IFormatProvider)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 843
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public readonly string ToString(IFormatProvider formatProvider)
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
      description: >-
        The provider to use to format the value.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Quaternion.ToString*
- uid: OpenTK.Mathematics.Quaternion.ToString(System.String,System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Quaternion.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: OpenTK.Mathematics.Quaternion
  langs:
  - csharp
  - vb
  name: ToString(string, IFormatProvider)
  nameWithType: Quaternion.ToString(string, IFormatProvider)
  fullName: OpenTK.Mathematics.Quaternion.ToString(string, System.IFormatProvider)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Data\Quaternion.cs
    startLine: 849
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public readonly string ToString(string format, IFormatProvider formatProvider)
    parameters:
    - id: format
      type: System.String
      description: >-
        The format to use.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to use the default format defined for the type of the <xref href="System.IFormattable" data-throw-if-not-resolved="false"></xref> implementation.
    - id: formatProvider
      type: System.IFormatProvider
      description: >-
        The provider to use to format the value.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Quaternion.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: Quaternion.ToString(String, IFormatProvider)
  fullName.vb: OpenTK.Mathematics.Quaternion.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
references:
- uid: OpenTK.Mathematics
  commentId: N:OpenTK.Mathematics
  href: OpenTK.html
  name: OpenTK.Mathematics
  nameWithType: OpenTK.Mathematics
  fullName: OpenTK.Mathematics
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
- uid: System.IEquatable{OpenTK.Mathematics.Quaternion}
  commentId: T:System.IEquatable{OpenTK.Mathematics.Quaternion}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Quaternion>
  nameWithType: IEquatable<Quaternion>
  fullName: System.IEquatable<OpenTK.Mathematics.Quaternion>
  nameWithType.vb: IEquatable(Of Quaternion)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Quaternion)
  name.vb: IEquatable(Of Quaternion)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: OpenTK.Mathematics.Quaternion
    name: Quaternion
    href: OpenTK.Mathematics.Quaternion.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Mathematics.Quaternion
    name: Quaternion
    href: OpenTK.Mathematics.Quaternion.html
  - name: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: OpenTK.Mathematics.Vector3
  commentId: T:OpenTK.Mathematics.Vector3
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: OpenTK.Mathematics.Vector3
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: OpenTK.Mathematics.Quaternion
  commentId: T:OpenTK.Mathematics.Quaternion
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Quaternion.html
  name: Quaternion
  nameWithType: Quaternion
  fullName: OpenTK.Mathematics.Quaternion
- uid: OpenTK.Mathematics.Quaternion.#ctor*
  commentId: Overload:OpenTK.Mathematics.Quaternion.#ctor
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion__ctor_OpenTK_Mathematics_Vector3_System_Single_
  name: Quaternion
  nameWithType: Quaternion.Quaternion
  fullName: OpenTK.Mathematics.Quaternion.Quaternion
  nameWithType.vb: Quaternion.New
  fullName.vb: OpenTK.Mathematics.Quaternion.New
  name.vb: New
- uid: OpenTK.Mathematics.Quaternion.X*
  commentId: Overload:OpenTK.Mathematics.Quaternion.X
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_X
  name: X
  nameWithType: Quaternion.X
  fullName: OpenTK.Mathematics.Quaternion.X
- uid: OpenTK.Mathematics.Quaternion.Y*
  commentId: Overload:OpenTK.Mathematics.Quaternion.Y
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_Y
  name: Y
  nameWithType: Quaternion.Y
  fullName: OpenTK.Mathematics.Quaternion.Y
- uid: OpenTK.Mathematics.Quaternion.Z*
  commentId: Overload:OpenTK.Mathematics.Quaternion.Z
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_Z
  name: Z
  nameWithType: Quaternion.Z
  fullName: OpenTK.Mathematics.Quaternion.Z
- uid: OpenTK.Mathematics.Quaternion.ToAxisAngle*
  commentId: Overload:OpenTK.Mathematics.Quaternion.ToAxisAngle
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_ToAxisAngle_OpenTK_Mathematics_Vector3__System_Single__
  name: ToAxisAngle
  nameWithType: Quaternion.ToAxisAngle
  fullName: OpenTK.Mathematics.Quaternion.ToAxisAngle
- uid: OpenTK.Mathematics.Vector4
  commentId: T:OpenTK.Mathematics.Vector4
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector4.html
  name: Vector4
  nameWithType: Vector4
  fullName: OpenTK.Mathematics.Vector4
- uid: OpenTK.Mathematics.Quaternion.ToEulerAngles*
  commentId: Overload:OpenTK.Mathematics.Quaternion.ToEulerAngles
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_ToEulerAngles_OpenTK_Mathematics_Vector3__
  name: ToEulerAngles
  nameWithType: Quaternion.ToEulerAngles
  fullName: OpenTK.Mathematics.Quaternion.ToEulerAngles
- uid: OpenTK.Mathematics.Quaternion.LengthSquared
  commentId: P:OpenTK.Mathematics.Quaternion.LengthSquared
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_LengthSquared
  name: LengthSquared
  nameWithType: Quaternion.LengthSquared
  fullName: OpenTK.Mathematics.Quaternion.LengthSquared
- uid: OpenTK.Mathematics.Quaternion.Length*
  commentId: Overload:OpenTK.Mathematics.Quaternion.Length
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_Length
  name: Length
  nameWithType: Quaternion.Length
  fullName: OpenTK.Mathematics.Quaternion.Length
- uid: OpenTK.Mathematics.Quaternion.LengthSquared*
  commentId: Overload:OpenTK.Mathematics.Quaternion.LengthSquared
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_LengthSquared
  name: LengthSquared
  nameWithType: Quaternion.LengthSquared
  fullName: OpenTK.Mathematics.Quaternion.LengthSquared
- uid: OpenTK.Mathematics.Quaternion.Normalized*
  commentId: Overload:OpenTK.Mathematics.Quaternion.Normalized
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_Normalized
  name: Normalized
  nameWithType: Quaternion.Normalized
  fullName: OpenTK.Mathematics.Quaternion.Normalized
- uid: OpenTK.Mathematics.Quaternion.Invert*
  commentId: Overload:OpenTK.Mathematics.Quaternion.Invert
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_Invert
  name: Invert
  nameWithType: Quaternion.Invert
  fullName: OpenTK.Mathematics.Quaternion.Invert
- uid: OpenTK.Mathematics.Quaternion.Inverted*
  commentId: Overload:OpenTK.Mathematics.Quaternion.Inverted
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_Inverted
  name: Inverted
  nameWithType: Quaternion.Inverted
  fullName: OpenTK.Mathematics.Quaternion.Inverted
- uid: OpenTK.Mathematics.Quaternion.Normalize*
  commentId: Overload:OpenTK.Mathematics.Quaternion.Normalize
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_Normalize
  name: Normalize
  nameWithType: Quaternion.Normalize
  fullName: OpenTK.Mathematics.Quaternion.Normalize
- uid: OpenTK.Mathematics.Quaternion.Conjugate*
  commentId: Overload:OpenTK.Mathematics.Quaternion.Conjugate
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_Conjugate
  name: Conjugate
  nameWithType: Quaternion.Conjugate
  fullName: OpenTK.Mathematics.Quaternion.Conjugate
- uid: OpenTK.Mathematics.Quaternion.Add*
  commentId: Overload:OpenTK.Mathematics.Quaternion.Add
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_Add_OpenTK_Mathematics_Quaternion_OpenTK_Mathematics_Quaternion_
  name: Add
  nameWithType: Quaternion.Add
  fullName: OpenTK.Mathematics.Quaternion.Add
- uid: OpenTK.Mathematics.Quaternion.Sub*
  commentId: Overload:OpenTK.Mathematics.Quaternion.Sub
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_Sub_OpenTK_Mathematics_Quaternion_OpenTK_Mathematics_Quaternion_
  name: Sub
  nameWithType: Quaternion.Sub
  fullName: OpenTK.Mathematics.Quaternion.Sub
- uid: OpenTK.Mathematics.Quaternion.Multiply*
  commentId: Overload:OpenTK.Mathematics.Quaternion.Multiply
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_Multiply_OpenTK_Mathematics_Quaternion_OpenTK_Mathematics_Quaternion_
  name: Multiply
  nameWithType: Quaternion.Multiply
  fullName: OpenTK.Mathematics.Quaternion.Multiply
- uid: OpenTK.Mathematics.Quaternion.FromAxisAngle*
  commentId: Overload:OpenTK.Mathematics.Quaternion.FromAxisAngle
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_FromAxisAngle_OpenTK_Mathematics_Vector3_System_Single_
  name: FromAxisAngle
  nameWithType: Quaternion.FromAxisAngle
  fullName: OpenTK.Mathematics.Quaternion.FromAxisAngle
- uid: OpenTK.Mathematics.Quaternion.FromEulerAngles*
  commentId: Overload:OpenTK.Mathematics.Quaternion.FromEulerAngles
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_FromEulerAngles_System_Single_System_Single_System_Single_
  name: FromEulerAngles
  nameWithType: Quaternion.FromEulerAngles
  fullName: OpenTK.Mathematics.Quaternion.FromEulerAngles
- uid: OpenTK.Mathematics.Quaternion.FromMatrix*
  commentId: Overload:OpenTK.Mathematics.Quaternion.FromMatrix
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_FromMatrix_OpenTK_Mathematics_Matrix3_
  name: FromMatrix
  nameWithType: Quaternion.FromMatrix
  fullName: OpenTK.Mathematics.Quaternion.FromMatrix
- uid: OpenTK.Mathematics.Matrix3
  commentId: T:OpenTK.Mathematics.Matrix3
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Matrix3.html
  name: Matrix3
  nameWithType: Matrix3
  fullName: OpenTK.Mathematics.Matrix3
- uid: OpenTK.Mathematics.Quaternion.Slerp*
  commentId: Overload:OpenTK.Mathematics.Quaternion.Slerp
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_Slerp_OpenTK_Mathematics_Quaternion_OpenTK_Mathematics_Quaternion_System_Single_
  name: Slerp
  nameWithType: Quaternion.Slerp
  fullName: OpenTK.Mathematics.Quaternion.Slerp
- uid: OpenTK.Mathematics.Quaternion.op_Addition*
  commentId: Overload:OpenTK.Mathematics.Quaternion.op_Addition
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_op_Addition_OpenTK_Mathematics_Quaternion_OpenTK_Mathematics_Quaternion_
  name: operator +
  nameWithType: Quaternion.operator +
  fullName: OpenTK.Mathematics.Quaternion.operator +
  nameWithType.vb: Quaternion.+
  fullName.vb: OpenTK.Mathematics.Quaternion.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Quaternion.op_Addition*
    name: +
    href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_op_Addition_OpenTK_Mathematics_Quaternion_OpenTK_Mathematics_Quaternion_
- uid: OpenTK.Mathematics.Quaternion.op_Subtraction*
  commentId: Overload:OpenTK.Mathematics.Quaternion.op_Subtraction
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_op_Subtraction_OpenTK_Mathematics_Quaternion_OpenTK_Mathematics_Quaternion_
  name: operator -
  nameWithType: Quaternion.operator -
  fullName: OpenTK.Mathematics.Quaternion.operator -
  nameWithType.vb: Quaternion.-
  fullName.vb: OpenTK.Mathematics.Quaternion.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Quaternion.op_Subtraction*
    name: '-'
    href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_op_Subtraction_OpenTK_Mathematics_Quaternion_OpenTK_Mathematics_Quaternion_
- uid: OpenTK.Mathematics.Quaternion.op_Multiply*
  commentId: Overload:OpenTK.Mathematics.Quaternion.op_Multiply
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_op_Multiply_OpenTK_Mathematics_Quaternion_OpenTK_Mathematics_Quaternion_
  name: operator *
  nameWithType: Quaternion.operator *
  fullName: OpenTK.Mathematics.Quaternion.operator *
  nameWithType.vb: Quaternion.*
  fullName.vb: OpenTK.Mathematics.Quaternion.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Quaternion.op_Multiply*
    name: '*'
    href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_op_Multiply_OpenTK_Mathematics_Quaternion_OpenTK_Mathematics_Quaternion_
- uid: OpenTK.Mathematics.Quaternion.op_Equality*
  commentId: Overload:OpenTK.Mathematics.Quaternion.op_Equality
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_op_Equality_OpenTK_Mathematics_Quaternion_OpenTK_Mathematics_Quaternion_
  name: operator ==
  nameWithType: Quaternion.operator ==
  fullName: OpenTK.Mathematics.Quaternion.operator ==
  nameWithType.vb: Quaternion.=
  fullName.vb: OpenTK.Mathematics.Quaternion.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Quaternion.op_Equality*
    name: ==
    href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_op_Equality_OpenTK_Mathematics_Quaternion_OpenTK_Mathematics_Quaternion_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenTK.Mathematics.Quaternion.op_Inequality*
  commentId: Overload:OpenTK.Mathematics.Quaternion.op_Inequality
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_op_Inequality_OpenTK_Mathematics_Quaternion_OpenTK_Mathematics_Quaternion_
  name: operator !=
  nameWithType: Quaternion.operator !=
  fullName: OpenTK.Mathematics.Quaternion.operator !=
  nameWithType.vb: Quaternion.<>
  fullName.vb: OpenTK.Mathematics.Quaternion.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Quaternion.op_Inequality*
    name: '!='
    href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_op_Inequality_OpenTK_Mathematics_Quaternion_OpenTK_Mathematics_Quaternion_
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: OpenTK.Mathematics.Quaternion.Equals*
  commentId: Overload:OpenTK.Mathematics.Quaternion.Equals
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_Equals_System_Object_
  name: Equals
  nameWithType: Quaternion.Equals
  fullName: OpenTK.Mathematics.Quaternion.Equals
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IEquatable{OpenTK.Mathematics.Quaternion}.Equals(OpenTK.Mathematics.Quaternion)
  commentId: M:System.IEquatable{OpenTK.Mathematics.Quaternion}.Equals(OpenTK.Mathematics.Quaternion)
  parent: System.IEquatable{OpenTK.Mathematics.Quaternion}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Quaternion)
  nameWithType: IEquatable<Quaternion>.Equals(Quaternion)
  fullName: System.IEquatable<OpenTK.Mathematics.Quaternion>.Equals(OpenTK.Mathematics.Quaternion)
  nameWithType.vb: IEquatable(Of Quaternion).Equals(Quaternion)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Quaternion).Equals(OpenTK.Mathematics.Quaternion)
  spec.csharp:
  - uid: System.IEquatable{OpenTK.Mathematics.Quaternion}.Equals(OpenTK.Mathematics.Quaternion)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: OpenTK.Mathematics.Quaternion
    name: Quaternion
    href: OpenTK.Mathematics.Quaternion.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{OpenTK.Mathematics.Quaternion}.Equals(OpenTK.Mathematics.Quaternion)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: OpenTK.Mathematics.Quaternion
    name: Quaternion
    href: OpenTK.Mathematics.Quaternion.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Quaternion.GetHashCode*
  commentId: Overload:OpenTK.Mathematics.Quaternion.GetHashCode
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_GetHashCode
  name: GetHashCode
  nameWithType: Quaternion.GetHashCode
  fullName: OpenTK.Mathematics.Quaternion.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Quaternion.ToString*
  commentId: Overload:OpenTK.Mathematics.Quaternion.ToString
  href: OpenTK.Mathematics.Quaternion.html#OpenTK_Mathematics_Quaternion_ToString
  name: ToString
  nameWithType: Quaternion.ToString
  fullName: OpenTK.Mathematics.Quaternion.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
