### YamlMime:ManagedReference
items:
- uid: OpenTK.Compute.OpenCL.CLPipe
  commentId: T:OpenTK.Compute.OpenCL.CLPipe
  id: CLPipe
  parent: OpenTK.Compute.OpenCL
  children:
  - OpenTK.Compute.OpenCL.CLPipe.#ctor(System.IntPtr)
  - OpenTK.Compute.OpenCL.CLPipe.Equals(OpenTK.Compute.OpenCL.CLPipe)
  - OpenTK.Compute.OpenCL.CLPipe.Equals(System.Object)
  - OpenTK.Compute.OpenCL.CLPipe.GetHashCode
  - OpenTK.Compute.OpenCL.CLPipe.Handle
  - OpenTK.Compute.OpenCL.CLPipe.op_Equality(OpenTK.Compute.OpenCL.CLPipe,OpenTK.Compute.OpenCL.CLPipe)
  - OpenTK.Compute.OpenCL.CLPipe.op_Implicit(OpenTK.Compute.OpenCL.CLPipe)~System.IntPtr
  - OpenTK.Compute.OpenCL.CLPipe.op_Inequality(OpenTK.Compute.OpenCL.CLPipe,OpenTK.Compute.OpenCL.CLPipe)
  langs:
  - csharp
  - vb
  name: CLPipe
  nameWithType: CLPipe
  fullName: OpenTK.Compute.OpenCL.CLPipe
  type: Struct
  source:
    id: CLPipe
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Compute\OpenCL\CLPipe.cs
    startLine: 5
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  syntax:
    content: 'public readonly struct CLPipe : IEquatable<CLPipe>'
    content.vb: Public Structure CLPipe Implements IEquatable(Of CLPipe)
  implements:
  - System.IEquatable{OpenTK.Compute.OpenCL.CLPipe}
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: OpenTK.Compute.OpenCL.CLPipe.Handle
  commentId: F:OpenTK.Compute.OpenCL.CLPipe.Handle
  id: Handle
  parent: OpenTK.Compute.OpenCL.CLPipe
  langs:
  - csharp
  - vb
  name: Handle
  nameWithType: CLPipe.Handle
  fullName: OpenTK.Compute.OpenCL.CLPipe.Handle
  type: Field
  source:
    id: Handle
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Compute\OpenCL\CLPipe.cs
    startLine: 7
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  syntax:
    content: public readonly nint Handle
    return:
      type: System.IntPtr
    content.vb: Public ReadOnly Handle As IntPtr
- uid: OpenTK.Compute.OpenCL.CLPipe.#ctor(System.IntPtr)
  commentId: M:OpenTK.Compute.OpenCL.CLPipe.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: OpenTK.Compute.OpenCL.CLPipe
  langs:
  - csharp
  - vb
  name: CLPipe(nint)
  nameWithType: CLPipe.CLPipe(nint)
  fullName: OpenTK.Compute.OpenCL.CLPipe.CLPipe(nint)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Compute\OpenCL\CLPipe.cs
    startLine: 9
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  syntax:
    content: public CLPipe(nint handle)
    parameters:
    - id: handle
      type: System.IntPtr
    content.vb: Public Sub New(handle As IntPtr)
  overload: OpenTK.Compute.OpenCL.CLPipe.#ctor*
  nameWithType.vb: CLPipe.New(IntPtr)
  fullName.vb: OpenTK.Compute.OpenCL.CLPipe.New(System.IntPtr)
  name.vb: New(IntPtr)
- uid: OpenTK.Compute.OpenCL.CLPipe.Equals(OpenTK.Compute.OpenCL.CLPipe)
  commentId: M:OpenTK.Compute.OpenCL.CLPipe.Equals(OpenTK.Compute.OpenCL.CLPipe)
  id: Equals(OpenTK.Compute.OpenCL.CLPipe)
  parent: OpenTK.Compute.OpenCL.CLPipe
  langs:
  - csharp
  - vb
  name: Equals(CLPipe)
  nameWithType: CLPipe.Equals(CLPipe)
  fullName: OpenTK.Compute.OpenCL.CLPipe.Equals(OpenTK.Compute.OpenCL.CLPipe)
  type: Method
  source:
    id: Equals
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Compute\OpenCL\CLPipe.cs
    startLine: 14
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(CLPipe other)
    parameters:
    - id: other
      type: OpenTK.Compute.OpenCL.CLPipe
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As CLPipe) As Boolean
  overload: OpenTK.Compute.OpenCL.CLPipe.Equals*
  implements:
  - System.IEquatable{OpenTK.Compute.OpenCL.CLPipe}.Equals(OpenTK.Compute.OpenCL.CLPipe)
- uid: OpenTK.Compute.OpenCL.CLPipe.Equals(System.Object)
  commentId: M:OpenTK.Compute.OpenCL.CLPipe.Equals(System.Object)
  id: Equals(System.Object)
  parent: OpenTK.Compute.OpenCL.CLPipe
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: CLPipe.Equals(object)
  fullName: OpenTK.Compute.OpenCL.CLPipe.Equals(object)
  type: Method
  source:
    id: Equals
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Compute\OpenCL\CLPipe.cs
    startLine: 19
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: OpenTK.Compute.OpenCL.CLPipe.Equals*
  nameWithType.vb: CLPipe.Equals(Object)
  fullName.vb: OpenTK.Compute.OpenCL.CLPipe.Equals(Object)
  name.vb: Equals(Object)
- uid: OpenTK.Compute.OpenCL.CLPipe.GetHashCode
  commentId: M:OpenTK.Compute.OpenCL.CLPipe.GetHashCode
  id: GetHashCode
  parent: OpenTK.Compute.OpenCL.CLPipe
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: CLPipe.GetHashCode()
  fullName: OpenTK.Compute.OpenCL.CLPipe.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Compute\OpenCL\CLPipe.cs
    startLine: 24
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: OpenTK.Compute.OpenCL.CLPipe.GetHashCode*
- uid: OpenTK.Compute.OpenCL.CLPipe.op_Equality(OpenTK.Compute.OpenCL.CLPipe,OpenTK.Compute.OpenCL.CLPipe)
  commentId: M:OpenTK.Compute.OpenCL.CLPipe.op_Equality(OpenTK.Compute.OpenCL.CLPipe,OpenTK.Compute.OpenCL.CLPipe)
  id: op_Equality(OpenTK.Compute.OpenCL.CLPipe,OpenTK.Compute.OpenCL.CLPipe)
  parent: OpenTK.Compute.OpenCL.CLPipe
  langs:
  - csharp
  - vb
  name: operator ==(CLPipe, CLPipe)
  nameWithType: CLPipe.operator ==(CLPipe, CLPipe)
  fullName: OpenTK.Compute.OpenCL.CLPipe.operator ==(OpenTK.Compute.OpenCL.CLPipe, OpenTK.Compute.OpenCL.CLPipe)
  type: Operator
  source:
    id: op_Equality
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Compute\OpenCL\CLPipe.cs
    startLine: 29
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  syntax:
    content: public static bool operator ==(CLPipe left, CLPipe right)
    parameters:
    - id: left
      type: OpenTK.Compute.OpenCL.CLPipe
    - id: right
      type: OpenTK.Compute.OpenCL.CLPipe
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As CLPipe, right As CLPipe) As Boolean
  overload: OpenTK.Compute.OpenCL.CLPipe.op_Equality*
  nameWithType.vb: CLPipe.=(CLPipe, CLPipe)
  fullName.vb: OpenTK.Compute.OpenCL.CLPipe.=(OpenTK.Compute.OpenCL.CLPipe, OpenTK.Compute.OpenCL.CLPipe)
  name.vb: =(CLPipe, CLPipe)
- uid: OpenTK.Compute.OpenCL.CLPipe.op_Inequality(OpenTK.Compute.OpenCL.CLPipe,OpenTK.Compute.OpenCL.CLPipe)
  commentId: M:OpenTK.Compute.OpenCL.CLPipe.op_Inequality(OpenTK.Compute.OpenCL.CLPipe,OpenTK.Compute.OpenCL.CLPipe)
  id: op_Inequality(OpenTK.Compute.OpenCL.CLPipe,OpenTK.Compute.OpenCL.CLPipe)
  parent: OpenTK.Compute.OpenCL.CLPipe
  langs:
  - csharp
  - vb
  name: operator !=(CLPipe, CLPipe)
  nameWithType: CLPipe.operator !=(CLPipe, CLPipe)
  fullName: OpenTK.Compute.OpenCL.CLPipe.operator !=(OpenTK.Compute.OpenCL.CLPipe, OpenTK.Compute.OpenCL.CLPipe)
  type: Operator
  source:
    id: op_Inequality
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Compute\OpenCL\CLPipe.cs
    startLine: 34
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  syntax:
    content: public static bool operator !=(CLPipe left, CLPipe right)
    parameters:
    - id: left
      type: OpenTK.Compute.OpenCL.CLPipe
    - id: right
      type: OpenTK.Compute.OpenCL.CLPipe
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As CLPipe, right As CLPipe) As Boolean
  overload: OpenTK.Compute.OpenCL.CLPipe.op_Inequality*
  nameWithType.vb: CLPipe.<>(CLPipe, CLPipe)
  fullName.vb: OpenTK.Compute.OpenCL.CLPipe.<>(OpenTK.Compute.OpenCL.CLPipe, OpenTK.Compute.OpenCL.CLPipe)
  name.vb: <>(CLPipe, CLPipe)
- uid: OpenTK.Compute.OpenCL.CLPipe.op_Implicit(OpenTK.Compute.OpenCL.CLPipe)~System.IntPtr
  commentId: M:OpenTK.Compute.OpenCL.CLPipe.op_Implicit(OpenTK.Compute.OpenCL.CLPipe)~System.IntPtr
  id: op_Implicit(OpenTK.Compute.OpenCL.CLPipe)~System.IntPtr
  parent: OpenTK.Compute.OpenCL.CLPipe
  langs:
  - csharp
  - vb
  name: implicit operator nint(CLPipe)
  nameWithType: CLPipe.implicit operator nint(CLPipe)
  fullName: OpenTK.Compute.OpenCL.CLPipe.implicit operator nint(OpenTK.Compute.OpenCL.CLPipe)
  type: Operator
  source:
    id: op_Implicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Compute\OpenCL\CLPipe.cs
    startLine: 39
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  syntax:
    content: public static implicit operator nint(CLPipe pipe)
    parameters:
    - id: pipe
      type: OpenTK.Compute.OpenCL.CLPipe
    return:
      type: System.IntPtr
    content.vb: Public Shared Widening Operator CType(pipe As CLPipe) As IntPtr
  overload: OpenTK.Compute.OpenCL.CLPipe.op_Implicit*
  nameWithType.vb: CLPipe.CType(CLPipe)
  fullName.vb: OpenTK.Compute.OpenCL.CLPipe.CType(OpenTK.Compute.OpenCL.CLPipe)
  name.vb: CType(CLPipe)
references:
- uid: OpenTK.Compute.OpenCL
  commentId: N:OpenTK.Compute.OpenCL
  href: OpenTK.html
  name: OpenTK.Compute.OpenCL
  nameWithType: OpenTK.Compute.OpenCL
  fullName: OpenTK.Compute.OpenCL
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Compute
    name: Compute
    href: OpenTK.Compute.html
  - name: .
  - uid: OpenTK.Compute.OpenCL
    name: OpenCL
    href: OpenTK.Compute.OpenCL.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Compute
    name: Compute
    href: OpenTK.Compute.html
  - name: .
  - uid: OpenTK.Compute.OpenCL
    name: OpenCL
    href: OpenTK.Compute.OpenCL.html
- uid: System.IEquatable{OpenTK.Compute.OpenCL.CLPipe}
  commentId: T:System.IEquatable{OpenTK.Compute.OpenCL.CLPipe}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<CLPipe>
  nameWithType: IEquatable<CLPipe>
  fullName: System.IEquatable<OpenTK.Compute.OpenCL.CLPipe>
  nameWithType.vb: IEquatable(Of CLPipe)
  fullName.vb: System.IEquatable(Of OpenTK.Compute.OpenCL.CLPipe)
  name.vb: IEquatable(Of CLPipe)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: OpenTK.Compute.OpenCL.CLPipe
    name: CLPipe
    href: OpenTK.Compute.OpenCL.CLPipe.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Compute.OpenCL.CLPipe
    name: CLPipe
    href: OpenTK.Compute.OpenCL.CLPipe.html
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: nint
  nameWithType: nint
  fullName: nint
  nameWithType.vb: IntPtr
  fullName.vb: System.IntPtr
  name.vb: IntPtr
- uid: OpenTK.Compute.OpenCL.CLPipe.#ctor*
  commentId: Overload:OpenTK.Compute.OpenCL.CLPipe.#ctor
  href: OpenTK.Compute.OpenCL.CLPipe.html#OpenTK_Compute_OpenCL_CLPipe__ctor_System_IntPtr_
  name: CLPipe
  nameWithType: CLPipe.CLPipe
  fullName: OpenTK.Compute.OpenCL.CLPipe.CLPipe
  nameWithType.vb: CLPipe.New
  fullName.vb: OpenTK.Compute.OpenCL.CLPipe.New
  name.vb: New
- uid: OpenTK.Compute.OpenCL.CLPipe.Equals*
  commentId: Overload:OpenTK.Compute.OpenCL.CLPipe.Equals
  href: OpenTK.Compute.OpenCL.CLPipe.html#OpenTK_Compute_OpenCL_CLPipe_Equals_OpenTK_Compute_OpenCL_CLPipe_
  name: Equals
  nameWithType: CLPipe.Equals
  fullName: OpenTK.Compute.OpenCL.CLPipe.Equals
- uid: System.IEquatable{OpenTK.Compute.OpenCL.CLPipe}.Equals(OpenTK.Compute.OpenCL.CLPipe)
  commentId: M:System.IEquatable{OpenTK.Compute.OpenCL.CLPipe}.Equals(OpenTK.Compute.OpenCL.CLPipe)
  parent: System.IEquatable{OpenTK.Compute.OpenCL.CLPipe}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(CLPipe)
  nameWithType: IEquatable<CLPipe>.Equals(CLPipe)
  fullName: System.IEquatable<OpenTK.Compute.OpenCL.CLPipe>.Equals(OpenTK.Compute.OpenCL.CLPipe)
  nameWithType.vb: IEquatable(Of CLPipe).Equals(CLPipe)
  fullName.vb: System.IEquatable(Of OpenTK.Compute.OpenCL.CLPipe).Equals(OpenTK.Compute.OpenCL.CLPipe)
  spec.csharp:
  - uid: System.IEquatable{OpenTK.Compute.OpenCL.CLPipe}.Equals(OpenTK.Compute.OpenCL.CLPipe)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: OpenTK.Compute.OpenCL.CLPipe
    name: CLPipe
    href: OpenTK.Compute.OpenCL.CLPipe.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{OpenTK.Compute.OpenCL.CLPipe}.Equals(OpenTK.Compute.OpenCL.CLPipe)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: OpenTK.Compute.OpenCL.CLPipe
    name: CLPipe
    href: OpenTK.Compute.OpenCL.CLPipe.html
  - name: )
- uid: OpenTK.Compute.OpenCL.CLPipe
  commentId: T:OpenTK.Compute.OpenCL.CLPipe
  parent: OpenTK.Compute.OpenCL
  href: OpenTK.Compute.OpenCL.CLPipe.html
  name: CLPipe
  nameWithType: CLPipe
  fullName: OpenTK.Compute.OpenCL.CLPipe
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: OpenTK.Compute.OpenCL.CLPipe.GetHashCode*
  commentId: Overload:OpenTK.Compute.OpenCL.CLPipe.GetHashCode
  href: OpenTK.Compute.OpenCL.CLPipe.html#OpenTK_Compute_OpenCL_CLPipe_GetHashCode
  name: GetHashCode
  nameWithType: CLPipe.GetHashCode
  fullName: OpenTK.Compute.OpenCL.CLPipe.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: OpenTK.Compute.OpenCL.CLPipe.op_Equality*
  commentId: Overload:OpenTK.Compute.OpenCL.CLPipe.op_Equality
  href: OpenTK.Compute.OpenCL.CLPipe.html#OpenTK_Compute_OpenCL_CLPipe_op_Equality_OpenTK_Compute_OpenCL_CLPipe_OpenTK_Compute_OpenCL_CLPipe_
  name: operator ==
  nameWithType: CLPipe.operator ==
  fullName: OpenTK.Compute.OpenCL.CLPipe.operator ==
  nameWithType.vb: CLPipe.=
  fullName.vb: OpenTK.Compute.OpenCL.CLPipe.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Compute.OpenCL.CLPipe.op_Equality*
    name: ==
    href: OpenTK.Compute.OpenCL.CLPipe.html#OpenTK_Compute_OpenCL_CLPipe_op_Equality_OpenTK_Compute_OpenCL_CLPipe_OpenTK_Compute_OpenCL_CLPipe_
- uid: OpenTK.Compute.OpenCL.CLPipe.op_Inequality*
  commentId: Overload:OpenTK.Compute.OpenCL.CLPipe.op_Inequality
  href: OpenTK.Compute.OpenCL.CLPipe.html#OpenTK_Compute_OpenCL_CLPipe_op_Inequality_OpenTK_Compute_OpenCL_CLPipe_OpenTK_Compute_OpenCL_CLPipe_
  name: operator !=
  nameWithType: CLPipe.operator !=
  fullName: OpenTK.Compute.OpenCL.CLPipe.operator !=
  nameWithType.vb: CLPipe.<>
  fullName.vb: OpenTK.Compute.OpenCL.CLPipe.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Compute.OpenCL.CLPipe.op_Inequality*
    name: '!='
    href: OpenTK.Compute.OpenCL.CLPipe.html#OpenTK_Compute_OpenCL_CLPipe_op_Inequality_OpenTK_Compute_OpenCL_CLPipe_OpenTK_Compute_OpenCL_CLPipe_
- uid: OpenTK.Compute.OpenCL.CLPipe.op_Implicit*
  commentId: Overload:OpenTK.Compute.OpenCL.CLPipe.op_Implicit
  name: implicit operator
  nameWithType: CLPipe.implicit operator
  fullName: OpenTK.Compute.OpenCL.CLPipe.implicit operator
  nameWithType.vb: CLPipe.CType
  fullName.vb: OpenTK.Compute.OpenCL.CLPipe.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
