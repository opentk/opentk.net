### YamlMime:ManagedReference
items:
- uid: OpenTK.Mathematics.Vector3i
  commentId: T:OpenTK.Mathematics.Vector3i
  id: Vector3i
  parent: OpenTK.Mathematics
  children:
  - OpenTK.Mathematics.Vector3i.#ctor(OpenTK.Mathematics.Vector2i,System.Int32)
  - OpenTK.Mathematics.Vector3i.#ctor(System.Int32)
  - OpenTK.Mathematics.Vector3i.#ctor(System.Int32,System.Int32,System.Int32)
  - OpenTK.Mathematics.Vector3i.Abs
  - OpenTK.Mathematics.Vector3i.Abs(OpenTK.Mathematics.Vector3i)
  - OpenTK.Mathematics.Vector3i.Abs(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  - OpenTK.Mathematics.Vector3i.Add(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  - OpenTK.Mathematics.Vector3i.Add(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  - OpenTK.Mathematics.Vector3i.Clamp(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  - OpenTK.Mathematics.Vector3i.Clamp(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  - OpenTK.Mathematics.Vector3i.ComponentMax(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  - OpenTK.Mathematics.Vector3i.ComponentMax(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  - OpenTK.Mathematics.Vector3i.ComponentMin(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  - OpenTK.Mathematics.Vector3i.ComponentMin(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  - OpenTK.Mathematics.Vector3i.Deconstruct(System.Int32@,System.Int32@,System.Int32@)
  - OpenTK.Mathematics.Vector3i.Divide(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  - OpenTK.Mathematics.Vector3i.Divide(OpenTK.Mathematics.Vector3i,System.Int32)
  - OpenTK.Mathematics.Vector3i.Divide(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  - OpenTK.Mathematics.Vector3i.Divide(OpenTK.Mathematics.Vector3i@,System.Int32,OpenTK.Mathematics.Vector3i@)
  - OpenTK.Mathematics.Vector3i.Equals(OpenTK.Mathematics.Vector3i)
  - OpenTK.Mathematics.Vector3i.Equals(System.Object)
  - OpenTK.Mathematics.Vector3i.EuclideanLength
  - OpenTK.Mathematics.Vector3i.EuclideanLengthSquared
  - OpenTK.Mathematics.Vector3i.GetHashCode
  - OpenTK.Mathematics.Vector3i.Item(System.Int32)
  - OpenTK.Mathematics.Vector3i.ManhattanLength
  - OpenTK.Mathematics.Vector3i.Multiply(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  - OpenTK.Mathematics.Vector3i.Multiply(OpenTK.Mathematics.Vector3i,System.Int32)
  - OpenTK.Mathematics.Vector3i.Multiply(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  - OpenTK.Mathematics.Vector3i.Multiply(OpenTK.Mathematics.Vector3i@,System.Int32,OpenTK.Mathematics.Vector3i@)
  - OpenTK.Mathematics.Vector3i.One
  - OpenTK.Mathematics.Vector3i.SizeInBytes
  - OpenTK.Mathematics.Vector3i.Subtract(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  - OpenTK.Mathematics.Vector3i.Subtract(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  - OpenTK.Mathematics.Vector3i.ToString
  - OpenTK.Mathematics.Vector3i.ToString(System.IFormatProvider)
  - OpenTK.Mathematics.Vector3i.ToString(System.String)
  - OpenTK.Mathematics.Vector3i.ToString(System.String,System.IFormatProvider)
  - OpenTK.Mathematics.Vector3i.ToVector3
  - OpenTK.Mathematics.Vector3i.ToVector3(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3i.UnitX
  - OpenTK.Mathematics.Vector3i.UnitY
  - OpenTK.Mathematics.Vector3i.UnitZ
  - OpenTK.Mathematics.Vector3i.X
  - OpenTK.Mathematics.Vector3i.Xy
  - OpenTK.Mathematics.Vector3i.Xz
  - OpenTK.Mathematics.Vector3i.Xzy
  - OpenTK.Mathematics.Vector3i.Y
  - OpenTK.Mathematics.Vector3i.Yx
  - OpenTK.Mathematics.Vector3i.Yxz
  - OpenTK.Mathematics.Vector3i.Yz
  - OpenTK.Mathematics.Vector3i.Yzx
  - OpenTK.Mathematics.Vector3i.Z
  - OpenTK.Mathematics.Vector3i.Zero
  - OpenTK.Mathematics.Vector3i.Zx
  - OpenTK.Mathematics.Vector3i.Zxy
  - OpenTK.Mathematics.Vector3i.Zy
  - OpenTK.Mathematics.Vector3i.Zyx
  - OpenTK.Mathematics.Vector3i.op_Addition(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  - OpenTK.Mathematics.Vector3i.op_Division(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  - OpenTK.Mathematics.Vector3i.op_Division(OpenTK.Mathematics.Vector3i,System.Int32)
  - OpenTK.Mathematics.Vector3i.op_Equality(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  - OpenTK.Mathematics.Vector3i.op_Explicit(OpenTK.Mathematics.Vector3i)~OpenTK.Mathematics.Vector3h
  - OpenTK.Mathematics.Vector3i.op_Implicit(OpenTK.Mathematics.Vector3i)~OpenTK.Mathematics.Vector3
  - OpenTK.Mathematics.Vector3i.op_Implicit(OpenTK.Mathematics.Vector3i)~OpenTK.Mathematics.Vector3d
  - OpenTK.Mathematics.Vector3i.op_Implicit(System.ValueTuple{System.Int32,System.Int32,System.Int32})~OpenTK.Mathematics.Vector3i
  - OpenTK.Mathematics.Vector3i.op_Inequality(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  - OpenTK.Mathematics.Vector3i.op_Multiply(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  - OpenTK.Mathematics.Vector3i.op_Multiply(OpenTK.Mathematics.Vector3i,System.Int32)
  - OpenTK.Mathematics.Vector3i.op_Multiply(System.Int32,OpenTK.Mathematics.Vector3i)
  - OpenTK.Mathematics.Vector3i.op_Subtraction(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  - OpenTK.Mathematics.Vector3i.op_UnaryNegation(OpenTK.Mathematics.Vector3i)
  langs:
  - csharp
  - vb
  name: Vector3i
  nameWithType: Vector3i
  fullName: OpenTK.Mathematics.Vector3i
  type: Struct
  source:
    id: Vector3i
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 23
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Represents a 3D vector using three 32-bit integer numbers.
  remarks: The Vector3i structure is suitable for interoperation with unmanaged code requiring three consecutive integers.
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct Vector3i : IEquatable<Vector3i>, IFormattable
    content.vb: >-
      <Serializable>

      Public Structure Vector3i Implements IEquatable(Of Vector3i), IFormattable
  implements:
  - System.IEquatable{OpenTK.Mathematics.Vector3i}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3i.X
  commentId: F:OpenTK.Mathematics.Vector3i.X
  id: X
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Vector3i.X
  fullName: OpenTK.Mathematics.Vector3i.X
  type: Field
  source:
    id: X
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 30
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The X component of the Vector3i.
  example: []
  syntax:
    content: public int X
    return:
      type: System.Int32
    content.vb: Public X As Integer
- uid: OpenTK.Mathematics.Vector3i.Y
  commentId: F:OpenTK.Mathematics.Vector3i.Y
  id: Y
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Vector3i.Y
  fullName: OpenTK.Mathematics.Vector3i.Y
  type: Field
  source:
    id: Y
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 35
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The Y component of the Vector3i.
  example: []
  syntax:
    content: public int Y
    return:
      type: System.Int32
    content.vb: Public Y As Integer
- uid: OpenTK.Mathematics.Vector3i.Z
  commentId: F:OpenTK.Mathematics.Vector3i.Z
  id: Z
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: Vector3i.Z
  fullName: OpenTK.Mathematics.Vector3i.Z
  type: Field
  source:
    id: Z
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 40
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The Z component of the Vector3i.
  example: []
  syntax:
    content: public int Z
    return:
      type: System.Int32
    content.vb: Public Z As Integer
- uid: OpenTK.Mathematics.Vector3i.#ctor(System.Int32)
  commentId: M:OpenTK.Mathematics.Vector3i.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Vector3i(int)
  nameWithType: Vector3i.Vector3i(int)
  fullName: OpenTK.Mathematics.Vector3i.Vector3i(int)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 46
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector3i(int value)
    parameters:
    - id: value
      type: System.Int32
      description: The value that will initialize this instance.
    content.vb: Public Sub New(value As Integer)
  overload: OpenTK.Mathematics.Vector3i.#ctor*
  nameWithType.vb: Vector3i.New(Integer)
  fullName.vb: OpenTK.Mathematics.Vector3i.New(Integer)
  name.vb: New(Integer)
- uid: OpenTK.Mathematics.Vector3i.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:OpenTK.Mathematics.Vector3i.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Vector3i(int, int, int)
  nameWithType: Vector3i.Vector3i(int, int, int)
  fullName: OpenTK.Mathematics.Vector3i.Vector3i(int, int, int)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 59
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector3i(int x, int y, int z)
    parameters:
    - id: x
      type: System.Int32
      description: The x component of the Vector3i.
    - id: y
      type: System.Int32
      description: The y component of the Vector3i.
    - id: z
      type: System.Int32
      description: The z component of the Vector3i.
    content.vb: Public Sub New(x As Integer, y As Integer, z As Integer)
  overload: OpenTK.Mathematics.Vector3i.#ctor*
  nameWithType.vb: Vector3i.New(Integer, Integer, Integer)
  fullName.vb: OpenTK.Mathematics.Vector3i.New(Integer, Integer, Integer)
  name.vb: New(Integer, Integer, Integer)
- uid: OpenTK.Mathematics.Vector3i.#ctor(OpenTK.Mathematics.Vector2i,System.Int32)
  commentId: M:OpenTK.Mathematics.Vector3i.#ctor(OpenTK.Mathematics.Vector2i,System.Int32)
  id: '#ctor(OpenTK.Mathematics.Vector2i,System.Int32)'
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Vector3i(Vector2i, int)
  nameWithType: Vector3i.Vector3i(Vector2i, int)
  fullName: OpenTK.Mathematics.Vector3i.Vector3i(OpenTK.Mathematics.Vector2i, int)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 71
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector3i(Vector2i xy, int z = 0)
    parameters:
    - id: xy
      type: OpenTK.Mathematics.Vector2i
      description: The x and y components of the Vector3i.
    - id: z
      type: System.Int32
      description: The z component of the Vector3i.
    content.vb: Public Sub New(xy As Vector2i, z As Integer = 0)
  overload: OpenTK.Mathematics.Vector3i.#ctor*
  nameWithType.vb: Vector3i.New(Vector2i, Integer)
  fullName.vb: OpenTK.Mathematics.Vector3i.New(OpenTK.Mathematics.Vector2i, Integer)
  name.vb: New(Vector2i, Integer)
- uid: OpenTK.Mathematics.Vector3i.Item(System.Int32)
  commentId: P:OpenTK.Mathematics.Vector3i.Item(System.Int32)
  id: Item(System.Int32)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: Vector3i.this[int]
  fullName: OpenTK.Mathematics.Vector3i.this[int]
  type: Property
  source:
    id: this[]
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 83
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the value at the index of the vector.
  example: []
  syntax:
    content: public int this[int index] { readonly get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The index of the component from the vector.
    return:
      type: System.Int32
    content.vb: Public Default Property this[](index As Integer) As Integer
  overload: OpenTK.Mathematics.Vector3i.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: Thrown if the index is less than 0 or greater than 2.
  nameWithType.vb: Vector3i.this[](Integer)
  fullName.vb: OpenTK.Mathematics.Vector3i.this[](Integer)
  name.vb: this[](Integer)
- uid: OpenTK.Mathematics.Vector3i.ManhattanLength
  commentId: P:OpenTK.Mathematics.Vector3i.ManhattanLength
  id: ManhattanLength
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: ManhattanLength
  nameWithType: Vector3i.ManhattanLength
  fullName: OpenTK.Mathematics.Vector3i.ManhattanLength
  type: Property
  source:
    id: ManhattanLength
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 129
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the manhattan length of the vector.
  example: []
  syntax:
    content: public readonly int ManhattanLength { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ManhattanLength As Integer
  overload: OpenTK.Mathematics.Vector3i.ManhattanLength*
- uid: OpenTK.Mathematics.Vector3i.EuclideanLengthSquared
  commentId: P:OpenTK.Mathematics.Vector3i.EuclideanLengthSquared
  id: EuclideanLengthSquared
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: EuclideanLengthSquared
  nameWithType: Vector3i.EuclideanLengthSquared
  fullName: OpenTK.Mathematics.Vector3i.EuclideanLengthSquared
  type: Property
  source:
    id: EuclideanLengthSquared
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 134
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the squared euclidean length of the vector.
  example: []
  syntax:
    content: public readonly int EuclideanLengthSquared { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property EuclideanLengthSquared As Integer
  overload: OpenTK.Mathematics.Vector3i.EuclideanLengthSquared*
- uid: OpenTK.Mathematics.Vector3i.EuclideanLength
  commentId: P:OpenTK.Mathematics.Vector3i.EuclideanLength
  id: EuclideanLength
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: EuclideanLength
  nameWithType: Vector3i.EuclideanLength
  fullName: OpenTK.Mathematics.Vector3i.EuclideanLength
  type: Property
  source:
    id: EuclideanLength
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 139
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the euclidean length of the vector.
  example: []
  syntax:
    content: public readonly float EuclideanLength { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property EuclideanLength As Single
  overload: OpenTK.Mathematics.Vector3i.EuclideanLength*
- uid: OpenTK.Mathematics.Vector3i.Abs
  commentId: M:OpenTK.Mathematics.Vector3i.Abs
  id: Abs
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Abs()
  nameWithType: Vector3i.Abs()
  fullName: OpenTK.Mathematics.Vector3i.Abs()
  type: Method
  source:
    id: Abs
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 145
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the component-wise absolute value of the vector.
  example: []
  syntax:
    content: public readonly Vector3i Abs()
    return:
      type: OpenTK.Mathematics.Vector3i
      description: The component-wise absolute value vector.
    content.vb: Public Function Abs() As Vector3i
  overload: OpenTK.Mathematics.Vector3i.Abs*
- uid: OpenTK.Mathematics.Vector3i.UnitX
  commentId: F:OpenTK.Mathematics.Vector3i.UnitX
  id: UnitX
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: UnitX
  nameWithType: Vector3i.UnitX
  fullName: OpenTK.Mathematics.Vector3i.UnitX
  type: Field
  source:
    id: UnitX
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 157
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length Vector3i that points towards the X-axis.
  example: []
  syntax:
    content: public static readonly Vector3i UnitX
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Shared ReadOnly UnitX As Vector3i
- uid: OpenTK.Mathematics.Vector3i.UnitY
  commentId: F:OpenTK.Mathematics.Vector3i.UnitY
  id: UnitY
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: UnitY
  nameWithType: Vector3i.UnitY
  fullName: OpenTK.Mathematics.Vector3i.UnitY
  type: Field
  source:
    id: UnitY
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 162
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length Vector3i that points towards the Y-axis.
  example: []
  syntax:
    content: public static readonly Vector3i UnitY
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Shared ReadOnly UnitY As Vector3i
- uid: OpenTK.Mathematics.Vector3i.UnitZ
  commentId: F:OpenTK.Mathematics.Vector3i.UnitZ
  id: UnitZ
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: UnitZ
  nameWithType: Vector3i.UnitZ
  fullName: OpenTK.Mathematics.Vector3i.UnitZ
  type: Field
  source:
    id: UnitZ
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 167
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length Vector3i that points towards the Z-axis.
  example: []
  syntax:
    content: public static readonly Vector3i UnitZ
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Shared ReadOnly UnitZ As Vector3i
- uid: OpenTK.Mathematics.Vector3i.Zero
  commentId: F:OpenTK.Mathematics.Vector3i.Zero
  id: Zero
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Vector3i.Zero
  fullName: OpenTK.Mathematics.Vector3i.Zero
  type: Field
  source:
    id: Zero
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 172
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to 0.
  example: []
  syntax:
    content: public static readonly Vector3i Zero
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Shared ReadOnly Zero As Vector3i
- uid: OpenTK.Mathematics.Vector3i.One
  commentId: F:OpenTK.Mathematics.Vector3i.One
  id: One
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Vector3i.One
  fullName: OpenTK.Mathematics.Vector3i.One
  type: Field
  source:
    id: One
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 177
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to 1.
  example: []
  syntax:
    content: public static readonly Vector3i One
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Shared ReadOnly One As Vector3i
- uid: OpenTK.Mathematics.Vector3i.SizeInBytes
  commentId: F:OpenTK.Mathematics.Vector3i.SizeInBytes
  id: SizeInBytes
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: SizeInBytes
  nameWithType: Vector3i.SizeInBytes
  fullName: OpenTK.Mathematics.Vector3i.SizeInBytes
  type: Field
  source:
    id: SizeInBytes
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 182
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines the size of the Vector3i struct in bytes.
  example: []
  syntax:
    content: public static readonly int SizeInBytes
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly SizeInBytes As Integer
- uid: OpenTK.Mathematics.Vector3i.Add(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  commentId: M:OpenTK.Mathematics.Vector3i.Add(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  id: Add(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Add(Vector3i, Vector3i)
  nameWithType: Vector3i.Add(Vector3i, Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.Add(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  type: Method
  source:
    id: Add
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 190
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3i Add(Vector3i a, Vector3i b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3i
      description: Left operand.
    - id: b
      type: OpenTK.Mathematics.Vector3i
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: Result of operation.
    content.vb: >-
      <Pure>

      Public Shared Function Add(a As Vector3i, b As Vector3i) As Vector3i
  overload: OpenTK.Mathematics.Vector3i.Add*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3i.Add(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  commentId: M:OpenTK.Mathematics.Vector3i.Add(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  id: Add(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Add(in Vector3i, in Vector3i, out Vector3i)
  nameWithType: Vector3i.Add(in Vector3i, in Vector3i, out Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.Add(in OpenTK.Mathematics.Vector3i, in OpenTK.Mathematics.Vector3i, out OpenTK.Mathematics.Vector3i)
  type: Method
  source:
    id: Add
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 203
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two vectors.
  example: []
  syntax:
    content: public static void Add(in Vector3i a, in Vector3i b, out Vector3i result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3i
      description: Left operand.
    - id: b
      type: OpenTK.Mathematics.Vector3i
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector3i
      description: Result of operation.
    content.vb: Public Shared Sub Add(a As Vector3i, b As Vector3i, result As Vector3i)
  overload: OpenTK.Mathematics.Vector3i.Add*
  nameWithType.vb: Vector3i.Add(Vector3i, Vector3i, Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i.Add(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  name.vb: Add(Vector3i, Vector3i, Vector3i)
- uid: OpenTK.Mathematics.Vector3i.Subtract(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  commentId: M:OpenTK.Mathematics.Vector3i.Subtract(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  id: Subtract(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Subtract(Vector3i, Vector3i)
  nameWithType: Vector3i.Subtract(Vector3i, Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.Subtract(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  type: Method
  source:
    id: Subtract
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 216
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtract one vector from another.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3i Subtract(Vector3i a, Vector3i b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3i
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector3i
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: Result of subtraction.
    content.vb: >-
      <Pure>

      Public Shared Function Subtract(a As Vector3i, b As Vector3i) As Vector3i
  overload: OpenTK.Mathematics.Vector3i.Subtract*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3i.Subtract(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  commentId: M:OpenTK.Mathematics.Vector3i.Subtract(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  id: Subtract(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Subtract(in Vector3i, in Vector3i, out Vector3i)
  nameWithType: Vector3i.Subtract(in Vector3i, in Vector3i, out Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.Subtract(in OpenTK.Mathematics.Vector3i, in OpenTK.Mathematics.Vector3i, out OpenTK.Mathematics.Vector3i)
  type: Method
  source:
    id: Subtract
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 229
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtract one vector from another.
  example: []
  syntax:
    content: public static void Subtract(in Vector3i a, in Vector3i b, out Vector3i result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3i
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector3i
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector3i
      description: Result of subtraction.
    content.vb: Public Shared Sub Subtract(a As Vector3i, b As Vector3i, result As Vector3i)
  overload: OpenTK.Mathematics.Vector3i.Subtract*
  nameWithType.vb: Vector3i.Subtract(Vector3i, Vector3i, Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i.Subtract(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  name.vb: Subtract(Vector3i, Vector3i, Vector3i)
- uid: OpenTK.Mathematics.Vector3i.Multiply(OpenTK.Mathematics.Vector3i,System.Int32)
  commentId: M:OpenTK.Mathematics.Vector3i.Multiply(OpenTK.Mathematics.Vector3i,System.Int32)
  id: Multiply(OpenTK.Mathematics.Vector3i,System.Int32)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Multiply(Vector3i, int)
  nameWithType: Vector3i.Multiply(Vector3i, int)
  fullName: OpenTK.Mathematics.Vector3i.Multiply(OpenTK.Mathematics.Vector3i, int)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 242
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3i Multiply(Vector3i vector, int scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3i
      description: Left operand.
    - id: scale
      type: System.Int32
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Multiply(vector As Vector3i, scale As Integer) As Vector3i
  overload: OpenTK.Mathematics.Vector3i.Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3i.Multiply(Vector3i, Integer)
  fullName.vb: OpenTK.Mathematics.Vector3i.Multiply(OpenTK.Mathematics.Vector3i, Integer)
  name.vb: Multiply(Vector3i, Integer)
- uid: OpenTK.Mathematics.Vector3i.Multiply(OpenTK.Mathematics.Vector3i@,System.Int32,OpenTK.Mathematics.Vector3i@)
  commentId: M:OpenTK.Mathematics.Vector3i.Multiply(OpenTK.Mathematics.Vector3i@,System.Int32,OpenTK.Mathematics.Vector3i@)
  id: Multiply(OpenTK.Mathematics.Vector3i@,System.Int32,OpenTK.Mathematics.Vector3i@)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Multiply(in Vector3i, int, out Vector3i)
  nameWithType: Vector3i.Multiply(in Vector3i, int, out Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.Multiply(in OpenTK.Mathematics.Vector3i, int, out OpenTK.Mathematics.Vector3i)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 255
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by a scalar.
  example: []
  syntax:
    content: public static void Multiply(in Vector3i vector, int scale, out Vector3i result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3i
      description: Left operand.
    - id: scale
      type: System.Int32
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector3i
      description: Result of the operation.
    content.vb: Public Shared Sub Multiply(vector As Vector3i, scale As Integer, result As Vector3i)
  overload: OpenTK.Mathematics.Vector3i.Multiply*
  nameWithType.vb: Vector3i.Multiply(Vector3i, Integer, Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i.Multiply(OpenTK.Mathematics.Vector3i, Integer, OpenTK.Mathematics.Vector3i)
  name.vb: Multiply(Vector3i, Integer, Vector3i)
- uid: OpenTK.Mathematics.Vector3i.Multiply(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  commentId: M:OpenTK.Mathematics.Vector3i.Multiply(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  id: Multiply(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Multiply(Vector3i, Vector3i)
  nameWithType: Vector3i.Multiply(Vector3i, Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.Multiply(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 268
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by the components a vector (scale).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3i Multiply(Vector3i vector, Vector3i scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3i
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector3i
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Multiply(vector As Vector3i, scale As Vector3i) As Vector3i
  overload: OpenTK.Mathematics.Vector3i.Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3i.Multiply(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  commentId: M:OpenTK.Mathematics.Vector3i.Multiply(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  id: Multiply(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Multiply(in Vector3i, in Vector3i, out Vector3i)
  nameWithType: Vector3i.Multiply(in Vector3i, in Vector3i, out Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.Multiply(in OpenTK.Mathematics.Vector3i, in OpenTK.Mathematics.Vector3i, out OpenTK.Mathematics.Vector3i)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 281
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by the components of a vector (scale).
  example: []
  syntax:
    content: public static void Multiply(in Vector3i vector, in Vector3i scale, out Vector3i result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3i
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector3i
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector3i
      description: Result of the operation.
    content.vb: Public Shared Sub Multiply(vector As Vector3i, scale As Vector3i, result As Vector3i)
  overload: OpenTK.Mathematics.Vector3i.Multiply*
  nameWithType.vb: Vector3i.Multiply(Vector3i, Vector3i, Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i.Multiply(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  name.vb: Multiply(Vector3i, Vector3i, Vector3i)
- uid: OpenTK.Mathematics.Vector3i.Divide(OpenTK.Mathematics.Vector3i,System.Int32)
  commentId: M:OpenTK.Mathematics.Vector3i.Divide(OpenTK.Mathematics.Vector3i,System.Int32)
  id: Divide(OpenTK.Mathematics.Vector3i,System.Int32)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Divide(Vector3i, int)
  nameWithType: Vector3i.Divide(Vector3i, int)
  fullName: OpenTK.Mathematics.Vector3i.Divide(OpenTK.Mathematics.Vector3i, int)
  type: Method
  source:
    id: Divide
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 294
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by a scalar using integer division, floor(a/b).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3i Divide(Vector3i vector, int scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3i
      description: Left operand.
    - id: scale
      type: System.Int32
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Divide(vector As Vector3i, scale As Integer) As Vector3i
  overload: OpenTK.Mathematics.Vector3i.Divide*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3i.Divide(Vector3i, Integer)
  fullName.vb: OpenTK.Mathematics.Vector3i.Divide(OpenTK.Mathematics.Vector3i, Integer)
  name.vb: Divide(Vector3i, Integer)
- uid: OpenTK.Mathematics.Vector3i.Divide(OpenTK.Mathematics.Vector3i@,System.Int32,OpenTK.Mathematics.Vector3i@)
  commentId: M:OpenTK.Mathematics.Vector3i.Divide(OpenTK.Mathematics.Vector3i@,System.Int32,OpenTK.Mathematics.Vector3i@)
  id: Divide(OpenTK.Mathematics.Vector3i@,System.Int32,OpenTK.Mathematics.Vector3i@)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Divide(in Vector3i, int, out Vector3i)
  nameWithType: Vector3i.Divide(in Vector3i, int, out Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.Divide(in OpenTK.Mathematics.Vector3i, int, out OpenTK.Mathematics.Vector3i)
  type: Method
  source:
    id: Divide
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 307
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by a scalar using integer division, floor(a/b).
  example: []
  syntax:
    content: public static void Divide(in Vector3i vector, int scale, out Vector3i result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3i
      description: Left operand.
    - id: scale
      type: System.Int32
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector3i
      description: Result of the operation.
    content.vb: Public Shared Sub Divide(vector As Vector3i, scale As Integer, result As Vector3i)
  overload: OpenTK.Mathematics.Vector3i.Divide*
  nameWithType.vb: Vector3i.Divide(Vector3i, Integer, Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i.Divide(OpenTK.Mathematics.Vector3i, Integer, OpenTK.Mathematics.Vector3i)
  name.vb: Divide(Vector3i, Integer, Vector3i)
- uid: OpenTK.Mathematics.Vector3i.Divide(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  commentId: M:OpenTK.Mathematics.Vector3i.Divide(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  id: Divide(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Divide(Vector3i, Vector3i)
  nameWithType: Vector3i.Divide(Vector3i, Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.Divide(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  type: Method
  source:
    id: Divide
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 320
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by the components of a vector using integer division, floor(a/b).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3i Divide(Vector3i vector, Vector3i scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3i
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector3i
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Divide(vector As Vector3i, scale As Vector3i) As Vector3i
  overload: OpenTK.Mathematics.Vector3i.Divide*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3i.Divide(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  commentId: M:OpenTK.Mathematics.Vector3i.Divide(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  id: Divide(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Divide(in Vector3i, in Vector3i, out Vector3i)
  nameWithType: Vector3i.Divide(in Vector3i, in Vector3i, out Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.Divide(in OpenTK.Mathematics.Vector3i, in OpenTK.Mathematics.Vector3i, out OpenTK.Mathematics.Vector3i)
  type: Method
  source:
    id: Divide
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 333
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by the components of a vector using integer division, floor(a/b).
  example: []
  syntax:
    content: public static void Divide(in Vector3i vector, in Vector3i scale, out Vector3i result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3i
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector3i
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector3i
      description: Result of the operation.
    content.vb: Public Shared Sub Divide(vector As Vector3i, scale As Vector3i, result As Vector3i)
  overload: OpenTK.Mathematics.Vector3i.Divide*
  nameWithType.vb: Vector3i.Divide(Vector3i, Vector3i, Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i.Divide(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  name.vb: Divide(Vector3i, Vector3i, Vector3i)
- uid: OpenTK.Mathematics.Vector3i.ComponentMin(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  commentId: M:OpenTK.Mathematics.Vector3i.ComponentMin(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  id: ComponentMin(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: ComponentMin(Vector3i, Vector3i)
  nameWithType: Vector3i.ComponentMin(Vector3i, Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.ComponentMin(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  type: Method
  source:
    id: ComponentMin
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 346
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the smallest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3i ComponentMin(Vector3i a, Vector3i b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3i
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector3i
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: The component-wise minimum.
    content.vb: >-
      <Pure>

      Public Shared Function ComponentMin(a As Vector3i, b As Vector3i) As Vector3i
  overload: OpenTK.Mathematics.Vector3i.ComponentMin*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3i.ComponentMin(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  commentId: M:OpenTK.Mathematics.Vector3i.ComponentMin(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  id: ComponentMin(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: ComponentMin(in Vector3i, in Vector3i, out Vector3i)
  nameWithType: Vector3i.ComponentMin(in Vector3i, in Vector3i, out Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.ComponentMin(in OpenTK.Mathematics.Vector3i, in OpenTK.Mathematics.Vector3i, out OpenTK.Mathematics.Vector3i)
  type: Method
  source:
    id: ComponentMin
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 362
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the smallest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: public static void ComponentMin(in Vector3i a, in Vector3i b, out Vector3i result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3i
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector3i
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector3i
      description: The component-wise minimum.
    content.vb: Public Shared Sub ComponentMin(a As Vector3i, b As Vector3i, result As Vector3i)
  overload: OpenTK.Mathematics.Vector3i.ComponentMin*
  nameWithType.vb: Vector3i.ComponentMin(Vector3i, Vector3i, Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i.ComponentMin(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  name.vb: ComponentMin(Vector3i, Vector3i, Vector3i)
- uid: OpenTK.Mathematics.Vector3i.ComponentMax(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  commentId: M:OpenTK.Mathematics.Vector3i.ComponentMax(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  id: ComponentMax(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: ComponentMax(Vector3i, Vector3i)
  nameWithType: Vector3i.ComponentMax(Vector3i, Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.ComponentMax(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  type: Method
  source:
    id: ComponentMax
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 375
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the largest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3i ComponentMax(Vector3i a, Vector3i b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3i
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector3i
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: The component-wise maximum.
    content.vb: >-
      <Pure>

      Public Shared Function ComponentMax(a As Vector3i, b As Vector3i) As Vector3i
  overload: OpenTK.Mathematics.Vector3i.ComponentMax*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3i.ComponentMax(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  commentId: M:OpenTK.Mathematics.Vector3i.ComponentMax(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  id: ComponentMax(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: ComponentMax(in Vector3i, in Vector3i, out Vector3i)
  nameWithType: Vector3i.ComponentMax(in Vector3i, in Vector3i, out Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.ComponentMax(in OpenTK.Mathematics.Vector3i, in OpenTK.Mathematics.Vector3i, out OpenTK.Mathematics.Vector3i)
  type: Method
  source:
    id: ComponentMax
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 391
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the largest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: public static void ComponentMax(in Vector3i a, in Vector3i b, out Vector3i result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3i
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector3i
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector3i
      description: The component-wise maximum.
    content.vb: Public Shared Sub ComponentMax(a As Vector3i, b As Vector3i, result As Vector3i)
  overload: OpenTK.Mathematics.Vector3i.ComponentMax*
  nameWithType.vb: Vector3i.ComponentMax(Vector3i, Vector3i, Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i.ComponentMax(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  name.vb: ComponentMax(Vector3i, Vector3i, Vector3i)
- uid: OpenTK.Mathematics.Vector3i.Clamp(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  commentId: M:OpenTK.Mathematics.Vector3i.Clamp(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  id: Clamp(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Clamp(Vector3i, Vector3i, Vector3i)
  nameWithType: Vector3i.Clamp(Vector3i, Vector3i, Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.Clamp(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  type: Method
  source:
    id: Clamp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 405
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Clamp a vector to the given minimum and maximum vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3i Clamp(Vector3i vec, Vector3i min, Vector3i max)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3i
      description: Input vector.
    - id: min
      type: OpenTK.Mathematics.Vector3i
      description: Minimum vector.
    - id: max
      type: OpenTK.Mathematics.Vector3i
      description: Maximum vector.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: The clamped vector.
    content.vb: >-
      <Pure>

      Public Shared Function Clamp(vec As Vector3i, min As Vector3i, max As Vector3i) As Vector3i
  overload: OpenTK.Mathematics.Vector3i.Clamp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3i.Clamp(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  commentId: M:OpenTK.Mathematics.Vector3i.Clamp(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  id: Clamp(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Clamp(in Vector3i, in Vector3i, in Vector3i, out Vector3i)
  nameWithType: Vector3i.Clamp(in Vector3i, in Vector3i, in Vector3i, out Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.Clamp(in OpenTK.Mathematics.Vector3i, in OpenTK.Mathematics.Vector3i, in OpenTK.Mathematics.Vector3i, out OpenTK.Mathematics.Vector3i)
  type: Method
  source:
    id: Clamp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 422
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Clamp a vector to the given minimum and maximum vectors.
  example: []
  syntax:
    content: public static void Clamp(in Vector3i vec, in Vector3i min, in Vector3i max, out Vector3i result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3i
      description: Input vector.
    - id: min
      type: OpenTK.Mathematics.Vector3i
      description: Minimum vector.
    - id: max
      type: OpenTK.Mathematics.Vector3i
      description: Maximum vector.
    - id: result
      type: OpenTK.Mathematics.Vector3i
      description: The clamped vector.
    content.vb: Public Shared Sub Clamp(vec As Vector3i, min As Vector3i, max As Vector3i, result As Vector3i)
  overload: OpenTK.Mathematics.Vector3i.Clamp*
  nameWithType.vb: Vector3i.Clamp(Vector3i, Vector3i, Vector3i, Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i.Clamp(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  name.vb: Clamp(Vector3i, Vector3i, Vector3i, Vector3i)
- uid: OpenTK.Mathematics.Vector3i.Abs(OpenTK.Mathematics.Vector3i)
  commentId: M:OpenTK.Mathematics.Vector3i.Abs(OpenTK.Mathematics.Vector3i)
  id: Abs(OpenTK.Mathematics.Vector3i)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Abs(Vector3i)
  nameWithType: Vector3i.Abs(Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.Abs(OpenTK.Mathematics.Vector3i)
  type: Method
  source:
    id: Abs
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 434
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Take the component-wise absolute value of a vector.
  example: []
  syntax:
    content: public static Vector3i Abs(Vector3i vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3i
      description: The vector to apply component-wise absolute value to.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: The component-wise absolute value vector.
    content.vb: Public Shared Function Abs(vec As Vector3i) As Vector3i
  overload: OpenTK.Mathematics.Vector3i.Abs*
- uid: OpenTK.Mathematics.Vector3i.Abs(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  commentId: M:OpenTK.Mathematics.Vector3i.Abs(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  id: Abs(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3i@)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Abs(in Vector3i, out Vector3i)
  nameWithType: Vector3i.Abs(in Vector3i, out Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.Abs(in OpenTK.Mathematics.Vector3i, out OpenTK.Mathematics.Vector3i)
  type: Method
  source:
    id: Abs
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 447
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Take the component-wise absolute value of a vector.
  example: []
  syntax:
    content: public static void Abs(in Vector3i vec, out Vector3i result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3i
      description: The vector to apply component-wise absolute value to.
    - id: result
      type: OpenTK.Mathematics.Vector3i
      description: The component-wise absolute value vector.
    content.vb: Public Shared Sub Abs(vec As Vector3i, result As Vector3i)
  overload: OpenTK.Mathematics.Vector3i.Abs*
  nameWithType.vb: Vector3i.Abs(Vector3i, Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i.Abs(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  name.vb: Abs(Vector3i, Vector3i)
- uid: OpenTK.Mathematics.Vector3i.Xy
  commentId: P:OpenTK.Mathematics.Vector3i.Xy
  id: Xy
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Xy
  nameWithType: Vector3i.Xy
  fullName: OpenTK.Mathematics.Vector3i.Xy
  type: Property
  source:
    id: Xy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 457
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> with the X and Y components of this instance.
  example: []
  syntax:
    content: public Vector2i Xy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Xy As Vector2i
  overload: OpenTK.Mathematics.Vector3i.Xy*
- uid: OpenTK.Mathematics.Vector3i.Xz
  commentId: P:OpenTK.Mathematics.Vector3i.Xz
  id: Xz
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Xz
  nameWithType: Vector3i.Xz
  fullName: OpenTK.Mathematics.Vector3i.Xz
  type: Property
  source:
    id: Xz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 471
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> with the X and Z components of this instance.
  example: []
  syntax:
    content: public Vector2i Xz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Xz As Vector2i
  overload: OpenTK.Mathematics.Vector3i.Xz*
- uid: OpenTK.Mathematics.Vector3i.Yx
  commentId: P:OpenTK.Mathematics.Vector3i.Yx
  id: Yx
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Yx
  nameWithType: Vector3i.Yx
  fullName: OpenTK.Mathematics.Vector3i.Yx
  type: Property
  source:
    id: Yx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 485
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> with the Y and X components of this instance.
  example: []
  syntax:
    content: public Vector2i Yx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Yx As Vector2i
  overload: OpenTK.Mathematics.Vector3i.Yx*
- uid: OpenTK.Mathematics.Vector3i.Yz
  commentId: P:OpenTK.Mathematics.Vector3i.Yz
  id: Yz
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Yz
  nameWithType: Vector3i.Yz
  fullName: OpenTK.Mathematics.Vector3i.Yz
  type: Property
  source:
    id: Yz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 499
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> with the Y and Z components of this instance.
  example: []
  syntax:
    content: public Vector2i Yz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Yz As Vector2i
  overload: OpenTK.Mathematics.Vector3i.Yz*
- uid: OpenTK.Mathematics.Vector3i.Zx
  commentId: P:OpenTK.Mathematics.Vector3i.Zx
  id: Zx
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Zx
  nameWithType: Vector3i.Zx
  fullName: OpenTK.Mathematics.Vector3i.Zx
  type: Property
  source:
    id: Zx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 513
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> with the Z and X components of this instance.
  example: []
  syntax:
    content: public Vector2i Zx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Zx As Vector2i
  overload: OpenTK.Mathematics.Vector3i.Zx*
- uid: OpenTK.Mathematics.Vector3i.Zy
  commentId: P:OpenTK.Mathematics.Vector3i.Zy
  id: Zy
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Zy
  nameWithType: Vector3i.Zy
  fullName: OpenTK.Mathematics.Vector3i.Zy
  type: Property
  source:
    id: Zy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 527
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector2i" data-throw-if-not-resolved="false"></xref> with the Z and Y components of this instance.
  example: []
  syntax:
    content: public Vector2i Zy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2i
    content.vb: Public Property Zy As Vector2i
  overload: OpenTK.Mathematics.Vector3i.Zy*
- uid: OpenTK.Mathematics.Vector3i.Xzy
  commentId: P:OpenTK.Mathematics.Vector3i.Xzy
  id: Xzy
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Xzy
  nameWithType: Vector3i.Xzy
  fullName: OpenTK.Mathematics.Vector3i.Xzy
  type: Property
  source:
    id: Xzy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 541
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the X, Z, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3i Xzy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Xzy As Vector3i
  overload: OpenTK.Mathematics.Vector3i.Xzy*
- uid: OpenTK.Mathematics.Vector3i.Yxz
  commentId: P:OpenTK.Mathematics.Vector3i.Yxz
  id: Yxz
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Yxz
  nameWithType: Vector3i.Yxz
  fullName: OpenTK.Mathematics.Vector3i.Yxz
  type: Property
  source:
    id: Yxz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 556
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the Y, X, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3i Yxz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Yxz As Vector3i
  overload: OpenTK.Mathematics.Vector3i.Yxz*
- uid: OpenTK.Mathematics.Vector3i.Yzx
  commentId: P:OpenTK.Mathematics.Vector3i.Yzx
  id: Yzx
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Yzx
  nameWithType: Vector3i.Yzx
  fullName: OpenTK.Mathematics.Vector3i.Yzx
  type: Property
  source:
    id: Yzx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 571
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the Y, Z, and X components of this instance.
  example: []
  syntax:
    content: public Vector3i Yzx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Yzx As Vector3i
  overload: OpenTK.Mathematics.Vector3i.Yzx*
- uid: OpenTK.Mathematics.Vector3i.Zxy
  commentId: P:OpenTK.Mathematics.Vector3i.Zxy
  id: Zxy
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Zxy
  nameWithType: Vector3i.Zxy
  fullName: OpenTK.Mathematics.Vector3i.Zxy
  type: Property
  source:
    id: Zxy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 586
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the Z, X, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3i Zxy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Zxy As Vector3i
  overload: OpenTK.Mathematics.Vector3i.Zxy*
- uid: OpenTK.Mathematics.Vector3i.Zyx
  commentId: P:OpenTK.Mathematics.Vector3i.Zyx
  id: Zyx
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Zyx
  nameWithType: Vector3i.Zyx
  fullName: OpenTK.Mathematics.Vector3i.Zyx
  type: Property
  source:
    id: Zyx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 601
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets a <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> with the Z, Y, and X components of this instance.
  example: []
  syntax:
    content: public Vector3i Zyx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3i
    content.vb: Public Property Zyx As Vector3i
  overload: OpenTK.Mathematics.Vector3i.Zyx*
- uid: OpenTK.Mathematics.Vector3i.ToVector3
  commentId: M:OpenTK.Mathematics.Vector3i.ToVector3
  id: ToVector3
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: ToVector3()
  nameWithType: Vector3i.ToVector3()
  fullName: OpenTK.Mathematics.Vector3i.ToVector3()
  type: Method
  source:
    id: ToVector3
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 617
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets a <xref href="OpenTK.Mathematics.Vector3" data-throw-if-not-resolved="false"></xref> object with the same component values as the <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public readonly Vector3 ToVector3()
    return:
      type: OpenTK.Mathematics.Vector3
      description: The resulting <xref href="OpenTK.Mathematics.Vector3" data-throw-if-not-resolved="false"></xref> instance.
    content.vb: Public Function ToVector3() As Vector3
  overload: OpenTK.Mathematics.Vector3i.ToVector3*
- uid: OpenTK.Mathematics.Vector3i.ToVector3(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3i.ToVector3(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3@)
  id: ToVector3(OpenTK.Mathematics.Vector3i@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: ToVector3(in Vector3i, out Vector3)
  nameWithType: Vector3i.ToVector3(in Vector3i, out Vector3)
  fullName: OpenTK.Mathematics.Vector3i.ToVector3(in OpenTK.Mathematics.Vector3i, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: ToVector3
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 627
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets a <xref href="OpenTK.Mathematics.Vector3" data-throw-if-not-resolved="false"></xref> object with the same component values as the <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public static void ToVector3(in Vector3i input, out Vector3 result)
    parameters:
    - id: input
      type: OpenTK.Mathematics.Vector3i
      description: The given <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> to convert.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: The resulting <xref href="OpenTK.Mathematics.Vector3" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Sub ToVector3(input As Vector3i, result As Vector3)
  overload: OpenTK.Mathematics.Vector3i.ToVector3*
  nameWithType.vb: Vector3i.ToVector3(Vector3i, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3i.ToVector3(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3)
  name.vb: ToVector3(Vector3i, Vector3)
- uid: OpenTK.Mathematics.Vector3i.op_Addition(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  commentId: M:OpenTK.Mathematics.Vector3i.op_Addition(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  id: op_Addition(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: operator +(Vector3i, Vector3i)
  nameWithType: Vector3i.operator +(Vector3i, Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.operator +(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  type: Operator
  source:
    id: op_Addition
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 640
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3i operator +(Vector3i left, Vector3i right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3i
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector3i
      description: The second instance.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator +(left As Vector3i, right As Vector3i) As Vector3i
  overload: OpenTK.Mathematics.Vector3i.op_Addition*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3i.+(Vector3i, Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i.+(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  name.vb: +(Vector3i, Vector3i)
- uid: OpenTK.Mathematics.Vector3i.op_Subtraction(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  commentId: M:OpenTK.Mathematics.Vector3i.op_Subtraction(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  id: op_Subtraction(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: operator -(Vector3i, Vector3i)
  nameWithType: Vector3i.operator -(Vector3i, Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.operator -(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  type: Operator
  source:
    id: op_Subtraction
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 655
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtracts two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3i operator -(Vector3i left, Vector3i right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3i
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector3i
      description: The second instance.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator -(left As Vector3i, right As Vector3i) As Vector3i
  overload: OpenTK.Mathematics.Vector3i.op_Subtraction*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3i.-(Vector3i, Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i.-(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  name.vb: -(Vector3i, Vector3i)
- uid: OpenTK.Mathematics.Vector3i.op_UnaryNegation(OpenTK.Mathematics.Vector3i)
  commentId: M:OpenTK.Mathematics.Vector3i.op_UnaryNegation(OpenTK.Mathematics.Vector3i)
  id: op_UnaryNegation(OpenTK.Mathematics.Vector3i)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: operator -(Vector3i)
  nameWithType: Vector3i.operator -(Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.operator -(OpenTK.Mathematics.Vector3i)
  type: Operator
  source:
    id: op_UnaryNegation
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 669
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Negates an instance.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3i operator -(Vector3i vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3i
      description: The instance.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator -(vec As Vector3i) As Vector3i
  overload: OpenTK.Mathematics.Vector3i.op_UnaryNegation*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3i.-(Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i.-(OpenTK.Mathematics.Vector3i)
  name.vb: -(Vector3i)
- uid: OpenTK.Mathematics.Vector3i.op_Multiply(OpenTK.Mathematics.Vector3i,System.Int32)
  commentId: M:OpenTK.Mathematics.Vector3i.op_Multiply(OpenTK.Mathematics.Vector3i,System.Int32)
  id: op_Multiply(OpenTK.Mathematics.Vector3i,System.Int32)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: operator *(Vector3i, int)
  nameWithType: Vector3i.operator *(Vector3i, int)
  fullName: OpenTK.Mathematics.Vector3i.operator *(OpenTK.Mathematics.Vector3i, int)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 684
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies an instance by an integer scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3i operator *(Vector3i vec, int scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3i
      description: The instance.
    - id: scale
      type: System.Int32
      description: The scalar.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator *(vec As Vector3i, scale As Integer) As Vector3i
  overload: OpenTK.Mathematics.Vector3i.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3i.*(Vector3i, Integer)
  fullName.vb: OpenTK.Mathematics.Vector3i.*(OpenTK.Mathematics.Vector3i, Integer)
  name.vb: '*(Vector3i, Integer)'
- uid: OpenTK.Mathematics.Vector3i.op_Multiply(System.Int32,OpenTK.Mathematics.Vector3i)
  commentId: M:OpenTK.Mathematics.Vector3i.op_Multiply(System.Int32,OpenTK.Mathematics.Vector3i)
  id: op_Multiply(System.Int32,OpenTK.Mathematics.Vector3i)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: operator *(int, Vector3i)
  nameWithType: Vector3i.operator *(int, Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.operator *(int, OpenTK.Mathematics.Vector3i)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 699
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies an instance by an integer scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3i operator *(int scale, Vector3i vec)
    parameters:
    - id: scale
      type: System.Int32
      description: The scalar.
    - id: vec
      type: OpenTK.Mathematics.Vector3i
      description: The instance.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator *(scale As Integer, vec As Vector3i) As Vector3i
  overload: OpenTK.Mathematics.Vector3i.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3i.*(Integer, Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i.*(Integer, OpenTK.Mathematics.Vector3i)
  name.vb: '*(Integer, Vector3i)'
- uid: OpenTK.Mathematics.Vector3i.op_Multiply(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  commentId: M:OpenTK.Mathematics.Vector3i.op_Multiply(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  id: op_Multiply(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: operator *(Vector3i, Vector3i)
  nameWithType: Vector3i.operator *(Vector3i, Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.operator *(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 714
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Component-wise multiplication between the specified instance by a scale vector.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3i operator *(Vector3i vec, Vector3i scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3i
      description: Right operand.
    - id: scale
      type: OpenTK.Mathematics.Vector3i
      description: Left operand.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: Result of multiplication.
    content.vb: >-
      <Pure>

      Public Shared Operator *(vec As Vector3i, scale As Vector3i) As Vector3i
  overload: OpenTK.Mathematics.Vector3i.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3i.*(Vector3i, Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i.*(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  name.vb: '*(Vector3i, Vector3i)'
- uid: OpenTK.Mathematics.Vector3i.op_Division(OpenTK.Mathematics.Vector3i,System.Int32)
  commentId: M:OpenTK.Mathematics.Vector3i.op_Division(OpenTK.Mathematics.Vector3i,System.Int32)
  id: op_Division(OpenTK.Mathematics.Vector3i,System.Int32)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: operator /(Vector3i, int)
  nameWithType: Vector3i.operator /(Vector3i, int)
  fullName: OpenTK.Mathematics.Vector3i.operator /(OpenTK.Mathematics.Vector3i, int)
  type: Operator
  source:
    id: op_Division
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 729
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides the instance by a scalar using integer division, floor(a/b).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3i operator /(Vector3i vec, int scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3i
      description: The instance.
    - id: scale
      type: System.Int32
      description: The scalar.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator /(vec As Vector3i, scale As Integer) As Vector3i
  overload: OpenTK.Mathematics.Vector3i.op_Division*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3i./(Vector3i, Integer)
  fullName.vb: OpenTK.Mathematics.Vector3i./(OpenTK.Mathematics.Vector3i, Integer)
  name.vb: /(Vector3i, Integer)
- uid: OpenTK.Mathematics.Vector3i.op_Division(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  commentId: M:OpenTK.Mathematics.Vector3i.op_Division(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  id: op_Division(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: operator /(Vector3i, Vector3i)
  nameWithType: Vector3i.operator /(Vector3i, Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.operator /(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  type: Operator
  source:
    id: op_Division
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 744
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Component-wise division between the specified instance by a scale vector.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3i operator /(Vector3i vec, Vector3i scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3i
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector3i
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: Result of the division.
    content.vb: >-
      <Pure>

      Public Shared Operator /(vec As Vector3i, scale As Vector3i) As Vector3i
  overload: OpenTK.Mathematics.Vector3i.op_Division*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3i./(Vector3i, Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i./(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  name.vb: /(Vector3i, Vector3i)
- uid: OpenTK.Mathematics.Vector3i.op_Equality(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  commentId: M:OpenTK.Mathematics.Vector3i.op_Equality(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  id: op_Equality(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: operator ==(Vector3i, Vector3i)
  nameWithType: Vector3i.operator ==(Vector3i, Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.operator ==(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  type: Operator
  source:
    id: op_Equality
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 759
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compares two instances for equality.
  example: []
  syntax:
    content: public static bool operator ==(Vector3i left, Vector3i right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3i
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector3i
      description: The second instance.
    return:
      type: System.Boolean
      description: True, if left equals right; false otherwise.
    content.vb: Public Shared Operator =(left As Vector3i, right As Vector3i) As Boolean
  overload: OpenTK.Mathematics.Vector3i.op_Equality*
  nameWithType.vb: Vector3i.=(Vector3i, Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i.=(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  name.vb: =(Vector3i, Vector3i)
- uid: OpenTK.Mathematics.Vector3i.op_Inequality(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  commentId: M:OpenTK.Mathematics.Vector3i.op_Inequality(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  id: op_Inequality(OpenTK.Mathematics.Vector3i,OpenTK.Mathematics.Vector3i)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: operator !=(Vector3i, Vector3i)
  nameWithType: Vector3i.operator !=(Vector3i, Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.operator !=(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  type: Operator
  source:
    id: op_Inequality
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 770
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compares two instances for inequality.
  example: []
  syntax:
    content: public static bool operator !=(Vector3i left, Vector3i right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3i
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector3i
      description: The second instance.
    return:
      type: System.Boolean
      description: True, if left does not equal right; false otherwise.
    content.vb: Public Shared Operator <>(left As Vector3i, right As Vector3i) As Boolean
  overload: OpenTK.Mathematics.Vector3i.op_Inequality*
  nameWithType.vb: Vector3i.<>(Vector3i, Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i.<>(OpenTK.Mathematics.Vector3i, OpenTK.Mathematics.Vector3i)
  name.vb: <>(Vector3i, Vector3i)
- uid: OpenTK.Mathematics.Vector3i.op_Implicit(OpenTK.Mathematics.Vector3i)~OpenTK.Mathematics.Vector3
  commentId: M:OpenTK.Mathematics.Vector3i.op_Implicit(OpenTK.Mathematics.Vector3i)~OpenTK.Mathematics.Vector3
  id: op_Implicit(OpenTK.Mathematics.Vector3i)~OpenTK.Mathematics.Vector3
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: implicit operator Vector3(Vector3i)
  nameWithType: Vector3i.implicit operator Vector3(Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.implicit operator OpenTK.Mathematics.Vector3(OpenTK.Mathematics.Vector3i)
  type: Operator
  source:
    id: op_Implicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 780
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector3i to OpenTK.Vector3.
  example: []
  syntax:
    content: >-
      [Pure]

      public static implicit operator Vector3(Vector3i vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3i
      description: The Vector3i to convert.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The resulting Vector3.
    content.vb: >-
      <Pure>

      Public Shared Widening Operator CType(vec As Vector3i) As Vector3
  overload: OpenTK.Mathematics.Vector3i.op_Implicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3i.CType(Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i.CType(OpenTK.Mathematics.Vector3i)
  name.vb: CType(Vector3i)
- uid: OpenTK.Mathematics.Vector3i.op_Implicit(OpenTK.Mathematics.Vector3i)~OpenTK.Mathematics.Vector3d
  commentId: M:OpenTK.Mathematics.Vector3i.op_Implicit(OpenTK.Mathematics.Vector3i)~OpenTK.Mathematics.Vector3d
  id: op_Implicit(OpenTK.Mathematics.Vector3i)~OpenTK.Mathematics.Vector3d
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: implicit operator Vector3d(Vector3i)
  nameWithType: Vector3i.implicit operator Vector3d(Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.implicit operator OpenTK.Mathematics.Vector3d(OpenTK.Mathematics.Vector3i)
  type: Operator
  source:
    id: op_Implicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 791
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector3i to OpenTK.Vector3d.
  example: []
  syntax:
    content: >-
      [Pure]

      public static implicit operator Vector3d(Vector3i vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3i
      description: The Vector3i to convert.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The resulting Vector3d.
    content.vb: >-
      <Pure>

      Public Shared Widening Operator CType(vec As Vector3i) As Vector3d
  overload: OpenTK.Mathematics.Vector3i.op_Implicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3i.CType(Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i.CType(OpenTK.Mathematics.Vector3i)
  name.vb: CType(Vector3i)
- uid: OpenTK.Mathematics.Vector3i.op_Explicit(OpenTK.Mathematics.Vector3i)~OpenTK.Mathematics.Vector3h
  commentId: M:OpenTK.Mathematics.Vector3i.op_Explicit(OpenTK.Mathematics.Vector3i)~OpenTK.Mathematics.Vector3h
  id: op_Explicit(OpenTK.Mathematics.Vector3i)~OpenTK.Mathematics.Vector3h
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: explicit operator Vector3h(Vector3i)
  nameWithType: Vector3i.explicit operator Vector3h(Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.explicit operator OpenTK.Mathematics.Vector3h(OpenTK.Mathematics.Vector3i)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 802
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector3i to OpenTK.Vector3h.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator Vector3h(Vector3i vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3i
      description: The Vector3i to convert.
    return:
      type: OpenTK.Mathematics.Vector3h
      description: The resulting Vector3h.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(vec As Vector3i) As Vector3h
  overload: OpenTK.Mathematics.Vector3i.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3i.CType(Vector3i)
  fullName.vb: OpenTK.Mathematics.Vector3i.CType(OpenTK.Mathematics.Vector3i)
  name.vb: CType(Vector3i)
- uid: OpenTK.Mathematics.Vector3i.op_Implicit(System.ValueTuple{System.Int32,System.Int32,System.Int32})~OpenTK.Mathematics.Vector3i
  commentId: M:OpenTK.Mathematics.Vector3i.op_Implicit(System.ValueTuple{System.Int32,System.Int32,System.Int32})~OpenTK.Mathematics.Vector3i
  id: op_Implicit(System.ValueTuple{System.Int32,System.Int32,System.Int32})~OpenTK.Mathematics.Vector3i
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: implicit operator Vector3i((int X, int Y, int Z))
  nameWithType: Vector3i.implicit operator Vector3i((int X, int Y, int Z))
  fullName: OpenTK.Mathematics.Vector3i.implicit operator OpenTK.Mathematics.Vector3i((int X, int Y, int Z))
  type: Operator
  source:
    id: op_Implicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 814
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> struct using a tuple containing the component

    values.
  example: []
  syntax:
    content: >-
      [Pure]

      public static implicit operator Vector3i((int X, int Y, int Z) values)
    parameters:
    - id: values
      type: System.ValueTuple{System.Int32,System.Int32,System.Int32}
      description: A tuple containing the component values.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: A new instance of the <xref href="OpenTK.Mathematics.Vector3i" data-throw-if-not-resolved="false"></xref> struct with the given component values.
    content.vb: >-
      <Pure>

      Public Shared Widening Operator CType(values As (X As Integer, Y As Integer, Z As Integer)) As Vector3i
  overload: OpenTK.Mathematics.Vector3i.op_Implicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3i.CType((X As Integer, Y As Integer, Z As Integer))
  fullName.vb: OpenTK.Mathematics.Vector3i.CType((X As Integer, Y As Integer, Z As Integer))
  name.vb: CType((X As Integer, Y As Integer, Z As Integer))
- uid: OpenTK.Mathematics.Vector3i.ToString
  commentId: M:OpenTK.Mathematics.Vector3i.ToString
  id: ToString
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector3i.ToString()
  fullName: OpenTK.Mathematics.Vector3i.ToString()
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 821
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: OpenTK.Mathematics.Vector3i.ToString*
- uid: OpenTK.Mathematics.Vector3i.ToString(System.String)
  commentId: M:OpenTK.Mathematics.Vector3i.ToString(System.String)
  id: ToString(System.String)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Vector3i.ToString(string)
  fullName: OpenTK.Mathematics.Vector3i.ToString(string)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 827
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public string ToString(string format)
    parameters:
    - id: format
      type: System.String
      description: >-
        The format to use.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to use the default format defined for the type of the <xref href="System.IFormattable" data-throw-if-not-resolved="false"></xref> implementation.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(format As String) As String
  overload: OpenTK.Mathematics.Vector3i.ToString*
  nameWithType.vb: Vector3i.ToString(String)
  fullName.vb: OpenTK.Mathematics.Vector3i.ToString(String)
  name.vb: ToString(String)
- uid: OpenTK.Mathematics.Vector3i.ToString(System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Vector3i.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: Vector3i.ToString(IFormatProvider)
  fullName: OpenTK.Mathematics.Vector3i.ToString(System.IFormatProvider)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 833
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public string ToString(IFormatProvider formatProvider)
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
      description: >-
        The provider to use to format the value.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Vector3i.ToString*
- uid: OpenTK.Mathematics.Vector3i.ToString(System.String,System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Vector3i.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: ToString(string, IFormatProvider)
  nameWithType: Vector3i.ToString(string, IFormatProvider)
  fullName: OpenTK.Mathematics.Vector3i.ToString(string, System.IFormatProvider)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 839
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public readonly string ToString(string format, IFormatProvider formatProvider)
    parameters:
    - id: format
      type: System.String
      description: >-
        The format to use.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to use the default format defined for the type of the <xref href="System.IFormattable" data-throw-if-not-resolved="false"></xref> implementation.
    - id: formatProvider
      type: System.IFormatProvider
      description: >-
        The provider to use to format the value.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Vector3i.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: Vector3i.ToString(String, IFormatProvider)
  fullName.vb: OpenTK.Mathematics.Vector3i.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
- uid: OpenTK.Mathematics.Vector3i.Equals(System.Object)
  commentId: M:OpenTK.Mathematics.Vector3i.Equals(System.Object)
  id: Equals(System.Object)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Vector3i.Equals(object)
  fullName: OpenTK.Mathematics.Vector3i.Equals(object)
  type: Method
  source:
    id: Equals
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 850
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: OpenTK.Mathematics.Vector3i.Equals*
  nameWithType.vb: Vector3i.Equals(Object)
  fullName.vb: OpenTK.Mathematics.Vector3i.Equals(Object)
  name.vb: Equals(Object)
- uid: OpenTK.Mathematics.Vector3i.Equals(OpenTK.Mathematics.Vector3i)
  commentId: M:OpenTK.Mathematics.Vector3i.Equals(OpenTK.Mathematics.Vector3i)
  id: Equals(OpenTK.Mathematics.Vector3i)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Equals(Vector3i)
  nameWithType: Vector3i.Equals(Vector3i)
  fullName: OpenTK.Mathematics.Vector3i.Equals(OpenTK.Mathematics.Vector3i)
  type: Method
  source:
    id: Equals
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 856
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public readonly bool Equals(Vector3i other)
    parameters:
    - id: other
      type: OpenTK.Mathematics.Vector3i
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As Vector3i) As Boolean
  overload: OpenTK.Mathematics.Vector3i.Equals*
  implements:
  - System.IEquatable{OpenTK.Mathematics.Vector3i}.Equals(OpenTK.Mathematics.Vector3i)
- uid: OpenTK.Mathematics.Vector3i.GetHashCode
  commentId: M:OpenTK.Mathematics.Vector3i.GetHashCode
  id: GetHashCode
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Vector3i.GetHashCode()
  fullName: OpenTK.Mathematics.Vector3i.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 864
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override readonly int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: OpenTK.Mathematics.Vector3i.GetHashCode*
- uid: OpenTK.Mathematics.Vector3i.Deconstruct(System.Int32@,System.Int32@,System.Int32@)
  commentId: M:OpenTK.Mathematics.Vector3i.Deconstruct(System.Int32@,System.Int32@,System.Int32@)
  id: Deconstruct(System.Int32@,System.Int32@,System.Int32@)
  parent: OpenTK.Mathematics.Vector3i
  langs:
  - csharp
  - vb
  name: Deconstruct(out int, out int, out int)
  nameWithType: Vector3i.Deconstruct(out int, out int, out int)
  fullName: OpenTK.Mathematics.Vector3i.Deconstruct(out int, out int, out int)
  type: Method
  source:
    id: Deconstruct
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3i.cs
    startLine: 875
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Deconstructs the vector into it's individual components.
  example: []
  syntax:
    content: >-
      [Pure]

      public readonly void Deconstruct(out int x, out int y, out int z)
    parameters:
    - id: x
      type: System.Int32
      description: The X component of the vector.
    - id: y
      type: System.Int32
      description: The Y component of the vector.
    - id: z
      type: System.Int32
      description: The Z component of the vector.
    content.vb: >-
      <Pure>

      Public Sub Deconstruct(x As Integer, y As Integer, z As Integer)
  overload: OpenTK.Mathematics.Vector3i.Deconstruct*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3i.Deconstruct(Integer, Integer, Integer)
  fullName.vb: OpenTK.Mathematics.Vector3i.Deconstruct(Integer, Integer, Integer)
  name.vb: Deconstruct(Integer, Integer, Integer)
references:
- uid: OpenTK.Mathematics
  commentId: N:OpenTK.Mathematics
  href: OpenTK.html
  name: OpenTK.Mathematics
  nameWithType: OpenTK.Mathematics
  fullName: OpenTK.Mathematics
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
- uid: System.IEquatable{OpenTK.Mathematics.Vector3i}
  commentId: T:System.IEquatable{OpenTK.Mathematics.Vector3i}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Vector3i>
  nameWithType: IEquatable<Vector3i>
  fullName: System.IEquatable<OpenTK.Mathematics.Vector3i>
  nameWithType.vb: IEquatable(Of Vector3i)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Vector3i)
  name.vb: IEquatable(Of Vector3i)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: OpenTK.Mathematics.Vector3i
    name: Vector3i
    href: OpenTK.Mathematics.Vector3i.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Mathematics.Vector3i
    name: Vector3i
    href: OpenTK.Mathematics.Vector3i.html
  - name: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: OpenTK.Mathematics.Vector3i
  commentId: T:OpenTK.Mathematics.Vector3i
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector3i.html
  name: Vector3i
  nameWithType: Vector3i
  fullName: OpenTK.Mathematics.Vector3i
- uid: OpenTK.Mathematics.Vector3i.#ctor*
  commentId: Overload:OpenTK.Mathematics.Vector3i.#ctor
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i__ctor_System_Int32_
  name: Vector3i
  nameWithType: Vector3i.Vector3i
  fullName: OpenTK.Mathematics.Vector3i.Vector3i
  nameWithType.vb: Vector3i.New
  fullName.vb: OpenTK.Mathematics.Vector3i.New
  name.vb: New
- uid: OpenTK.Mathematics.Vector2i
  commentId: T:OpenTK.Mathematics.Vector2i
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector2i.html
  name: Vector2i
  nameWithType: Vector2i
  fullName: OpenTK.Mathematics.Vector2i
- uid: System.IndexOutOfRangeException
  commentId: T:System.IndexOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.indexoutofrangeexception
  name: IndexOutOfRangeException
  nameWithType: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
- uid: OpenTK.Mathematics.Vector3i.Item*
  commentId: Overload:OpenTK.Mathematics.Vector3i.Item
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_Item_System_Int32_
  name: this
  nameWithType: Vector3i.this
  fullName: OpenTK.Mathematics.Vector3i.this
  nameWithType.vb: Vector3i.this[]
  fullName.vb: OpenTK.Mathematics.Vector3i.this[]
  name.vb: this[]
- uid: OpenTK.Mathematics.Vector3i.ManhattanLength*
  commentId: Overload:OpenTK.Mathematics.Vector3i.ManhattanLength
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_ManhattanLength
  name: ManhattanLength
  nameWithType: Vector3i.ManhattanLength
  fullName: OpenTK.Mathematics.Vector3i.ManhattanLength
- uid: OpenTK.Mathematics.Vector3i.EuclideanLengthSquared*
  commentId: Overload:OpenTK.Mathematics.Vector3i.EuclideanLengthSquared
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_EuclideanLengthSquared
  name: EuclideanLengthSquared
  nameWithType: Vector3i.EuclideanLengthSquared
  fullName: OpenTK.Mathematics.Vector3i.EuclideanLengthSquared
- uid: OpenTK.Mathematics.Vector3i.EuclideanLength*
  commentId: Overload:OpenTK.Mathematics.Vector3i.EuclideanLength
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_EuclideanLength
  name: EuclideanLength
  nameWithType: Vector3i.EuclideanLength
  fullName: OpenTK.Mathematics.Vector3i.EuclideanLength
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: OpenTK.Mathematics.Vector3i.Abs*
  commentId: Overload:OpenTK.Mathematics.Vector3i.Abs
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_Abs
  name: Abs
  nameWithType: Vector3i.Abs
  fullName: OpenTK.Mathematics.Vector3i.Abs
- uid: OpenTK.Mathematics.Vector3i.Add*
  commentId: Overload:OpenTK.Mathematics.Vector3i.Add
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_Add_OpenTK_Mathematics_Vector3i_OpenTK_Mathematics_Vector3i_
  name: Add
  nameWithType: Vector3i.Add
  fullName: OpenTK.Mathematics.Vector3i.Add
- uid: OpenTK.Mathematics.Vector3i.Subtract*
  commentId: Overload:OpenTK.Mathematics.Vector3i.Subtract
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_Subtract_OpenTK_Mathematics_Vector3i_OpenTK_Mathematics_Vector3i_
  name: Subtract
  nameWithType: Vector3i.Subtract
  fullName: OpenTK.Mathematics.Vector3i.Subtract
- uid: OpenTK.Mathematics.Vector3i.Multiply*
  commentId: Overload:OpenTK.Mathematics.Vector3i.Multiply
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_Multiply_OpenTK_Mathematics_Vector3i_System_Int32_
  name: Multiply
  nameWithType: Vector3i.Multiply
  fullName: OpenTK.Mathematics.Vector3i.Multiply
- uid: OpenTK.Mathematics.Vector3i.Divide*
  commentId: Overload:OpenTK.Mathematics.Vector3i.Divide
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_Divide_OpenTK_Mathematics_Vector3i_System_Int32_
  name: Divide
  nameWithType: Vector3i.Divide
  fullName: OpenTK.Mathematics.Vector3i.Divide
- uid: OpenTK.Mathematics.Vector3i.ComponentMin*
  commentId: Overload:OpenTK.Mathematics.Vector3i.ComponentMin
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_ComponentMin_OpenTK_Mathematics_Vector3i_OpenTK_Mathematics_Vector3i_
  name: ComponentMin
  nameWithType: Vector3i.ComponentMin
  fullName: OpenTK.Mathematics.Vector3i.ComponentMin
- uid: OpenTK.Mathematics.Vector3i.ComponentMax*
  commentId: Overload:OpenTK.Mathematics.Vector3i.ComponentMax
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_ComponentMax_OpenTK_Mathematics_Vector3i_OpenTK_Mathematics_Vector3i_
  name: ComponentMax
  nameWithType: Vector3i.ComponentMax
  fullName: OpenTK.Mathematics.Vector3i.ComponentMax
- uid: OpenTK.Mathematics.Vector3i.Clamp*
  commentId: Overload:OpenTK.Mathematics.Vector3i.Clamp
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_Clamp_OpenTK_Mathematics_Vector3i_OpenTK_Mathematics_Vector3i_OpenTK_Mathematics_Vector3i_
  name: Clamp
  nameWithType: Vector3i.Clamp
  fullName: OpenTK.Mathematics.Vector3i.Clamp
- uid: OpenTK.Mathematics.Vector3i.Xy*
  commentId: Overload:OpenTK.Mathematics.Vector3i.Xy
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_Xy
  name: Xy
  nameWithType: Vector3i.Xy
  fullName: OpenTK.Mathematics.Vector3i.Xy
- uid: OpenTK.Mathematics.Vector3i.Xz*
  commentId: Overload:OpenTK.Mathematics.Vector3i.Xz
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_Xz
  name: Xz
  nameWithType: Vector3i.Xz
  fullName: OpenTK.Mathematics.Vector3i.Xz
- uid: OpenTK.Mathematics.Vector3i.Yx*
  commentId: Overload:OpenTK.Mathematics.Vector3i.Yx
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_Yx
  name: Yx
  nameWithType: Vector3i.Yx
  fullName: OpenTK.Mathematics.Vector3i.Yx
- uid: OpenTK.Mathematics.Vector3i.Yz*
  commentId: Overload:OpenTK.Mathematics.Vector3i.Yz
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_Yz
  name: Yz
  nameWithType: Vector3i.Yz
  fullName: OpenTK.Mathematics.Vector3i.Yz
- uid: OpenTK.Mathematics.Vector3i.Zx*
  commentId: Overload:OpenTK.Mathematics.Vector3i.Zx
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_Zx
  name: Zx
  nameWithType: Vector3i.Zx
  fullName: OpenTK.Mathematics.Vector3i.Zx
- uid: OpenTK.Mathematics.Vector3i.Zy*
  commentId: Overload:OpenTK.Mathematics.Vector3i.Zy
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_Zy
  name: Zy
  nameWithType: Vector3i.Zy
  fullName: OpenTK.Mathematics.Vector3i.Zy
- uid: OpenTK.Mathematics.Vector3i.Xzy*
  commentId: Overload:OpenTK.Mathematics.Vector3i.Xzy
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_Xzy
  name: Xzy
  nameWithType: Vector3i.Xzy
  fullName: OpenTK.Mathematics.Vector3i.Xzy
- uid: OpenTK.Mathematics.Vector3i.Yxz*
  commentId: Overload:OpenTK.Mathematics.Vector3i.Yxz
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_Yxz
  name: Yxz
  nameWithType: Vector3i.Yxz
  fullName: OpenTK.Mathematics.Vector3i.Yxz
- uid: OpenTK.Mathematics.Vector3i.Yzx*
  commentId: Overload:OpenTK.Mathematics.Vector3i.Yzx
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_Yzx
  name: Yzx
  nameWithType: Vector3i.Yzx
  fullName: OpenTK.Mathematics.Vector3i.Yzx
- uid: OpenTK.Mathematics.Vector3i.Zxy*
  commentId: Overload:OpenTK.Mathematics.Vector3i.Zxy
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_Zxy
  name: Zxy
  nameWithType: Vector3i.Zxy
  fullName: OpenTK.Mathematics.Vector3i.Zxy
- uid: OpenTK.Mathematics.Vector3i.Zyx*
  commentId: Overload:OpenTK.Mathematics.Vector3i.Zyx
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_Zyx
  name: Zyx
  nameWithType: Vector3i.Zyx
  fullName: OpenTK.Mathematics.Vector3i.Zyx
- uid: OpenTK.Mathematics.Vector3
  commentId: T:OpenTK.Mathematics.Vector3
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: OpenTK.Mathematics.Vector3
- uid: OpenTK.Mathematics.Vector3i.ToVector3*
  commentId: Overload:OpenTK.Mathematics.Vector3i.ToVector3
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_ToVector3
  name: ToVector3
  nameWithType: Vector3i.ToVector3
  fullName: OpenTK.Mathematics.Vector3i.ToVector3
- uid: OpenTK.Mathematics.Vector3i.op_Addition*
  commentId: Overload:OpenTK.Mathematics.Vector3i.op_Addition
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_op_Addition_OpenTK_Mathematics_Vector3i_OpenTK_Mathematics_Vector3i_
  name: operator +
  nameWithType: Vector3i.operator +
  fullName: OpenTK.Mathematics.Vector3i.operator +
  nameWithType.vb: Vector3i.+
  fullName.vb: OpenTK.Mathematics.Vector3i.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3i.op_Addition*
    name: +
    href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_op_Addition_OpenTK_Mathematics_Vector3i_OpenTK_Mathematics_Vector3i_
- uid: OpenTK.Mathematics.Vector3i.op_Subtraction*
  commentId: Overload:OpenTK.Mathematics.Vector3i.op_Subtraction
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_op_Subtraction_OpenTK_Mathematics_Vector3i_OpenTK_Mathematics_Vector3i_
  name: operator -
  nameWithType: Vector3i.operator -
  fullName: OpenTK.Mathematics.Vector3i.operator -
  nameWithType.vb: Vector3i.-
  fullName.vb: OpenTK.Mathematics.Vector3i.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3i.op_Subtraction*
    name: '-'
    href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_op_Subtraction_OpenTK_Mathematics_Vector3i_OpenTK_Mathematics_Vector3i_
- uid: OpenTK.Mathematics.Vector3i.op_UnaryNegation*
  commentId: Overload:OpenTK.Mathematics.Vector3i.op_UnaryNegation
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_op_UnaryNegation_OpenTK_Mathematics_Vector3i_
  name: operator -
  nameWithType: Vector3i.operator -
  fullName: OpenTK.Mathematics.Vector3i.operator -
  nameWithType.vb: Vector3i.-
  fullName.vb: OpenTK.Mathematics.Vector3i.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3i.op_UnaryNegation*
    name: '-'
    href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_op_UnaryNegation_OpenTK_Mathematics_Vector3i_
- uid: OpenTK.Mathematics.Vector3i.op_Multiply*
  commentId: Overload:OpenTK.Mathematics.Vector3i.op_Multiply
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_op_Multiply_OpenTK_Mathematics_Vector3i_System_Int32_
  name: operator *
  nameWithType: Vector3i.operator *
  fullName: OpenTK.Mathematics.Vector3i.operator *
  nameWithType.vb: Vector3i.*
  fullName.vb: OpenTK.Mathematics.Vector3i.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3i.op_Multiply*
    name: '*'
    href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_op_Multiply_OpenTK_Mathematics_Vector3i_System_Int32_
- uid: OpenTK.Mathematics.Vector3i.op_Division*
  commentId: Overload:OpenTK.Mathematics.Vector3i.op_Division
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_op_Division_OpenTK_Mathematics_Vector3i_System_Int32_
  name: operator /
  nameWithType: Vector3i.operator /
  fullName: OpenTK.Mathematics.Vector3i.operator /
  nameWithType.vb: Vector3i./
  fullName.vb: OpenTK.Mathematics.Vector3i./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3i.op_Division*
    name: /
    href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_op_Division_OpenTK_Mathematics_Vector3i_System_Int32_
- uid: OpenTK.Mathematics.Vector3i.op_Equality*
  commentId: Overload:OpenTK.Mathematics.Vector3i.op_Equality
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_op_Equality_OpenTK_Mathematics_Vector3i_OpenTK_Mathematics_Vector3i_
  name: operator ==
  nameWithType: Vector3i.operator ==
  fullName: OpenTK.Mathematics.Vector3i.operator ==
  nameWithType.vb: Vector3i.=
  fullName.vb: OpenTK.Mathematics.Vector3i.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3i.op_Equality*
    name: ==
    href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_op_Equality_OpenTK_Mathematics_Vector3i_OpenTK_Mathematics_Vector3i_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenTK.Mathematics.Vector3i.op_Inequality*
  commentId: Overload:OpenTK.Mathematics.Vector3i.op_Inequality
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_op_Inequality_OpenTK_Mathematics_Vector3i_OpenTK_Mathematics_Vector3i_
  name: operator !=
  nameWithType: Vector3i.operator !=
  fullName: OpenTK.Mathematics.Vector3i.operator !=
  nameWithType.vb: Vector3i.<>
  fullName.vb: OpenTK.Mathematics.Vector3i.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3i.op_Inequality*
    name: '!='
    href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_op_Inequality_OpenTK_Mathematics_Vector3i_OpenTK_Mathematics_Vector3i_
- uid: OpenTK.Mathematics.Vector3i.op_Implicit*
  commentId: Overload:OpenTK.Mathematics.Vector3i.op_Implicit
  name: implicit operator
  nameWithType: Vector3i.implicit operator
  fullName: OpenTK.Mathematics.Vector3i.implicit operator
  nameWithType.vb: Vector3i.CType
  fullName.vb: OpenTK.Mathematics.Vector3i.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: OpenTK.Mathematics.Vector3d
  commentId: T:OpenTK.Mathematics.Vector3d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector3d.html
  name: Vector3d
  nameWithType: Vector3d
  fullName: OpenTK.Mathematics.Vector3d
- uid: OpenTK.Mathematics.Vector3i.op_Explicit*
  commentId: Overload:OpenTK.Mathematics.Vector3i.op_Explicit
  name: explicit operator
  nameWithType: Vector3i.explicit operator
  fullName: OpenTK.Mathematics.Vector3i.explicit operator
  nameWithType.vb: Vector3i.CType
  fullName.vb: OpenTK.Mathematics.Vector3i.CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: OpenTK.Mathematics.Vector3h
  commentId: T:OpenTK.Mathematics.Vector3h
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector3h.html
  name: Vector3h
  nameWithType: Vector3h
  fullName: OpenTK.Mathematics.Vector3h
- uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}
  commentId: T:System.ValueTuple{System.Int32,System.Int32,System.Int32}
  parent: System
  definition: System.ValueTuple`3
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: (int X, int Y, int Z)
  nameWithType: (int X, int Y, int Z)
  fullName: (int X, int Y, int Z)
  nameWithType.vb: (X As Integer, Y As Integer, Z As Integer)
  fullName.vb: (X As Integer, Y As Integer, Z As Integer)
  name.vb: (X As Integer, Y As Integer, Z As Integer)
  spec.csharp:
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.X
    name: X
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.x
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.Y
    name: Y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.y
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.Z
    name: Z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.z
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.X
    name: X
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.x
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.Y
    name: Y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.y
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.Z
    name: Z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32,system.int32-.z
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.ValueTuple`3
  commentId: T:System.ValueTuple`3
  name: (T1, T2, T3)
  nameWithType: (T1, T2, T3)
  fullName: (T1, T2, T3)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Vector3i.ToString*
  commentId: Overload:OpenTK.Mathematics.Vector3i.ToString
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_ToString
  name: ToString
  nameWithType: Vector3i.ToString
  fullName: OpenTK.Mathematics.Vector3i.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: OpenTK.Mathematics.Vector3i.Equals*
  commentId: Overload:OpenTK.Mathematics.Vector3i.Equals
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_Equals_System_Object_
  name: Equals
  nameWithType: Vector3i.Equals
  fullName: OpenTK.Mathematics.Vector3i.Equals
- uid: System.IEquatable{OpenTK.Mathematics.Vector3i}.Equals(OpenTK.Mathematics.Vector3i)
  commentId: M:System.IEquatable{OpenTK.Mathematics.Vector3i}.Equals(OpenTK.Mathematics.Vector3i)
  parent: System.IEquatable{OpenTK.Mathematics.Vector3i}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Vector3i)
  nameWithType: IEquatable<Vector3i>.Equals(Vector3i)
  fullName: System.IEquatable<OpenTK.Mathematics.Vector3i>.Equals(OpenTK.Mathematics.Vector3i)
  nameWithType.vb: IEquatable(Of Vector3i).Equals(Vector3i)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Vector3i).Equals(OpenTK.Mathematics.Vector3i)
  spec.csharp:
  - uid: System.IEquatable{OpenTK.Mathematics.Vector3i}.Equals(OpenTK.Mathematics.Vector3i)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: OpenTK.Mathematics.Vector3i
    name: Vector3i
    href: OpenTK.Mathematics.Vector3i.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{OpenTK.Mathematics.Vector3i}.Equals(OpenTK.Mathematics.Vector3i)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: OpenTK.Mathematics.Vector3i
    name: Vector3i
    href: OpenTK.Mathematics.Vector3i.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Vector3i.GetHashCode*
  commentId: Overload:OpenTK.Mathematics.Vector3i.GetHashCode
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_GetHashCode
  name: GetHashCode
  nameWithType: Vector3i.GetHashCode
  fullName: OpenTK.Mathematics.Vector3i.GetHashCode
- uid: OpenTK.Mathematics.Vector3i.Deconstruct*
  commentId: Overload:OpenTK.Mathematics.Vector3i.Deconstruct
  href: OpenTK.Mathematics.Vector3i.html#OpenTK_Mathematics_Vector3i_Deconstruct_System_Int32__System_Int32__System_Int32__
  name: Deconstruct
  nameWithType: Vector3i.Deconstruct
  fullName: OpenTK.Mathematics.Vector3i.Deconstruct
