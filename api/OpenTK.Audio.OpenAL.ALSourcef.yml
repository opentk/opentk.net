### YamlMime:ManagedReference
items:
- uid: OpenTK.Audio.OpenAL.ALSourcef
  commentId: T:OpenTK.Audio.OpenAL.ALSourcef
  id: ALSourcef
  parent: OpenTK.Audio.OpenAL
  children:
  - OpenTK.Audio.OpenAL.ALSourcef.ConeInnerAngle
  - OpenTK.Audio.OpenAL.ALSourcef.ConeOuterAngle
  - OpenTK.Audio.OpenAL.ALSourcef.ConeOuterGain
  - OpenTK.Audio.OpenAL.ALSourcef.EfxAirAbsorptionFactor
  - OpenTK.Audio.OpenAL.ALSourcef.EfxConeOuterGainHighFrequency
  - OpenTK.Audio.OpenAL.ALSourcef.EfxRoomRolloffFactor
  - OpenTK.Audio.OpenAL.ALSourcef.Gain
  - OpenTK.Audio.OpenAL.ALSourcef.MaxDistance
  - OpenTK.Audio.OpenAL.ALSourcef.MaxGain
  - OpenTK.Audio.OpenAL.ALSourcef.MinGain
  - OpenTK.Audio.OpenAL.ALSourcef.Pitch
  - OpenTK.Audio.OpenAL.ALSourcef.ReferenceDistance
  - OpenTK.Audio.OpenAL.ALSourcef.RolloffFactor
  - OpenTK.Audio.OpenAL.ALSourcef.SecOffset
  langs:
  - csharp
  - vb
  name: ALSourcef
  nameWithType: ALSourcef
  fullName: OpenTK.Audio.OpenAL.ALSourcef
  type: Enum
  source:
    id: ALSourcef
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\AL\ALEnums.cs
    startLine: 47
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: A list of valid 32-bit Float <xref href="OpenTK.Audio.OpenAL.AL.Source(System.Int32%2cOpenTK.Audio.OpenAL.ALSourcef%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>/<xref href="OpenTK.Audio.OpenAL.AL.GetSource(System.Int32%2cOpenTK.Audio.OpenAL.ALSourcef)" data-throw-if-not-resolved="false"></xref> parameters.
  example: []
  syntax:
    content: public enum ALSourcef
    content.vb: Public Enum ALSourcef
- uid: OpenTK.Audio.OpenAL.ALSourcef.ReferenceDistance
  commentId: F:OpenTK.Audio.OpenAL.ALSourcef.ReferenceDistance
  id: ReferenceDistance
  parent: OpenTK.Audio.OpenAL.ALSourcef
  langs:
  - csharp
  - vb
  name: ReferenceDistance
  nameWithType: ALSourcef.ReferenceDistance
  fullName: OpenTK.Audio.OpenAL.ALSourcef.ReferenceDistance
  type: Field
  source:
    id: ReferenceDistance
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\AL\ALEnums.cs
    startLine: 50
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: 'Source specific reference distance. Type: float Range: [0.0f - float.PositiveInfinity] At 0.0f, no distance attenuation occurs. Type: float Default: 1.0f.'
  example: []
  syntax:
    content: ReferenceDistance = 4128
    return:
      type: OpenTK.Audio.OpenAL.ALSourcef
- uid: OpenTK.Audio.OpenAL.ALSourcef.MaxDistance
  commentId: F:OpenTK.Audio.OpenAL.ALSourcef.MaxDistance
  id: MaxDistance
  parent: OpenTK.Audio.OpenAL.ALSourcef
  langs:
  - csharp
  - vb
  name: MaxDistance
  nameWithType: ALSourcef.MaxDistance
  fullName: OpenTK.Audio.OpenAL.ALSourcef.MaxDistance
  type: Field
  source:
    id: MaxDistance
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\AL\ALEnums.cs
    startLine: 53
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: 'Indicate distance above which Sources are not attenuated using the inverse clamped distance model. Default: float.PositiveInfinity Type: float Range: [0.0f - float.PositiveInfinity].'
  example: []
  syntax:
    content: MaxDistance = 4131
    return:
      type: OpenTK.Audio.OpenAL.ALSourcef
- uid: OpenTK.Audio.OpenAL.ALSourcef.RolloffFactor
  commentId: F:OpenTK.Audio.OpenAL.ALSourcef.RolloffFactor
  id: RolloffFactor
  parent: OpenTK.Audio.OpenAL.ALSourcef
  langs:
  - csharp
  - vb
  name: RolloffFactor
  nameWithType: ALSourcef.RolloffFactor
  fullName: OpenTK.Audio.OpenAL.ALSourcef.RolloffFactor
  type: Field
  source:
    id: RolloffFactor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\AL\ALEnums.cs
    startLine: 56
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: 'Source specific rolloff factor. Type: float Range: [0.0f - float.PositiveInfinity].'
  example: []
  syntax:
    content: RolloffFactor = 4129
    return:
      type: OpenTK.Audio.OpenAL.ALSourcef
- uid: OpenTK.Audio.OpenAL.ALSourcef.Pitch
  commentId: F:OpenTK.Audio.OpenAL.ALSourcef.Pitch
  id: Pitch
  parent: OpenTK.Audio.OpenAL.ALSourcef
  langs:
  - csharp
  - vb
  name: Pitch
  nameWithType: ALSourcef.Pitch
  fullName: OpenTK.Audio.OpenAL.ALSourcef.Pitch
  type: Field
  source:
    id: Pitch
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\AL\ALEnums.cs
    startLine: 59
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: 'Specify the pitch to be applied, either at Source, or on mixer results, at Listener. Range: [0.5f - 2.0f] Default: 1.0f.'
  example: []
  syntax:
    content: Pitch = 4099
    return:
      type: OpenTK.Audio.OpenAL.ALSourcef
- uid: OpenTK.Audio.OpenAL.ALSourcef.Gain
  commentId: F:OpenTK.Audio.OpenAL.ALSourcef.Gain
  id: Gain
  parent: OpenTK.Audio.OpenAL.ALSourcef
  langs:
  - csharp
  - vb
  name: Gain
  nameWithType: ALSourcef.Gain
  fullName: OpenTK.Audio.OpenAL.ALSourcef.Gain
  type: Field
  source:
    id: Gain
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\AL\ALEnums.cs
    startLine: 62
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: 'Indicate the gain (volume amplification) applied. Type: float. Range: [0.0f - ? ] A value of 1.0 means un-attenuated/unchanged. Each division by 2 equals an attenuation of -6dB. Each multiplicaton with 2 equals an amplification of +6dB. A value of 0.0f is meaningless with respect to a logarithmic scale; it is interpreted as zero volume - the channel is effectively disabled.'
  example: []
  syntax:
    content: Gain = 4106
    return:
      type: OpenTK.Audio.OpenAL.ALSourcef
- uid: OpenTK.Audio.OpenAL.ALSourcef.MinGain
  commentId: F:OpenTK.Audio.OpenAL.ALSourcef.MinGain
  id: MinGain
  parent: OpenTK.Audio.OpenAL.ALSourcef
  langs:
  - csharp
  - vb
  name: MinGain
  nameWithType: ALSourcef.MinGain
  fullName: OpenTK.Audio.OpenAL.ALSourcef.MinGain
  type: Field
  source:
    id: MinGain
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\AL\ALEnums.cs
    startLine: 65
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: 'Indicate minimum Source attenuation. Type: float Range: [0.0f - 1.0f] (Logarthmic).'
  example: []
  syntax:
    content: MinGain = 4109
    return:
      type: OpenTK.Audio.OpenAL.ALSourcef
- uid: OpenTK.Audio.OpenAL.ALSourcef.MaxGain
  commentId: F:OpenTK.Audio.OpenAL.ALSourcef.MaxGain
  id: MaxGain
  parent: OpenTK.Audio.OpenAL.ALSourcef
  langs:
  - csharp
  - vb
  name: MaxGain
  nameWithType: ALSourcef.MaxGain
  fullName: OpenTK.Audio.OpenAL.ALSourcef.MaxGain
  type: Field
  source:
    id: MaxGain
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\AL\ALEnums.cs
    startLine: 68
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: 'Indicate maximum Source attenuation. Type: float Range: [0.0f - 1.0f] (Logarthmic).'
  example: []
  syntax:
    content: MaxGain = 4110
    return:
      type: OpenTK.Audio.OpenAL.ALSourcef
- uid: OpenTK.Audio.OpenAL.ALSourcef.ConeInnerAngle
  commentId: F:OpenTK.Audio.OpenAL.ALSourcef.ConeInnerAngle
  id: ConeInnerAngle
  parent: OpenTK.Audio.OpenAL.ALSourcef
  langs:
  - csharp
  - vb
  name: ConeInnerAngle
  nameWithType: ALSourcef.ConeInnerAngle
  fullName: OpenTK.Audio.OpenAL.ALSourcef.ConeInnerAngle
  type: Field
  source:
    id: ConeInnerAngle
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\AL\ALEnums.cs
    startLine: 71
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: 'Directional Source, inner cone angle, in degrees. Range: [0-360] Default: 360.'
  example: []
  syntax:
    content: ConeInnerAngle = 4097
    return:
      type: OpenTK.Audio.OpenAL.ALSourcef
- uid: OpenTK.Audio.OpenAL.ALSourcef.ConeOuterAngle
  commentId: F:OpenTK.Audio.OpenAL.ALSourcef.ConeOuterAngle
  id: ConeOuterAngle
  parent: OpenTK.Audio.OpenAL.ALSourcef
  langs:
  - csharp
  - vb
  name: ConeOuterAngle
  nameWithType: ALSourcef.ConeOuterAngle
  fullName: OpenTK.Audio.OpenAL.ALSourcef.ConeOuterAngle
  type: Field
  source:
    id: ConeOuterAngle
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\AL\ALEnums.cs
    startLine: 74
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: 'Directional Source, outer cone angle, in degrees. Range: [0-360] Default: 360.'
  example: []
  syntax:
    content: ConeOuterAngle = 4098
    return:
      type: OpenTK.Audio.OpenAL.ALSourcef
- uid: OpenTK.Audio.OpenAL.ALSourcef.ConeOuterGain
  commentId: F:OpenTK.Audio.OpenAL.ALSourcef.ConeOuterGain
  id: ConeOuterGain
  parent: OpenTK.Audio.OpenAL.ALSourcef
  langs:
  - csharp
  - vb
  name: ConeOuterGain
  nameWithType: ALSourcef.ConeOuterGain
  fullName: OpenTK.Audio.OpenAL.ALSourcef.ConeOuterGain
  type: Field
  source:
    id: ConeOuterGain
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\AL\ALEnums.cs
    startLine: 77
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: 'Directional Source, outer cone gain. Default: 0.0f Range: [0.0f - 1.0] (Logarithmic).'
  example: []
  syntax:
    content: ConeOuterGain = 4130
    return:
      type: OpenTK.Audio.OpenAL.ALSourcef
- uid: OpenTK.Audio.OpenAL.ALSourcef.SecOffset
  commentId: F:OpenTK.Audio.OpenAL.ALSourcef.SecOffset
  id: SecOffset
  parent: OpenTK.Audio.OpenAL.ALSourcef
  langs:
  - csharp
  - vb
  name: SecOffset
  nameWithType: ALSourcef.SecOffset
  fullName: OpenTK.Audio.OpenAL.ALSourcef.SecOffset
  type: Field
  source:
    id: SecOffset
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\AL\ALEnums.cs
    startLine: 80
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: The playback position, expressed in seconds.
  example: []
  syntax:
    content: SecOffset = 4132
    return:
      type: OpenTK.Audio.OpenAL.ALSourcef
- uid: OpenTK.Audio.OpenAL.ALSourcef.EfxAirAbsorptionFactor
  commentId: F:OpenTK.Audio.OpenAL.ALSourcef.EfxAirAbsorptionFactor
  id: EfxAirAbsorptionFactor
  parent: OpenTK.Audio.OpenAL.ALSourcef
  langs:
  - csharp
  - vb
  name: EfxAirAbsorptionFactor
  nameWithType: ALSourcef.EfxAirAbsorptionFactor
  fullName: OpenTK.Audio.OpenAL.ALSourcef.EfxAirAbsorptionFactor
  type: Field
  source:
    id: EfxAirAbsorptionFactor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\AL\ALEnums.cs
    startLine: 83
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: '(EFX Extension) This property is a multiplier on the amount of Air Absorption applied to the Source. The AL_AIR_ABSORPTION_FACTOR is multiplied by an internal Air Absorption Gain HF value of 0.994 (-0.05dB) per meter which represents normal atmospheric humidity and temperature. Range [0.0f .. 10.0f] Default: 0.0f.'
  example: []
  syntax:
    content: EfxAirAbsorptionFactor = 131079
    return:
      type: OpenTK.Audio.OpenAL.ALSourcef
- uid: OpenTK.Audio.OpenAL.ALSourcef.EfxRoomRolloffFactor
  commentId: F:OpenTK.Audio.OpenAL.ALSourcef.EfxRoomRolloffFactor
  id: EfxRoomRolloffFactor
  parent: OpenTK.Audio.OpenAL.ALSourcef
  langs:
  - csharp
  - vb
  name: EfxRoomRolloffFactor
  nameWithType: ALSourcef.EfxRoomRolloffFactor
  fullName: OpenTK.Audio.OpenAL.ALSourcef.EfxRoomRolloffFactor
  type: Field
  source:
    id: EfxRoomRolloffFactor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\AL\ALEnums.cs
    startLine: 86
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: '(EFX Extension) This property is defined the same way as the Reverb Room Rolloff property: it is one of two methods available in the Effect Extension to attenuate the reflected sound (early reflections and reverberation) according to source-listener distance. Range [0.0f .. 10.0f] Default: 0.0f.'
  example: []
  syntax:
    content: EfxRoomRolloffFactor = 131080
    return:
      type: OpenTK.Audio.OpenAL.ALSourcef
- uid: OpenTK.Audio.OpenAL.ALSourcef.EfxConeOuterGainHighFrequency
  commentId: F:OpenTK.Audio.OpenAL.ALSourcef.EfxConeOuterGainHighFrequency
  id: EfxConeOuterGainHighFrequency
  parent: OpenTK.Audio.OpenAL.ALSourcef
  langs:
  - csharp
  - vb
  name: EfxConeOuterGainHighFrequency
  nameWithType: ALSourcef.EfxConeOuterGainHighFrequency
  fullName: OpenTK.Audio.OpenAL.ALSourcef.EfxConeOuterGainHighFrequency
  type: Field
  source:
    id: EfxConeOuterGainHighFrequency
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\AL\ALEnums.cs
    startLine: 89
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: '(EFX Extension) A directed Source points in a specified direction. The Source sounds at full volume when the listener is directly in front of the source; it is attenuated as the listener circles the Source away from the front. Range [0.0f .. 1.0f] Default: 1.0f.'
  example: []
  syntax:
    content: EfxConeOuterGainHighFrequency = 131081
    return:
      type: OpenTK.Audio.OpenAL.ALSourcef
references:
- uid: OpenTK.Audio.OpenAL.AL.Source(System.Int32,OpenTK.Audio.OpenAL.ALSourcef,System.Single)
  commentId: M:OpenTK.Audio.OpenAL.AL.Source(System.Int32,OpenTK.Audio.OpenAL.ALSourcef,System.Single)
  isExternal: true
  href: OpenTK.Audio.OpenAL.AL.html#OpenTK_Audio_OpenAL_AL_Source_System_Int32_OpenTK_Audio_OpenAL_ALSourcef_System_Single_
  name: Source(int, ALSourcef, float)
  nameWithType: AL.Source(int, ALSourcef, float)
  fullName: OpenTK.Audio.OpenAL.AL.Source(int, OpenTK.Audio.OpenAL.ALSourcef, float)
  nameWithType.vb: AL.Source(Integer, ALSourcef, Single)
  fullName.vb: OpenTK.Audio.OpenAL.AL.Source(Integer, OpenTK.Audio.OpenAL.ALSourcef, Single)
  name.vb: Source(Integer, ALSourcef, Single)
  spec.csharp:
  - uid: OpenTK.Audio.OpenAL.AL.Source(System.Int32,OpenTK.Audio.OpenAL.ALSourcef,System.Single)
    name: Source
    isExternal: true
    href: OpenTK.Audio.OpenAL.AL.html#OpenTK_Audio_OpenAL_AL_Source_System_Int32_OpenTK_Audio_OpenAL_ALSourcef_System_Single_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: OpenTK.Audio.OpenAL.ALSourcef
    name: ALSourcef
    href: OpenTK.Audio.OpenAL.ALSourcef.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: OpenTK.Audio.OpenAL.AL.Source(System.Int32,OpenTK.Audio.OpenAL.ALSourcef,System.Single)
    name: Source
    isExternal: true
    href: OpenTK.Audio.OpenAL.AL.html#OpenTK_Audio_OpenAL_AL_Source_System_Int32_OpenTK_Audio_OpenAL_ALSourcef_System_Single_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: OpenTK.Audio.OpenAL.ALSourcef
    name: ALSourcef
    href: OpenTK.Audio.OpenAL.ALSourcef.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: OpenTK.Audio.OpenAL.AL.GetSource(System.Int32,OpenTK.Audio.OpenAL.ALSourcef)
  commentId: M:OpenTK.Audio.OpenAL.AL.GetSource(System.Int32,OpenTK.Audio.OpenAL.ALSourcef)
  isExternal: true
  href: OpenTK.Audio.OpenAL.AL.html#OpenTK_Audio_OpenAL_AL_GetSource_System_Int32_OpenTK_Audio_OpenAL_ALSourcef_
  name: GetSource(int, ALSourcef)
  nameWithType: AL.GetSource(int, ALSourcef)
  fullName: OpenTK.Audio.OpenAL.AL.GetSource(int, OpenTK.Audio.OpenAL.ALSourcef)
  nameWithType.vb: AL.GetSource(Integer, ALSourcef)
  fullName.vb: OpenTK.Audio.OpenAL.AL.GetSource(Integer, OpenTK.Audio.OpenAL.ALSourcef)
  name.vb: GetSource(Integer, ALSourcef)
  spec.csharp:
  - uid: OpenTK.Audio.OpenAL.AL.GetSource(System.Int32,OpenTK.Audio.OpenAL.ALSourcef)
    name: GetSource
    href: OpenTK.Audio.OpenAL.AL.html#OpenTK_Audio_OpenAL_AL_GetSource_System_Int32_OpenTK_Audio_OpenAL_ALSourcef_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: OpenTK.Audio.OpenAL.ALSourcef
    name: ALSourcef
    href: OpenTK.Audio.OpenAL.ALSourcef.html
  - name: )
  spec.vb:
  - uid: OpenTK.Audio.OpenAL.AL.GetSource(System.Int32,OpenTK.Audio.OpenAL.ALSourcef)
    name: GetSource
    href: OpenTK.Audio.OpenAL.AL.html#OpenTK_Audio_OpenAL_AL_GetSource_System_Int32_OpenTK_Audio_OpenAL_ALSourcef_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: OpenTK.Audio.OpenAL.ALSourcef
    name: ALSourcef
    href: OpenTK.Audio.OpenAL.ALSourcef.html
  - name: )
- uid: OpenTK.Audio.OpenAL
  commentId: N:OpenTK.Audio.OpenAL
  href: OpenTK.html
  name: OpenTK.Audio.OpenAL
  nameWithType: OpenTK.Audio.OpenAL
  fullName: OpenTK.Audio.OpenAL
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Audio
    name: Audio
    href: OpenTK.Audio.html
  - name: .
  - uid: OpenTK.Audio.OpenAL
    name: OpenAL
    href: OpenTK.Audio.OpenAL.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Audio
    name: Audio
    href: OpenTK.Audio.html
  - name: .
  - uid: OpenTK.Audio.OpenAL
    name: OpenAL
    href: OpenTK.Audio.OpenAL.html
- uid: OpenTK.Audio.OpenAL.ALSourcef
  commentId: T:OpenTK.Audio.OpenAL.ALSourcef
  parent: OpenTK.Audio.OpenAL
  href: OpenTK.Audio.OpenAL.ALSourcef.html
  name: ALSourcef
  nameWithType: ALSourcef
  fullName: OpenTK.Audio.OpenAL.ALSourcef
