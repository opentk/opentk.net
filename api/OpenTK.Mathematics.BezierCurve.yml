### YamlMime:ManagedReference
items:
- uid: OpenTK.Mathematics.BezierCurve
  commentId: T:OpenTK.Mathematics.BezierCurve
  id: BezierCurve
  parent: OpenTK.Mathematics
  children:
  - OpenTK.Mathematics.BezierCurve.#ctor(OpenTK.Mathematics.Vector2[])
  - OpenTK.Mathematics.BezierCurve.#ctor(System.Collections.Generic.IEnumerable{OpenTK.Mathematics.Vector2})
  - OpenTK.Mathematics.BezierCurve.#ctor(System.Single,OpenTK.Mathematics.Vector2[])
  - OpenTK.Mathematics.BezierCurve.#ctor(System.Single,System.Collections.Generic.IEnumerable{OpenTK.Mathematics.Vector2})
  - OpenTK.Mathematics.BezierCurve.CalculateLength(System.Collections.Generic.IList{OpenTK.Mathematics.Vector2},System.Single)
  - OpenTK.Mathematics.BezierCurve.CalculateLength(System.Collections.Generic.IList{OpenTK.Mathematics.Vector2},System.Single,System.Single)
  - OpenTK.Mathematics.BezierCurve.CalculateLength(System.Single)
  - OpenTK.Mathematics.BezierCurve.CalculatePoint(System.Collections.Generic.IList{OpenTK.Mathematics.Vector2},System.Single)
  - OpenTK.Mathematics.BezierCurve.CalculatePoint(System.Collections.Generic.IList{OpenTK.Mathematics.Vector2},System.Single,System.Single)
  - OpenTK.Mathematics.BezierCurve.CalculatePoint(System.Single)
  - OpenTK.Mathematics.BezierCurve.Parallel
  - OpenTK.Mathematics.BezierCurve.Points
  langs:
  - csharp
  - vb
  name: BezierCurve
  nameWithType: BezierCurve
  fullName: OpenTK.Mathematics.BezierCurve
  type: Struct
  source:
    id: BezierCurve
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Geometry\BezierCurve.cs
    startLine: 17
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Represents a bezier curve with as many points as you want.
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct BezierCurve
    content.vb: >-
      <Serializable>

      Public Structure BezierCurve
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.BezierCurve.Parallel
  commentId: F:OpenTK.Mathematics.BezierCurve.Parallel
  id: Parallel
  parent: OpenTK.Mathematics.BezierCurve
  langs:
  - csharp
  - vb
  name: Parallel
  nameWithType: BezierCurve.Parallel
  fullName: OpenTK.Mathematics.BezierCurve.Parallel
  type: Field
  source:
    id: Parallel
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Geometry\BezierCurve.cs
    startLine: 31
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The parallel value.
  remarks: >-
    This value defines whether the curve should be calculated as a

    parallel curve to the original bezier curve. A value of 0.0f represents

    the original curve, 5.0f i.e. stands for a curve that has always a distance

    of 5.0f to the orignal curve at any point.
  example: []
  syntax:
    content: public float Parallel
    return:
      type: System.Single
    content.vb: Public Parallel As Single
- uid: OpenTK.Mathematics.BezierCurve.Points
  commentId: P:OpenTK.Mathematics.BezierCurve.Points
  id: Points
  parent: OpenTK.Mathematics.BezierCurve
  langs:
  - csharp
  - vb
  name: Points
  nameWithType: BezierCurve.Points
  fullName: OpenTK.Mathematics.BezierCurve.Points
  type: Property
  source:
    id: Points
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Geometry\BezierCurve.cs
    startLine: 37
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the points of this curve.
  remarks: The first point and the last points represent the anchor points.
  example: []
  syntax:
    content: public readonly IList<Vector2> Points { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{OpenTK.Mathematics.Vector2}
    content.vb: Public ReadOnly Property Points As IList(Of Vector2)
  overload: OpenTK.Mathematics.BezierCurve.Points*
- uid: OpenTK.Mathematics.BezierCurve.#ctor(System.Collections.Generic.IEnumerable{OpenTK.Mathematics.Vector2})
  commentId: M:OpenTK.Mathematics.BezierCurve.#ctor(System.Collections.Generic.IEnumerable{OpenTK.Mathematics.Vector2})
  id: '#ctor(System.Collections.Generic.IEnumerable{OpenTK.Mathematics.Vector2})'
  parent: OpenTK.Mathematics.BezierCurve
  langs:
  - csharp
  - vb
  name: BezierCurve(IEnumerable<Vector2>)
  nameWithType: BezierCurve.BezierCurve(IEnumerable<Vector2>)
  fullName: OpenTK.Mathematics.BezierCurve.BezierCurve(System.Collections.Generic.IEnumerable<OpenTK.Mathematics.Vector2>)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Geometry\BezierCurve.cs
    startLine: 43
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.BezierCurve" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public BezierCurve(IEnumerable<Vector2> points)
    parameters:
    - id: points
      type: System.Collections.Generic.IEnumerable{OpenTK.Mathematics.Vector2}
      description: The points.
    content.vb: Public Sub New(points As IEnumerable(Of Vector2))
  overload: OpenTK.Mathematics.BezierCurve.#ctor*
  nameWithType.vb: BezierCurve.New(IEnumerable(Of Vector2))
  fullName.vb: OpenTK.Mathematics.BezierCurve.New(System.Collections.Generic.IEnumerable(Of OpenTK.Mathematics.Vector2))
  name.vb: New(IEnumerable(Of Vector2))
- uid: OpenTK.Mathematics.BezierCurve.#ctor(OpenTK.Mathematics.Vector2[])
  commentId: M:OpenTK.Mathematics.BezierCurve.#ctor(OpenTK.Mathematics.Vector2[])
  id: '#ctor(OpenTK.Mathematics.Vector2[])'
  parent: OpenTK.Mathematics.BezierCurve
  langs:
  - csharp
  - vb
  name: BezierCurve(params Vector2[])
  nameWithType: BezierCurve.BezierCurve(params Vector2[])
  fullName: OpenTK.Mathematics.BezierCurve.BezierCurve(params OpenTK.Mathematics.Vector2[])
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Geometry\BezierCurve.cs
    startLine: 58
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.BezierCurve" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public BezierCurve(params Vector2[] points)
    parameters:
    - id: points
      type: OpenTK.Mathematics.Vector2[]
      description: The points.
    content.vb: Public Sub New(ParamArray points As Vector2())
  overload: OpenTK.Mathematics.BezierCurve.#ctor*
  nameWithType.vb: BezierCurve.New(ParamArray Vector2())
  fullName.vb: OpenTK.Mathematics.BezierCurve.New(ParamArray OpenTK.Mathematics.Vector2())
  name.vb: New(ParamArray Vector2())
- uid: OpenTK.Mathematics.BezierCurve.#ctor(System.Single,OpenTK.Mathematics.Vector2[])
  commentId: M:OpenTK.Mathematics.BezierCurve.#ctor(System.Single,OpenTK.Mathematics.Vector2[])
  id: '#ctor(System.Single,OpenTK.Mathematics.Vector2[])'
  parent: OpenTK.Mathematics.BezierCurve
  langs:
  - csharp
  - vb
  name: BezierCurve(float, params Vector2[])
  nameWithType: BezierCurve.BezierCurve(float, params Vector2[])
  fullName: OpenTK.Mathematics.BezierCurve.BezierCurve(float, params OpenTK.Mathematics.Vector2[])
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Geometry\BezierCurve.cs
    startLine: 74
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.BezierCurve" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public BezierCurve(float parallel, params Vector2[] points)
    parameters:
    - id: parallel
      type: System.Single
      description: The parallel value.
    - id: points
      type: OpenTK.Mathematics.Vector2[]
      description: The points.
    content.vb: Public Sub New(parallel As Single, ParamArray points As Vector2())
  overload: OpenTK.Mathematics.BezierCurve.#ctor*
  nameWithType.vb: BezierCurve.New(Single, ParamArray Vector2())
  fullName.vb: OpenTK.Mathematics.BezierCurve.New(Single, ParamArray OpenTK.Mathematics.Vector2())
  name.vb: New(Single, ParamArray Vector2())
- uid: OpenTK.Mathematics.BezierCurve.#ctor(System.Single,System.Collections.Generic.IEnumerable{OpenTK.Mathematics.Vector2})
  commentId: M:OpenTK.Mathematics.BezierCurve.#ctor(System.Single,System.Collections.Generic.IEnumerable{OpenTK.Mathematics.Vector2})
  id: '#ctor(System.Single,System.Collections.Generic.IEnumerable{OpenTK.Mathematics.Vector2})'
  parent: OpenTK.Mathematics.BezierCurve
  langs:
  - csharp
  - vb
  name: BezierCurve(float, IEnumerable<Vector2>)
  nameWithType: BezierCurve.BezierCurve(float, IEnumerable<Vector2>)
  fullName: OpenTK.Mathematics.BezierCurve.BezierCurve(float, System.Collections.Generic.IEnumerable<OpenTK.Mathematics.Vector2>)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Geometry\BezierCurve.cs
    startLine: 90
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.BezierCurve" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public BezierCurve(float parallel, IEnumerable<Vector2> points)
    parameters:
    - id: parallel
      type: System.Single
      description: The parallel value.
    - id: points
      type: System.Collections.Generic.IEnumerable{OpenTK.Mathematics.Vector2}
      description: The points.
    content.vb: Public Sub New(parallel As Single, points As IEnumerable(Of Vector2))
  overload: OpenTK.Mathematics.BezierCurve.#ctor*
  nameWithType.vb: BezierCurve.New(Single, IEnumerable(Of Vector2))
  fullName.vb: OpenTK.Mathematics.BezierCurve.New(Single, System.Collections.Generic.IEnumerable(Of OpenTK.Mathematics.Vector2))
  name.vb: New(Single, IEnumerable(Of Vector2))
- uid: OpenTK.Mathematics.BezierCurve.CalculatePoint(System.Single)
  commentId: M:OpenTK.Mathematics.BezierCurve.CalculatePoint(System.Single)
  id: CalculatePoint(System.Single)
  parent: OpenTK.Mathematics.BezierCurve
  langs:
  - csharp
  - vb
  name: CalculatePoint(float)
  nameWithType: BezierCurve.CalculatePoint(float)
  fullName: OpenTK.Mathematics.BezierCurve.CalculatePoint(float)
  type: Method
  source:
    id: CalculatePoint
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Geometry\BezierCurve.cs
    startLine: 106
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculates the point with the specified t.
  example: []
  syntax:
    content: >-
      [Pure]

      public readonly Vector2 CalculatePoint(float t)
    parameters:
    - id: t
      type: System.Single
      description: The t value, between 0.0f and 1.0f.
    return:
      type: OpenTK.Mathematics.Vector2
      description: Resulting point.
    content.vb: >-
      <Pure>

      Public Function CalculatePoint(t As Single) As Vector2
  overload: OpenTK.Mathematics.BezierCurve.CalculatePoint*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: BezierCurve.CalculatePoint(Single)
  fullName.vb: OpenTK.Mathematics.BezierCurve.CalculatePoint(Single)
  name.vb: CalculatePoint(Single)
- uid: OpenTK.Mathematics.BezierCurve.CalculateLength(System.Single)
  commentId: M:OpenTK.Mathematics.BezierCurve.CalculateLength(System.Single)
  id: CalculateLength(System.Single)
  parent: OpenTK.Mathematics.BezierCurve
  langs:
  - csharp
  - vb
  name: CalculateLength(float)
  nameWithType: BezierCurve.CalculateLength(float)
  fullName: OpenTK.Mathematics.BezierCurve.CalculateLength(float)
  type: Method
  source:
    id: CalculateLength
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Geometry\BezierCurve.cs
    startLine: 121
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculates the length of this bezier curve.
  remarks: >-
    The precision gets better as the <code class="paramref">precision</code>

    value gets smaller.
  example: []
  syntax:
    content: >-
      [Pure]

      public readonly float CalculateLength(float precision)
    parameters:
    - id: precision
      type: System.Single
      description: The precision.
    return:
      type: System.Single
      description: Length of curve.
    content.vb: >-
      <Pure>

      Public Function CalculateLength(precision As Single) As Single
  overload: OpenTK.Mathematics.BezierCurve.CalculateLength*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: BezierCurve.CalculateLength(Single)
  fullName.vb: OpenTK.Mathematics.BezierCurve.CalculateLength(Single)
  name.vb: CalculateLength(Single)
- uid: OpenTK.Mathematics.BezierCurve.CalculateLength(System.Collections.Generic.IList{OpenTK.Mathematics.Vector2},System.Single)
  commentId: M:OpenTK.Mathematics.BezierCurve.CalculateLength(System.Collections.Generic.IList{OpenTK.Mathematics.Vector2},System.Single)
  id: CalculateLength(System.Collections.Generic.IList{OpenTK.Mathematics.Vector2},System.Single)
  parent: OpenTK.Mathematics.BezierCurve
  langs:
  - csharp
  - vb
  name: CalculateLength(IList<Vector2>, float)
  nameWithType: BezierCurve.CalculateLength(IList<Vector2>, float)
  fullName: OpenTK.Mathematics.BezierCurve.CalculateLength(System.Collections.Generic.IList<OpenTK.Mathematics.Vector2>, float)
  type: Method
  source:
    id: CalculateLength
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Geometry\BezierCurve.cs
    startLine: 136
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculates the length of the specified bezier curve.
  example: []
  syntax:
    content: >-
      [Pure]

      public static float CalculateLength(IList<Vector2> points, float precision)
    parameters:
    - id: points
      type: System.Collections.Generic.IList{OpenTK.Mathematics.Vector2}
      description: The points.
    - id: precision
      type: System.Single
      description: The precision value.
    return:
      type: System.Single
      description: >-
        The precision gets better as the <code class="paramref">precision</code>

        value gets smaller.
    content.vb: >-
      <Pure>

      Public Shared Function CalculateLength(points As IList(Of Vector2), precision As Single) As Single
  overload: OpenTK.Mathematics.BezierCurve.CalculateLength*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: BezierCurve.CalculateLength(IList(Of Vector2), Single)
  fullName.vb: OpenTK.Mathematics.BezierCurve.CalculateLength(System.Collections.Generic.IList(Of OpenTK.Mathematics.Vector2), Single)
  name.vb: CalculateLength(IList(Of Vector2), Single)
- uid: OpenTK.Mathematics.BezierCurve.CalculateLength(System.Collections.Generic.IList{OpenTK.Mathematics.Vector2},System.Single,System.Single)
  commentId: M:OpenTK.Mathematics.BezierCurve.CalculateLength(System.Collections.Generic.IList{OpenTK.Mathematics.Vector2},System.Single,System.Single)
  id: CalculateLength(System.Collections.Generic.IList{OpenTK.Mathematics.Vector2},System.Single,System.Single)
  parent: OpenTK.Mathematics.BezierCurve
  langs:
  - csharp
  - vb
  name: CalculateLength(IList<Vector2>, float, float)
  nameWithType: BezierCurve.CalculateLength(IList<Vector2>, float, float)
  fullName: OpenTK.Mathematics.BezierCurve.CalculateLength(System.Collections.Generic.IList<OpenTK.Mathematics.Vector2>, float, float)
  type: Method
  source:
    id: CalculateLength
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Geometry\BezierCurve.cs
    startLine: 161
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculates the length of the specified bezier curve.
  remarks: >-
    <p>

    The precision gets better as the <code class="paramref">precision</code>

    value gets smaller.
     </p>
    <p>

    The <code class="paramref">parallel</code> parameter defines whether the curve should be calculated as a

    parallel curve to the original bezier curve. A value of 0.0f represents

    the original curve, 5.0f represents a curve that has always a distance

    of 5.0f to the orignal curve.
     </p>
  example: []
  syntax:
    content: >-
      [Pure]

      public static float CalculateLength(IList<Vector2> points, float precision, float parallel)
    parameters:
    - id: points
      type: System.Collections.Generic.IList{OpenTK.Mathematics.Vector2}
      description: The points.
    - id: precision
      type: System.Single
      description: The precision value.
    - id: parallel
      type: System.Single
      description: The parallel value.
    return:
      type: System.Single
      description: Length of curve.
    content.vb: >-
      <Pure>

      Public Shared Function CalculateLength(points As IList(Of Vector2), precision As Single, parallel As Single) As Single
  overload: OpenTK.Mathematics.BezierCurve.CalculateLength*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: BezierCurve.CalculateLength(IList(Of Vector2), Single, Single)
  fullName.vb: OpenTK.Mathematics.BezierCurve.CalculateLength(System.Collections.Generic.IList(Of OpenTK.Mathematics.Vector2), Single, Single)
  name.vb: CalculateLength(IList(Of Vector2), Single, Single)
- uid: OpenTK.Mathematics.BezierCurve.CalculatePoint(System.Collections.Generic.IList{OpenTK.Mathematics.Vector2},System.Single)
  commentId: M:OpenTK.Mathematics.BezierCurve.CalculatePoint(System.Collections.Generic.IList{OpenTK.Mathematics.Vector2},System.Single)
  id: CalculatePoint(System.Collections.Generic.IList{OpenTK.Mathematics.Vector2},System.Single)
  parent: OpenTK.Mathematics.BezierCurve
  langs:
  - csharp
  - vb
  name: CalculatePoint(IList<Vector2>, float)
  nameWithType: BezierCurve.CalculatePoint(IList<Vector2>, float)
  fullName: OpenTK.Mathematics.BezierCurve.CalculatePoint(System.Collections.Generic.IList<OpenTK.Mathematics.Vector2>, float)
  type: Method
  source:
    id: CalculatePoint
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Geometry\BezierCurve.cs
    startLine: 183
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculates the point on the given bezier curve with the specified t parameter.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector2 CalculatePoint(IList<Vector2> points, float t)
    parameters:
    - id: points
      type: System.Collections.Generic.IList{OpenTK.Mathematics.Vector2}
      description: The points.
    - id: t
      type: System.Single
      description: The t parameter, a value between 0.0f and 1.0f.
    return:
      type: OpenTK.Mathematics.Vector2
      description: Resulting point.
    content.vb: >-
      <Pure>

      Public Shared Function CalculatePoint(points As IList(Of Vector2), t As Single) As Vector2
  overload: OpenTK.Mathematics.BezierCurve.CalculatePoint*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: BezierCurve.CalculatePoint(IList(Of Vector2), Single)
  fullName.vb: OpenTK.Mathematics.BezierCurve.CalculatePoint(System.Collections.Generic.IList(Of OpenTK.Mathematics.Vector2), Single)
  name.vb: CalculatePoint(IList(Of Vector2), Single)
- uid: OpenTK.Mathematics.BezierCurve.CalculatePoint(System.Collections.Generic.IList{OpenTK.Mathematics.Vector2},System.Single,System.Single)
  commentId: M:OpenTK.Mathematics.BezierCurve.CalculatePoint(System.Collections.Generic.IList{OpenTK.Mathematics.Vector2},System.Single,System.Single)
  id: CalculatePoint(System.Collections.Generic.IList{OpenTK.Mathematics.Vector2},System.Single,System.Single)
  parent: OpenTK.Mathematics.BezierCurve
  langs:
  - csharp
  - vb
  name: CalculatePoint(IList<Vector2>, float, float)
  nameWithType: BezierCurve.CalculatePoint(IList<Vector2>, float, float)
  fullName: OpenTK.Mathematics.BezierCurve.CalculatePoint(System.Collections.Generic.IList<OpenTK.Mathematics.Vector2>, float, float)
  type: Method
  source:
    id: CalculatePoint
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Geometry\BezierCurve.cs
    startLine: 202
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculates the point on the given bezier curve with the specified t parameter.
  remarks: >-
    The <code class="paramref">parallel</code> parameter defines whether the curve should be calculated as a

    parallel curve to the original bezier curve. A value of 0.0f represents

    the original curve, 5.0f represents a curve that has always a distance

    of 5.0f to the orignal curve.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector2 CalculatePoint(IList<Vector2> points, float t, float parallel)
    parameters:
    - id: points
      type: System.Collections.Generic.IList{OpenTK.Mathematics.Vector2}
      description: The points.
    - id: t
      type: System.Single
      description: The t parameter, a value between 0.0f and 1.0f.
    - id: parallel
      type: System.Single
      description: The parallel value.
    return:
      type: OpenTK.Mathematics.Vector2
      description: Resulting point.
    content.vb: >-
      <Pure>

      Public Shared Function CalculatePoint(points As IList(Of Vector2), t As Single, parallel As Single) As Vector2
  overload: OpenTK.Mathematics.BezierCurve.CalculatePoint*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: BezierCurve.CalculatePoint(IList(Of Vector2), Single, Single)
  fullName.vb: OpenTK.Mathematics.BezierCurve.CalculatePoint(System.Collections.Generic.IList(Of OpenTK.Mathematics.Vector2), Single, Single)
  name.vb: CalculatePoint(IList(Of Vector2), Single, Single)
references:
- uid: OpenTK.Mathematics
  commentId: N:OpenTK.Mathematics
  href: OpenTK.html
  name: OpenTK.Mathematics
  nameWithType: OpenTK.Mathematics
  fullName: OpenTK.Mathematics
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: OpenTK.Mathematics.BezierCurve.Points*
  commentId: Overload:OpenTK.Mathematics.BezierCurve.Points
  href: OpenTK.Mathematics.BezierCurve.html#OpenTK_Mathematics_BezierCurve_Points
  name: Points
  nameWithType: BezierCurve.Points
  fullName: OpenTK.Mathematics.BezierCurve.Points
- uid: System.Collections.Generic.IList{OpenTK.Mathematics.Vector2}
  commentId: T:System.Collections.Generic.IList{OpenTK.Mathematics.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<Vector2>
  nameWithType: IList<Vector2>
  fullName: System.Collections.Generic.IList<OpenTK.Mathematics.Vector2>
  nameWithType.vb: IList(Of Vector2)
  fullName.vb: System.Collections.Generic.IList(Of OpenTK.Mathematics.Vector2)
  name.vb: IList(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: OpenTK.Mathematics.Vector2
    name: Vector2
    href: OpenTK.Mathematics.Vector2.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Mathematics.Vector2
    name: Vector2
    href: OpenTK.Mathematics.Vector2.html
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: OpenTK.Mathematics.BezierCurve
  commentId: T:OpenTK.Mathematics.BezierCurve
  href: OpenTK.Mathematics.BezierCurve.html
  name: BezierCurve
  nameWithType: BezierCurve
  fullName: OpenTK.Mathematics.BezierCurve
- uid: OpenTK.Mathematics.BezierCurve.#ctor*
  commentId: Overload:OpenTK.Mathematics.BezierCurve.#ctor
  href: OpenTK.Mathematics.BezierCurve.html#OpenTK_Mathematics_BezierCurve__ctor_System_Collections_Generic_IEnumerable_OpenTK_Mathematics_Vector2__
  name: BezierCurve
  nameWithType: BezierCurve.BezierCurve
  fullName: OpenTK.Mathematics.BezierCurve.BezierCurve
  nameWithType.vb: BezierCurve.New
  fullName.vb: OpenTK.Mathematics.BezierCurve.New
  name.vb: New
- uid: System.Collections.Generic.IEnumerable{OpenTK.Mathematics.Vector2}
  commentId: T:System.Collections.Generic.IEnumerable{OpenTK.Mathematics.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Vector2>
  nameWithType: IEnumerable<Vector2>
  fullName: System.Collections.Generic.IEnumerable<OpenTK.Mathematics.Vector2>
  nameWithType.vb: IEnumerable(Of Vector2)
  fullName.vb: System.Collections.Generic.IEnumerable(Of OpenTK.Mathematics.Vector2)
  name.vb: IEnumerable(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: OpenTK.Mathematics.Vector2
    name: Vector2
    href: OpenTK.Mathematics.Vector2.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Mathematics.Vector2
    name: Vector2
    href: OpenTK.Mathematics.Vector2.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: OpenTK.Mathematics.Vector2[]
  isExternal: true
  href: OpenTK.Mathematics.Vector2.html
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: OpenTK.Mathematics.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: OpenTK.Mathematics.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: OpenTK.Mathematics.Vector2
    name: Vector2
    href: OpenTK.Mathematics.Vector2.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: OpenTK.Mathematics.Vector2
    name: Vector2
    href: OpenTK.Mathematics.Vector2.html
  - name: (
  - name: )
- uid: OpenTK.Mathematics.BezierCurve.CalculatePoint*
  commentId: Overload:OpenTK.Mathematics.BezierCurve.CalculatePoint
  href: OpenTK.Mathematics.BezierCurve.html#OpenTK_Mathematics_BezierCurve_CalculatePoint_System_Single_
  name: CalculatePoint
  nameWithType: BezierCurve.CalculatePoint
  fullName: OpenTK.Mathematics.BezierCurve.CalculatePoint
- uid: OpenTK.Mathematics.Vector2
  commentId: T:OpenTK.Mathematics.Vector2
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector2.html
  name: Vector2
  nameWithType: Vector2
  fullName: OpenTK.Mathematics.Vector2
- uid: OpenTK.Mathematics.BezierCurve.CalculateLength*
  commentId: Overload:OpenTK.Mathematics.BezierCurve.CalculateLength
  href: OpenTK.Mathematics.BezierCurve.html#OpenTK_Mathematics_BezierCurve_CalculateLength_System_Single_
  name: CalculateLength
  nameWithType: BezierCurve.CalculateLength
  fullName: OpenTK.Mathematics.BezierCurve.CalculateLength
