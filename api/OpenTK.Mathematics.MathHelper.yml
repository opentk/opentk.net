### YamlMime:ManagedReference
items:
- uid: OpenTK.Mathematics.MathHelper
  commentId: T:OpenTK.Mathematics.MathHelper
  id: MathHelper
  parent: OpenTK.Mathematics
  children:
  - OpenTK.Mathematics.MathHelper.ApproximatelyEqual(System.Single,System.Single,System.Int32)
  - OpenTK.Mathematics.MathHelper.ApproximatelyEqualEpsilon(System.Double,System.Double,System.Double)
  - OpenTK.Mathematics.MathHelper.ApproximatelyEqualEpsilon(System.Single,System.Single,System.Single)
  - OpenTK.Mathematics.MathHelper.ApproximatelyEquivalent(System.Double,System.Double,System.Double)
  - OpenTK.Mathematics.MathHelper.ApproximatelyEquivalent(System.Single,System.Single,System.Single)
  - OpenTK.Mathematics.MathHelper.BinomialCoefficient(System.Int32,System.Int32)
  - OpenTK.Mathematics.MathHelper.ClampAngle(System.Double)
  - OpenTK.Mathematics.MathHelper.ClampAngle(System.Single)
  - OpenTK.Mathematics.MathHelper.ClampRadians(System.Double)
  - OpenTK.Mathematics.MathHelper.ClampRadians(System.Single)
  - OpenTK.Mathematics.MathHelper.DegreesToRadians(System.Double)
  - OpenTK.Mathematics.MathHelper.DegreesToRadians(System.Single)
  - OpenTK.Mathematics.MathHelper.E
  - OpenTK.Mathematics.MathHelper.Elerp(System.Double,System.Double,System.Double)
  - OpenTK.Mathematics.MathHelper.Elerp(System.Single,System.Single,System.Single)
  - OpenTK.Mathematics.MathHelper.Factorial(System.Int32)
  - OpenTK.Mathematics.MathHelper.Lerp(System.Double,System.Double,System.Double)
  - OpenTK.Mathematics.MathHelper.Lerp(System.Single,System.Single,System.Single)
  - OpenTK.Mathematics.MathHelper.Log10E
  - OpenTK.Mathematics.MathHelper.Log2E
  - OpenTK.Mathematics.MathHelper.MapRange(System.Double,System.Double,System.Double,System.Double,System.Double)
  - OpenTK.Mathematics.MathHelper.MapRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - OpenTK.Mathematics.MathHelper.MapRange(System.Single,System.Single,System.Single,System.Single,System.Single)
  - OpenTK.Mathematics.MathHelper.NextPowerOfTwo(System.Double)
  - OpenTK.Mathematics.MathHelper.NextPowerOfTwo(System.Int32)
  - OpenTK.Mathematics.MathHelper.NextPowerOfTwo(System.Int64)
  - OpenTK.Mathematics.MathHelper.NextPowerOfTwo(System.Single)
  - OpenTK.Mathematics.MathHelper.NormalizeAngle(System.Double)
  - OpenTK.Mathematics.MathHelper.NormalizeAngle(System.Single)
  - OpenTK.Mathematics.MathHelper.NormalizeRadians(System.Double)
  - OpenTK.Mathematics.MathHelper.NormalizeRadians(System.Single)
  - OpenTK.Mathematics.MathHelper.Pi
  - OpenTK.Mathematics.MathHelper.PiOver2
  - OpenTK.Mathematics.MathHelper.PiOver3
  - OpenTK.Mathematics.MathHelper.PiOver4
  - OpenTK.Mathematics.MathHelper.PiOver6
  - OpenTK.Mathematics.MathHelper.RadiansToDegrees(System.Double)
  - OpenTK.Mathematics.MathHelper.RadiansToDegrees(System.Single)
  - OpenTK.Mathematics.MathHelper.Swap``1(``0@,``0@)
  - OpenTK.Mathematics.MathHelper.ThreePiOver2
  - OpenTK.Mathematics.MathHelper.TwoPi
  langs:
  - csharp
  - vb
  name: MathHelper
  nameWithType: MathHelper
  fullName: OpenTK.Mathematics.MathHelper
  type: Class
  source:
    id: MathHelper
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 18
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Contains common mathematical functions and constants.
  example: []
  syntax:
    content: public static class MathHelper
    content.vb: Public Module MathHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OpenTK.Mathematics.MathHelper.Pi
  commentId: F:OpenTK.Mathematics.MathHelper.Pi
  id: Pi
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: Pi
  nameWithType: MathHelper.Pi
  fullName: OpenTK.Mathematics.MathHelper.Pi
  type: Field
  source:
    id: Pi
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 23
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines the value of Pi as a <xref href="System.Single" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public const float Pi = 3.1415927
    return:
      type: System.Single
    content.vb: Public Const Pi As Single = 3.1415927
- uid: OpenTK.Mathematics.MathHelper.PiOver2
  commentId: F:OpenTK.Mathematics.MathHelper.PiOver2
  id: PiOver2
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: PiOver2
  nameWithType: MathHelper.PiOver2
  fullName: OpenTK.Mathematics.MathHelper.PiOver2
  type: Field
  source:
    id: PiOver2
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 28
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines the value of Pi divided by two as a <xref href="System.Single" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public const float PiOver2 = 1.5707964
    return:
      type: System.Single
    content.vb: Public Const PiOver2 As Single = 1.5707964
- uid: OpenTK.Mathematics.MathHelper.PiOver3
  commentId: F:OpenTK.Mathematics.MathHelper.PiOver3
  id: PiOver3
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: PiOver3
  nameWithType: MathHelper.PiOver3
  fullName: OpenTK.Mathematics.MathHelper.PiOver3
  type: Field
  source:
    id: PiOver3
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 33
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines the value of Pi divided by three as a <xref href="System.Single" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public const float PiOver3 = 1.0471976
    return:
      type: System.Single
    content.vb: Public Const PiOver3 As Single = 1.0471976
- uid: OpenTK.Mathematics.MathHelper.PiOver4
  commentId: F:OpenTK.Mathematics.MathHelper.PiOver4
  id: PiOver4
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: PiOver4
  nameWithType: MathHelper.PiOver4
  fullName: OpenTK.Mathematics.MathHelper.PiOver4
  type: Field
  source:
    id: PiOver4
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 38
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines the value of  Pi divided by four as a <xref href="System.Single" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public const float PiOver4 = 0.7853982
    return:
      type: System.Single
    content.vb: Public Const PiOver4 As Single = 0.7853982
- uid: OpenTK.Mathematics.MathHelper.PiOver6
  commentId: F:OpenTK.Mathematics.MathHelper.PiOver6
  id: PiOver6
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: PiOver6
  nameWithType: MathHelper.PiOver6
  fullName: OpenTK.Mathematics.MathHelper.PiOver6
  type: Field
  source:
    id: PiOver6
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 43
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines the value of Pi divided by six as a <xref href="System.Single" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public const float PiOver6 = 0.5235988
    return:
      type: System.Single
    content.vb: Public Const PiOver6 As Single = 0.5235988
- uid: OpenTK.Mathematics.MathHelper.TwoPi
  commentId: F:OpenTK.Mathematics.MathHelper.TwoPi
  id: TwoPi
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: TwoPi
  nameWithType: MathHelper.TwoPi
  fullName: OpenTK.Mathematics.MathHelper.TwoPi
  type: Field
  source:
    id: TwoPi
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 48
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines the value of Pi multiplied by two as a <xref href="System.Single" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public const float TwoPi = 6.2831855
    return:
      type: System.Single
    content.vb: Public Const TwoPi As Single = 6.2831855
- uid: OpenTK.Mathematics.MathHelper.ThreePiOver2
  commentId: F:OpenTK.Mathematics.MathHelper.ThreePiOver2
  id: ThreePiOver2
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: ThreePiOver2
  nameWithType: MathHelper.ThreePiOver2
  fullName: OpenTK.Mathematics.MathHelper.ThreePiOver2
  type: Field
  source:
    id: ThreePiOver2
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 53
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines the value of Pi multiplied by 3 and divided by two as a <xref href="System.Single" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public const float ThreePiOver2 = 4.712389
    return:
      type: System.Single
    content.vb: Public Const ThreePiOver2 As Single = 4.712389
- uid: OpenTK.Mathematics.MathHelper.E
  commentId: F:OpenTK.Mathematics.MathHelper.E
  id: E
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: E
  nameWithType: MathHelper.E
  fullName: OpenTK.Mathematics.MathHelper.E
  type: Field
  source:
    id: E
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 58
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines the value of E as a <xref href="System.Single" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public const float E = 2.7182817
    return:
      type: System.Single
    content.vb: Public Const E As Single = 2.7182817
- uid: OpenTK.Mathematics.MathHelper.Log10E
  commentId: F:OpenTK.Mathematics.MathHelper.Log10E
  id: Log10E
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: Log10E
  nameWithType: MathHelper.Log10E
  fullName: OpenTK.Mathematics.MathHelper.Log10E
  type: Field
  source:
    id: Log10E
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 63
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines the base-10 logarithm of E.
  example: []
  syntax:
    content: public const float Log10E = 0.4342945
    return:
      type: System.Single
    content.vb: Public Const Log10E As Single = 0.4342945
- uid: OpenTK.Mathematics.MathHelper.Log2E
  commentId: F:OpenTK.Mathematics.MathHelper.Log2E
  id: Log2E
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: Log2E
  nameWithType: MathHelper.Log2E
  fullName: OpenTK.Mathematics.MathHelper.Log2E
  type: Field
  source:
    id: Log2E
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 68
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines the base-2 logarithm of E.
  example: []
  syntax:
    content: public const float Log2E = 1.442695
    return:
      type: System.Single
    content.vb: Public Const Log2E As Single = 1.442695
- uid: OpenTK.Mathematics.MathHelper.NextPowerOfTwo(System.Int64)
  commentId: M:OpenTK.Mathematics.MathHelper.NextPowerOfTwo(System.Int64)
  id: NextPowerOfTwo(System.Int64)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: NextPowerOfTwo(long)
  nameWithType: MathHelper.NextPowerOfTwo(long)
  fullName: OpenTK.Mathematics.MathHelper.NextPowerOfTwo(long)
  type: Method
  source:
    id: NextPowerOfTwo
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 75
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the next power of two that is greater than or equal to the specified number.
  example: []
  syntax:
    content: >-
      [Pure]

      public static long NextPowerOfTwo(long n)
    parameters:
    - id: n
      type: System.Int64
      description: The specified number.
    return:
      type: System.Int64
      description: The next power of two.
    content.vb: >-
      <Pure>

      Public Shared Function NextPowerOfTwo(n As Long) As Long
  overload: OpenTK.Mathematics.MathHelper.NextPowerOfTwo*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: MathHelper.NextPowerOfTwo(Long)
  fullName.vb: OpenTK.Mathematics.MathHelper.NextPowerOfTwo(Long)
  name.vb: NextPowerOfTwo(Long)
- uid: OpenTK.Mathematics.MathHelper.NextPowerOfTwo(System.Int32)
  commentId: M:OpenTK.Mathematics.MathHelper.NextPowerOfTwo(System.Int32)
  id: NextPowerOfTwo(System.Int32)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: NextPowerOfTwo(int)
  nameWithType: MathHelper.NextPowerOfTwo(int)
  fullName: OpenTK.Mathematics.MathHelper.NextPowerOfTwo(int)
  type: Method
  source:
    id: NextPowerOfTwo
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 91
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the next power of two that is greater than or equal to the specified number.
  example: []
  syntax:
    content: >-
      [Pure]

      public static int NextPowerOfTwo(int n)
    parameters:
    - id: n
      type: System.Int32
      description: The specified number.
    return:
      type: System.Int32
      description: The next power of two.
    content.vb: >-
      <Pure>

      Public Shared Function NextPowerOfTwo(n As Integer) As Integer
  overload: OpenTK.Mathematics.MathHelper.NextPowerOfTwo*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: MathHelper.NextPowerOfTwo(Integer)
  fullName.vb: OpenTK.Mathematics.MathHelper.NextPowerOfTwo(Integer)
  name.vb: NextPowerOfTwo(Integer)
- uid: OpenTK.Mathematics.MathHelper.NextPowerOfTwo(System.Single)
  commentId: M:OpenTK.Mathematics.MathHelper.NextPowerOfTwo(System.Single)
  id: NextPowerOfTwo(System.Single)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: NextPowerOfTwo(float)
  nameWithType: MathHelper.NextPowerOfTwo(float)
  fullName: OpenTK.Mathematics.MathHelper.NextPowerOfTwo(float)
  type: Method
  source:
    id: NextPowerOfTwo
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 107
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the next power of two that is greater than or equal to the specified number.
  example: []
  syntax:
    content: >-
      [Pure]

      public static float NextPowerOfTwo(float n)
    parameters:
    - id: n
      type: System.Single
      description: The specified number.
    return:
      type: System.Single
      description: The next power of two.
    content.vb: >-
      <Pure>

      Public Shared Function NextPowerOfTwo(n As Single) As Single
  overload: OpenTK.Mathematics.MathHelper.NextPowerOfTwo*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: MathHelper.NextPowerOfTwo(Single)
  fullName.vb: OpenTK.Mathematics.MathHelper.NextPowerOfTwo(Single)
  name.vb: NextPowerOfTwo(Single)
- uid: OpenTK.Mathematics.MathHelper.NextPowerOfTwo(System.Double)
  commentId: M:OpenTK.Mathematics.MathHelper.NextPowerOfTwo(System.Double)
  id: NextPowerOfTwo(System.Double)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: NextPowerOfTwo(double)
  nameWithType: MathHelper.NextPowerOfTwo(double)
  fullName: OpenTK.Mathematics.MathHelper.NextPowerOfTwo(double)
  type: Method
  source:
    id: NextPowerOfTwo
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 123
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the next power of two that is greater than or equal to the specified number.
  example: []
  syntax:
    content: >-
      [Pure]

      public static double NextPowerOfTwo(double n)
    parameters:
    - id: n
      type: System.Double
      description: The specified number.
    return:
      type: System.Double
      description: The next power of two.
    content.vb: >-
      <Pure>

      Public Shared Function NextPowerOfTwo(n As Double) As Double
  overload: OpenTK.Mathematics.MathHelper.NextPowerOfTwo*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: MathHelper.NextPowerOfTwo(Double)
  fullName.vb: OpenTK.Mathematics.MathHelper.NextPowerOfTwo(Double)
  name.vb: NextPowerOfTwo(Double)
- uid: OpenTK.Mathematics.MathHelper.Factorial(System.Int32)
  commentId: M:OpenTK.Mathematics.MathHelper.Factorial(System.Int32)
  id: Factorial(System.Int32)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: Factorial(int)
  nameWithType: MathHelper.Factorial(int)
  fullName: OpenTK.Mathematics.MathHelper.Factorial(int)
  type: Method
  source:
    id: Factorial
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 139
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculates the factorial of a given natural number.
  example: []
  syntax:
    content: >-
      [Pure]

      public static long Factorial(int n)
    parameters:
    - id: n
      type: System.Int32
      description: The number.
    return:
      type: System.Int64
      description: The factorial of <code class="paramref">n</code>.
    content.vb: >-
      <Pure>

      Public Shared Function Factorial(n As Integer) As Long
  overload: OpenTK.Mathematics.MathHelper.Factorial*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: MathHelper.Factorial(Integer)
  fullName.vb: OpenTK.Mathematics.MathHelper.Factorial(Integer)
  name.vb: Factorial(Integer)
- uid: OpenTK.Mathematics.MathHelper.BinomialCoefficient(System.Int32,System.Int32)
  commentId: M:OpenTK.Mathematics.MathHelper.BinomialCoefficient(System.Int32,System.Int32)
  id: BinomialCoefficient(System.Int32,System.Int32)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: BinomialCoefficient(int, int)
  nameWithType: MathHelper.BinomialCoefficient(int, int)
  fullName: OpenTK.Mathematics.MathHelper.BinomialCoefficient(int, int)
  type: Method
  source:
    id: BinomialCoefficient
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 158
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculates the binomial coefficient <code class="paramref">n</code> above <code class="paramref">k</code>.
  example: []
  syntax:
    content: >-
      [Pure]

      public static long BinomialCoefficient(int n, int k)
    parameters:
    - id: n
      type: System.Int32
      description: The n.
    - id: k
      type: System.Int32
      description: The k.
    return:
      type: System.Int64
      description: n! / (k! * (n - k)!).
    content.vb: >-
      <Pure>

      Public Shared Function BinomialCoefficient(n As Integer, k As Integer) As Long
  overload: OpenTK.Mathematics.MathHelper.BinomialCoefficient*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: MathHelper.BinomialCoefficient(Integer, Integer)
  fullName.vb: OpenTK.Mathematics.MathHelper.BinomialCoefficient(Integer, Integer)
  name.vb: BinomialCoefficient(Integer, Integer)
- uid: OpenTK.Mathematics.MathHelper.DegreesToRadians(System.Single)
  commentId: M:OpenTK.Mathematics.MathHelper.DegreesToRadians(System.Single)
  id: DegreesToRadians(System.Single)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: DegreesToRadians(float)
  nameWithType: MathHelper.DegreesToRadians(float)
  fullName: OpenTK.Mathematics.MathHelper.DegreesToRadians(float)
  type: Method
  source:
    id: DegreesToRadians
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 169
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Convert degrees to radians.
  example: []
  syntax:
    content: >-
      [Pure]

      public static float DegreesToRadians(float degrees)
    parameters:
    - id: degrees
      type: System.Single
      description: An angle in degrees.
    return:
      type: System.Single
      description: The angle expressed in radians.
    content.vb: >-
      <Pure>

      Public Shared Function DegreesToRadians(degrees As Single) As Single
  overload: OpenTK.Mathematics.MathHelper.DegreesToRadians*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: MathHelper.DegreesToRadians(Single)
  fullName.vb: OpenTK.Mathematics.MathHelper.DegreesToRadians(Single)
  name.vb: DegreesToRadians(Single)
- uid: OpenTK.Mathematics.MathHelper.RadiansToDegrees(System.Single)
  commentId: M:OpenTK.Mathematics.MathHelper.RadiansToDegrees(System.Single)
  id: RadiansToDegrees(System.Single)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: RadiansToDegrees(float)
  nameWithType: MathHelper.RadiansToDegrees(float)
  fullName: OpenTK.Mathematics.MathHelper.RadiansToDegrees(float)
  type: Method
  source:
    id: RadiansToDegrees
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 181
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Convert radians to degrees.
  example: []
  syntax:
    content: >-
      [Pure]

      public static float RadiansToDegrees(float radians)
    parameters:
    - id: radians
      type: System.Single
      description: An angle in radians.
    return:
      type: System.Single
      description: The angle expressed in degrees.
    content.vb: >-
      <Pure>

      Public Shared Function RadiansToDegrees(radians As Single) As Single
  overload: OpenTK.Mathematics.MathHelper.RadiansToDegrees*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: MathHelper.RadiansToDegrees(Single)
  fullName.vb: OpenTK.Mathematics.MathHelper.RadiansToDegrees(Single)
  name.vb: RadiansToDegrees(Single)
- uid: OpenTK.Mathematics.MathHelper.DegreesToRadians(System.Double)
  commentId: M:OpenTK.Mathematics.MathHelper.DegreesToRadians(System.Double)
  id: DegreesToRadians(System.Double)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: DegreesToRadians(double)
  nameWithType: MathHelper.DegreesToRadians(double)
  fullName: OpenTK.Mathematics.MathHelper.DegreesToRadians(double)
  type: Method
  source:
    id: DegreesToRadians
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 193
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Convert degrees to radians.
  example: []
  syntax:
    content: >-
      [Pure]

      public static double DegreesToRadians(double degrees)
    parameters:
    - id: degrees
      type: System.Double
      description: An angle in degrees.
    return:
      type: System.Double
      description: The angle expressed in radians.
    content.vb: >-
      <Pure>

      Public Shared Function DegreesToRadians(degrees As Double) As Double
  overload: OpenTK.Mathematics.MathHelper.DegreesToRadians*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: MathHelper.DegreesToRadians(Double)
  fullName.vb: OpenTK.Mathematics.MathHelper.DegreesToRadians(Double)
  name.vb: DegreesToRadians(Double)
- uid: OpenTK.Mathematics.MathHelper.RadiansToDegrees(System.Double)
  commentId: M:OpenTK.Mathematics.MathHelper.RadiansToDegrees(System.Double)
  id: RadiansToDegrees(System.Double)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: RadiansToDegrees(double)
  nameWithType: MathHelper.RadiansToDegrees(double)
  fullName: OpenTK.Mathematics.MathHelper.RadiansToDegrees(double)
  type: Method
  source:
    id: RadiansToDegrees
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 205
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Convert radians to degrees.
  example: []
  syntax:
    content: >-
      [Pure]

      public static double RadiansToDegrees(double radians)
    parameters:
    - id: radians
      type: System.Double
      description: An angle in radians.
    return:
      type: System.Double
      description: The angle expressed in degrees.
    content.vb: >-
      <Pure>

      Public Shared Function RadiansToDegrees(radians As Double) As Double
  overload: OpenTK.Mathematics.MathHelper.RadiansToDegrees*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: MathHelper.RadiansToDegrees(Double)
  fullName.vb: OpenTK.Mathematics.MathHelper.RadiansToDegrees(Double)
  name.vb: RadiansToDegrees(Double)
- uid: OpenTK.Mathematics.MathHelper.Swap``1(``0@,``0@)
  commentId: M:OpenTK.Mathematics.MathHelper.Swap``1(``0@,``0@)
  id: Swap``1(``0@,``0@)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: Swap<T>(ref T, ref T)
  nameWithType: MathHelper.Swap<T>(ref T, ref T)
  fullName: OpenTK.Mathematics.MathHelper.Swap<T>(ref T, ref T)
  type: Method
  source:
    id: Swap
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 218
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Swaps two values.
  example: []
  syntax:
    content: public static void Swap<T>(ref T a, ref T b)
    parameters:
    - id: a
      type: '{T}'
      description: The first value.
    - id: b
      type: '{T}'
      description: The second value.
    typeParameters:
    - id: T
      description: The type of the values to swap.
    content.vb: Public Shared Sub Swap(Of T)(a As T, b As T)
  overload: OpenTK.Mathematics.MathHelper.Swap*
  nameWithType.vb: MathHelper.Swap(Of T)(T, T)
  fullName.vb: OpenTK.Mathematics.MathHelper.Swap(Of T)(T, T)
  name.vb: Swap(Of T)(T, T)
- uid: OpenTK.Mathematics.MathHelper.MapRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:OpenTK.Mathematics.MathHelper.MapRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: MapRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: MapRange(int, int, int, int, int)
  nameWithType: MathHelper.MapRange(int, int, int, int, int)
  fullName: OpenTK.Mathematics.MathHelper.MapRange(int, int, int, int, int)
  type: Method
  source:
    id: MapRange
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 230
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scales the specified number linearly between a minimum and a maximum.
  remarks: If the value range is zero, this function will throw a divide by zero exception.
  example: []
  syntax:
    content: >-
      [Pure]

      public static int MapRange(int value, int valueMin, int valueMax, int resultMin, int resultMax)
    parameters:
    - id: value
      type: System.Int32
      description: The number to scale.
    - id: valueMin
      type: System.Int32
      description: The minimum expected number (inclusive).
    - id: valueMax
      type: System.Int32
      description: The maximum expected number (inclusive).
    - id: resultMin
      type: System.Int32
      description: The minimum output number (inclusive).
    - id: resultMax
      type: System.Int32
      description: The maximum output number (inclusive).
    return:
      type: System.Int32
      description: The number, scaled linearly between min and max.
    content.vb: >-
      <Pure>

      Public Shared Function MapRange(value As Integer, valueMin As Integer, valueMax As Integer, resultMin As Integer, resultMax As Integer) As Integer
  overload: OpenTK.Mathematics.MathHelper.MapRange*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: MathHelper.MapRange(Integer, Integer, Integer, Integer, Integer)
  fullName.vb: OpenTK.Mathematics.MathHelper.MapRange(Integer, Integer, Integer, Integer, Integer)
  name.vb: MapRange(Integer, Integer, Integer, Integer, Integer)
- uid: OpenTK.Mathematics.MathHelper.MapRange(System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:OpenTK.Mathematics.MathHelper.MapRange(System.Single,System.Single,System.Single,System.Single,System.Single)
  id: MapRange(System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: MapRange(float, float, float, float, float)
  nameWithType: MathHelper.MapRange(float, float, float, float, float)
  fullName: OpenTK.Mathematics.MathHelper.MapRange(float, float, float, float, float)
  type: Method
  source:
    id: MapRange
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 248
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scales the specified number linearly between a minimum and a maximum.
  remarks: If the value range is zero, this function will throw a divide by zero exception.
  example: []
  syntax:
    content: >-
      [Pure]

      public static float MapRange(float value, float valueMin, float valueMax, float resultMin, float resultMax)
    parameters:
    - id: value
      type: System.Single
      description: The number to scale.
    - id: valueMin
      type: System.Single
      description: The minimum expected number (inclusive).
    - id: valueMax
      type: System.Single
      description: The maximum expected number (inclusive).
    - id: resultMin
      type: System.Single
      description: The minimum output number (inclusive).
    - id: resultMax
      type: System.Single
      description: The maximum output number (inclusive).
    return:
      type: System.Single
      description: The number, scaled linearly between min and max.
    content.vb: >-
      <Pure>

      Public Shared Function MapRange(value As Single, valueMin As Single, valueMax As Single, resultMin As Single, resultMax As Single) As Single
  overload: OpenTK.Mathematics.MathHelper.MapRange*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: MathHelper.MapRange(Single, Single, Single, Single, Single)
  fullName.vb: OpenTK.Mathematics.MathHelper.MapRange(Single, Single, Single, Single, Single)
  name.vb: MapRange(Single, Single, Single, Single, Single)
- uid: OpenTK.Mathematics.MathHelper.MapRange(System.Double,System.Double,System.Double,System.Double,System.Double)
  commentId: M:OpenTK.Mathematics.MathHelper.MapRange(System.Double,System.Double,System.Double,System.Double,System.Double)
  id: MapRange(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: MapRange(double, double, double, double, double)
  nameWithType: MathHelper.MapRange(double, double, double, double, double)
  fullName: OpenTK.Mathematics.MathHelper.MapRange(double, double, double, double, double)
  type: Method
  source:
    id: MapRange
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 266
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scales the specified number linearly between a minimum and a maximum.
  remarks: If the value range is zero, this function will throw a divide by zero exception.
  example: []
  syntax:
    content: >-
      [Pure]

      public static double MapRange(double value, double valueMin, double valueMax, double resultMin, double resultMax)
    parameters:
    - id: value
      type: System.Double
      description: The number to scale.
    - id: valueMin
      type: System.Double
      description: The minimum expected number (inclusive).
    - id: valueMax
      type: System.Double
      description: The maximum expected number (inclusive).
    - id: resultMin
      type: System.Double
      description: The minimum output number (inclusive).
    - id: resultMax
      type: System.Double
      description: The maximum output number (inclusive).
    return:
      type: System.Double
      description: The number, scaled linearly between min and max.
    content.vb: >-
      <Pure>

      Public Shared Function MapRange(value As Double, valueMin As Double, valueMax As Double, resultMin As Double, resultMax As Double) As Double
  overload: OpenTK.Mathematics.MathHelper.MapRange*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: MathHelper.MapRange(Double, Double, Double, Double, Double)
  fullName.vb: OpenTK.Mathematics.MathHelper.MapRange(Double, Double, Double, Double, Double)
  name.vb: MapRange(Double, Double, Double, Double, Double)
- uid: OpenTK.Mathematics.MathHelper.ApproximatelyEqual(System.Single,System.Single,System.Int32)
  commentId: M:OpenTK.Mathematics.MathHelper.ApproximatelyEqual(System.Single,System.Single,System.Int32)
  id: ApproximatelyEqual(System.Single,System.Single,System.Int32)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: ApproximatelyEqual(float, float, int)
  nameWithType: MathHelper.ApproximatelyEqual(float, float, int)
  fullName: OpenTK.Mathematics.MathHelper.ApproximatelyEqual(float, float, int)
  type: Method
  source:
    id: ApproximatelyEqual
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 284
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Approximates floating point equality with a maximum number of different bits.

    This is typically used in place of an epsilon comparison.

    see: https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/

    see: https://stackoverflow.com/questions/3874627/floating-point-comparison-functions-for-c-sharp.
  example: []
  syntax:
    content: >-
      [Pure]

      public static bool ApproximatelyEqual(float a, float b, int maxDeltaBits)
    parameters:
    - id: a
      type: System.Single
      description: the first value to compare.
    - id: b
      type: System.Single
      description: '>the second value to compare.'
    - id: maxDeltaBits
      type: System.Int32
      description: the number of floating point bits to check.
    return:
      type: System.Boolean
      description: true if the values are approximately equal; otherwise, false.
    content.vb: >-
      <Pure>

      Public Shared Function ApproximatelyEqual(a As Single, b As Single, maxDeltaBits As Integer) As Boolean
  overload: OpenTK.Mathematics.MathHelper.ApproximatelyEqual*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: MathHelper.ApproximatelyEqual(Single, Single, Integer)
  fullName.vb: OpenTK.Mathematics.MathHelper.ApproximatelyEqual(Single, Single, Integer)
  name.vb: ApproximatelyEqual(Single, Single, Integer)
- uid: OpenTK.Mathematics.MathHelper.ApproximatelyEqualEpsilon(System.Double,System.Double,System.Double)
  commentId: M:OpenTK.Mathematics.MathHelper.ApproximatelyEqualEpsilon(System.Double,System.Double,System.Double)
  id: ApproximatelyEqualEpsilon(System.Double,System.Double,System.Double)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: ApproximatelyEqualEpsilon(double, double, double)
  nameWithType: MathHelper.ApproximatelyEqualEpsilon(double, double, double)
  fullName: OpenTK.Mathematics.MathHelper.ApproximatelyEqualEpsilon(double, double, double)
  type: Method
  source:
    id: ApproximatelyEqualEpsilon
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 315
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Approximates double-precision floating point equality by an epsilon (maximum error) value.

    This method is designed as a "fits-all" solution and attempts to handle as many cases as possible.
  example: []
  syntax:
    content: >-
      [Pure]

      public static bool ApproximatelyEqualEpsilon(double a, double b, double epsilon)
    parameters:
    - id: a
      type: System.Double
      description: The first float.
    - id: b
      type: System.Double
      description: The second float.
    - id: epsilon
      type: System.Double
      description: The maximum error between the two.
    return:
      type: System.Boolean
      description: >-
        <returns>true</returns> if the values are approximately equal within the error margin; otherwise,

        <returns>false</returns>.
    content.vb: >-
      <Pure>

      Public Shared Function ApproximatelyEqualEpsilon(a As Double, b As Double, epsilon As Double) As Boolean
  overload: OpenTK.Mathematics.MathHelper.ApproximatelyEqualEpsilon*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: MathHelper.ApproximatelyEqualEpsilon(Double, Double, Double)
  fullName.vb: OpenTK.Mathematics.MathHelper.ApproximatelyEqualEpsilon(Double, Double, Double)
  name.vb: ApproximatelyEqualEpsilon(Double, Double, Double)
- uid: OpenTK.Mathematics.MathHelper.ApproximatelyEqualEpsilon(System.Single,System.Single,System.Single)
  commentId: M:OpenTK.Mathematics.MathHelper.ApproximatelyEqualEpsilon(System.Single,System.Single,System.Single)
  id: ApproximatelyEqualEpsilon(System.Single,System.Single,System.Single)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: ApproximatelyEqualEpsilon(float, float, float)
  nameWithType: MathHelper.ApproximatelyEqualEpsilon(float, float, float)
  fullName: OpenTK.Mathematics.MathHelper.ApproximatelyEqualEpsilon(float, float, float)
  type: Method
  source:
    id: ApproximatelyEqualEpsilon
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 352
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Approximates single-precision floating point equality by an epsilon (maximum error) value.

    This method is designed as a "fits-all" solution and attempts to handle as many cases as possible.
  example: []
  syntax:
    content: >-
      [Pure]

      public static bool ApproximatelyEqualEpsilon(float a, float b, float epsilon)
    parameters:
    - id: a
      type: System.Single
      description: The first float.
    - id: b
      type: System.Single
      description: The second float.
    - id: epsilon
      type: System.Single
      description: The maximum error between the two.
    return:
      type: System.Boolean
      description: >-
        <returns>true</returns> if the values are approximately equal within the error margin; otherwise,
         <returns>false</returns>.
    content.vb: >-
      <Pure>

      Public Shared Function ApproximatelyEqualEpsilon(a As Single, b As Single, epsilon As Single) As Boolean
  overload: OpenTK.Mathematics.MathHelper.ApproximatelyEqualEpsilon*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: MathHelper.ApproximatelyEqualEpsilon(Single, Single, Single)
  fullName.vb: OpenTK.Mathematics.MathHelper.ApproximatelyEqualEpsilon(Single, Single, Single)
  name.vb: ApproximatelyEqualEpsilon(Single, Single, Single)
- uid: OpenTK.Mathematics.MathHelper.ApproximatelyEquivalent(System.Single,System.Single,System.Single)
  commentId: M:OpenTK.Mathematics.MathHelper.ApproximatelyEquivalent(System.Single,System.Single,System.Single)
  id: ApproximatelyEquivalent(System.Single,System.Single,System.Single)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: ApproximatelyEquivalent(float, float, float)
  nameWithType: MathHelper.ApproximatelyEquivalent(float, float, float)
  fullName: OpenTK.Mathematics.MathHelper.ApproximatelyEquivalent(float, float, float)
  type: Method
  source:
    id: ApproximatelyEquivalent
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 389
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Approximates equivalence between two single-precision floating-point numbers on a direct human scale.

    It is important to note that this does not approximate equality - instead, it merely checks whether or not

    two numbers could be considered equivalent to each other within a certain tolerance. The tolerance is

    inclusive.
  example: []
  syntax:
    content: >-
      [Pure]

      public static bool ApproximatelyEquivalent(float a, float b, float tolerance)
    parameters:
    - id: a
      type: System.Single
      description: The first value to compare.
    - id: b
      type: System.Single
      description: The second value to compare.
    - id: tolerance
      type: System.Single
      description: The tolerance within which the two values would be considered equivalent.
    return:
      type: System.Boolean
      description: Whether or not the values can be considered equivalent within the tolerance.
    content.vb: >-
      <Pure>

      Public Shared Function ApproximatelyEquivalent(a As Single, b As Single, tolerance As Single) As Boolean
  overload: OpenTK.Mathematics.MathHelper.ApproximatelyEquivalent*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: MathHelper.ApproximatelyEquivalent(Single, Single, Single)
  fullName.vb: OpenTK.Mathematics.MathHelper.ApproximatelyEquivalent(Single, Single, Single)
  name.vb: ApproximatelyEquivalent(Single, Single, Single)
- uid: OpenTK.Mathematics.MathHelper.ApproximatelyEquivalent(System.Double,System.Double,System.Double)
  commentId: M:OpenTK.Mathematics.MathHelper.ApproximatelyEquivalent(System.Double,System.Double,System.Double)
  id: ApproximatelyEquivalent(System.Double,System.Double,System.Double)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: ApproximatelyEquivalent(double, double, double)
  nameWithType: MathHelper.ApproximatelyEquivalent(double, double, double)
  fullName: OpenTK.Mathematics.MathHelper.ApproximatelyEquivalent(double, double, double)
  type: Method
  source:
    id: ApproximatelyEquivalent
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 413
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Approximates equivalence between two double-precision floating-point numbers on a direct human scale.

    It is important to note that this does not approximate equality - instead, it merely checks whether or not

    two numbers could be considered equivalent to each other within a certain tolerance. The tolerance is

    inclusive.
  example: []
  syntax:
    content: >-
      [Pure]

      public static bool ApproximatelyEquivalent(double a, double b, double tolerance)
    parameters:
    - id: a
      type: System.Double
      description: The first value to compare.
    - id: b
      type: System.Double
      description: The second value to compare.
    - id: tolerance
      type: System.Double
      description: The tolerance within which the two values would be considered equivalent.
    return:
      type: System.Boolean
      description: Whether or not the values can be considered equivalent within the tolerance.
    content.vb: >-
      <Pure>

      Public Shared Function ApproximatelyEquivalent(a As Double, b As Double, tolerance As Double) As Boolean
  overload: OpenTK.Mathematics.MathHelper.ApproximatelyEquivalent*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: MathHelper.ApproximatelyEquivalent(Double, Double, Double)
  fullName.vb: OpenTK.Mathematics.MathHelper.ApproximatelyEquivalent(Double, Double, Double)
  name.vb: ApproximatelyEquivalent(Double, Double, Double)
- uid: OpenTK.Mathematics.MathHelper.Lerp(System.Single,System.Single,System.Single)
  commentId: M:OpenTK.Mathematics.MathHelper.Lerp(System.Single,System.Single,System.Single)
  id: Lerp(System.Single,System.Single,System.Single)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: Lerp(float, float, float)
  nameWithType: MathHelper.Lerp(float, float, float)
  fullName: OpenTK.Mathematics.MathHelper.Lerp(float, float, float)
  type: Method
  source:
    id: Lerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 434
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Linearly interpolates between <code class="paramref">start</code> and <code class="paramref">end</code> by <code class="paramref">t</code>.
  example: []
  syntax:
    content: >-
      [Pure]

      public static float Lerp(float start, float end, float t)
    parameters:
    - id: start
      type: System.Single
      description: Start value.
    - id: end
      type: System.Single
      description: End value.
    - id: t
      type: System.Single
      description: Value of the interpolation between <code class="paramref">start</code> and <code class="paramref">end</code>. Not clamped.
    return:
      type: System.Single
      description: The interpolated result between the <code class="paramref">start</code> and <code class="paramref">end</code> values.
    content.vb: >-
      <Pure>

      Public Shared Function Lerp(start As Single, [end] As Single, t As Single) As Single
  overload: OpenTK.Mathematics.MathHelper.Lerp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: MathHelper.Lerp(Single, Single, Single)
  fullName.vb: OpenTK.Mathematics.MathHelper.Lerp(Single, Single, Single)
  name.vb: Lerp(Single, Single, Single)
- uid: OpenTK.Mathematics.MathHelper.Lerp(System.Double,System.Double,System.Double)
  commentId: M:OpenTK.Mathematics.MathHelper.Lerp(System.Double,System.Double,System.Double)
  id: Lerp(System.Double,System.Double,System.Double)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: Lerp(double, double, double)
  nameWithType: MathHelper.Lerp(double, double, double)
  fullName: OpenTK.Mathematics.MathHelper.Lerp(double, double, double)
  type: Method
  source:
    id: Lerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 447
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Linearly interpolates between <code class="paramref">start</code> and <code class="paramref">end</code> by <code class="paramref">t</code>.
  example: []
  syntax:
    content: >-
      [Pure]

      public static double Lerp(double start, double end, double t)
    parameters:
    - id: start
      type: System.Double
      description: Start value.
    - id: end
      type: System.Double
      description: End value.
    - id: t
      type: System.Double
      description: Value of the interpolation between <code class="paramref">start</code> and <code class="paramref">end</code>. Not clamped.
    return:
      type: System.Double
      description: The interpolated result between the <code class="paramref">start</code> and <code class="paramref">end</code> values.
    content.vb: >-
      <Pure>

      Public Shared Function Lerp(start As Double, [end] As Double, t As Double) As Double
  overload: OpenTK.Mathematics.MathHelper.Lerp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: MathHelper.Lerp(Double, Double, Double)
  fullName.vb: OpenTK.Mathematics.MathHelper.Lerp(Double, Double, Double)
  name.vb: Lerp(Double, Double, Double)
- uid: OpenTK.Mathematics.MathHelper.Elerp(System.Single,System.Single,System.Single)
  commentId: M:OpenTK.Mathematics.MathHelper.Elerp(System.Single,System.Single,System.Single)
  id: Elerp(System.Single,System.Single,System.Single)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: Elerp(float, float, float)
  nameWithType: MathHelper.Elerp(float, float, float)
  fullName: OpenTK.Mathematics.MathHelper.Elerp(float, float, float)
  type: Method
  source:
    id: Elerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 462
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Exponentially interpolates between <code class="paramref">start</code> and <code class="paramref">end</code> by <code class="paramref">t</code>.

    Equivalent to <code>start * pow(end/start, t)</code>.

    Useful for scaling and zooms where constant change in <code class="paramref">t</code> should result in a multiplicative change in output.
  example: []
  syntax:
    content: public static float Elerp(float start, float end, float t)
    parameters:
    - id: start
      type: System.Single
      description: Start value. Must be non-negative.
    - id: end
      type: System.Single
      description: End value. Must be non-negative.
    - id: t
      type: System.Single
      description: Value of the interpolation between <code class="paramref">start</code> and <code class="paramref">end</code>. Not clamped.
    return:
      type: System.Single
      description: The interpolated result between the <code class="paramref">start</code> and <code class="paramref">end</code> values.
    content.vb: Public Shared Function Elerp(start As Single, [end] As Single, t As Single) As Single
  overload: OpenTK.Mathematics.MathHelper.Elerp*
  nameWithType.vb: MathHelper.Elerp(Single, Single, Single)
  fullName.vb: OpenTK.Mathematics.MathHelper.Elerp(Single, Single, Single)
  name.vb: Elerp(Single, Single, Single)
- uid: OpenTK.Mathematics.MathHelper.Elerp(System.Double,System.Double,System.Double)
  commentId: M:OpenTK.Mathematics.MathHelper.Elerp(System.Double,System.Double,System.Double)
  id: Elerp(System.Double,System.Double,System.Double)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: Elerp(double, double, double)
  nameWithType: MathHelper.Elerp(double, double, double)
  fullName: OpenTK.Mathematics.MathHelper.Elerp(double, double, double)
  type: Method
  source:
    id: Elerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 476
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Exponentially interpolates between <code class="paramref">start</code> and <code class="paramref">end</code> by <code class="paramref">t</code>.

    Equivalent to <code>start * pow(end/start, t)</code>.

    Useful for scaling and zooms where constant change in <code class="paramref">t</code> should result in a multiplicative change in output.
  example: []
  syntax:
    content: public static double Elerp(double start, double end, double t)
    parameters:
    - id: start
      type: System.Double
      description: Start value. Must be non-negative.
    - id: end
      type: System.Double
      description: End value. Must be non-negative.
    - id: t
      type: System.Double
      description: Value of the interpolation between <code class="paramref">start</code> and <code class="paramref">end</code>. Not clamped.
    return:
      type: System.Double
      description: The interpolated result between the <code class="paramref">start</code> and <code class="paramref">end</code> values.
    content.vb: Public Shared Function Elerp(start As Double, [end] As Double, t As Double) As Double
  overload: OpenTK.Mathematics.MathHelper.Elerp*
  nameWithType.vb: MathHelper.Elerp(Double, Double, Double)
  fullName.vb: OpenTK.Mathematics.MathHelper.Elerp(Double, Double, Double)
  name.vb: Elerp(Double, Double, Double)
- uid: OpenTK.Mathematics.MathHelper.NormalizeAngle(System.Single)
  commentId: M:OpenTK.Mathematics.MathHelper.NormalizeAngle(System.Single)
  id: NormalizeAngle(System.Single)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: NormalizeAngle(float)
  nameWithType: MathHelper.NormalizeAngle(float)
  fullName: OpenTK.Mathematics.MathHelper.NormalizeAngle(float)
  type: Method
  source:
    id: NormalizeAngle
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 486
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Normalizes an angle to the range (-180, 180].
  example: []
  syntax:
    content: public static float NormalizeAngle(float angle)
    parameters:
    - id: angle
      type: System.Single
      description: The angle in degrees to normalize.
    return:
      type: System.Single
      description: The normalized angle in the range (-180, 180].
    content.vb: Public Shared Function NormalizeAngle(angle As Single) As Single
  overload: OpenTK.Mathematics.MathHelper.NormalizeAngle*
  nameWithType.vb: MathHelper.NormalizeAngle(Single)
  fullName.vb: OpenTK.Mathematics.MathHelper.NormalizeAngle(Single)
  name.vb: NormalizeAngle(Single)
- uid: OpenTK.Mathematics.MathHelper.NormalizeAngle(System.Double)
  commentId: M:OpenTK.Mathematics.MathHelper.NormalizeAngle(System.Double)
  id: NormalizeAngle(System.Double)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: NormalizeAngle(double)
  nameWithType: MathHelper.NormalizeAngle(double)
  fullName: OpenTK.Mathematics.MathHelper.NormalizeAngle(double)
  type: Method
  source:
    id: NormalizeAngle
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 505
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Normalizes an angle to the range (-180, 180].
  example: []
  syntax:
    content: public static double NormalizeAngle(double angle)
    parameters:
    - id: angle
      type: System.Double
      description: The angle in degrees to normalize.
    return:
      type: System.Double
      description: The normalized angle in the range (-180, 180].
    content.vb: Public Shared Function NormalizeAngle(angle As Double) As Double
  overload: OpenTK.Mathematics.MathHelper.NormalizeAngle*
  nameWithType.vb: MathHelper.NormalizeAngle(Double)
  fullName.vb: OpenTK.Mathematics.MathHelper.NormalizeAngle(Double)
  name.vb: NormalizeAngle(Double)
- uid: OpenTK.Mathematics.MathHelper.NormalizeRadians(System.Single)
  commentId: M:OpenTK.Mathematics.MathHelper.NormalizeRadians(System.Single)
  id: NormalizeRadians(System.Single)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: NormalizeRadians(float)
  nameWithType: MathHelper.NormalizeRadians(float)
  fullName: OpenTK.Mathematics.MathHelper.NormalizeRadians(float)
  type: Method
  source:
    id: NormalizeRadians
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 524
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Normalizes an angle to the range (-π, π].
  example: []
  syntax:
    content: public static float NormalizeRadians(float angle)
    parameters:
    - id: angle
      type: System.Single
      description: The angle in radians to normalize.
    return:
      type: System.Single
      description: The normalized angle in the range (-π, π].
    content.vb: Public Shared Function NormalizeRadians(angle As Single) As Single
  overload: OpenTK.Mathematics.MathHelper.NormalizeRadians*
  nameWithType.vb: MathHelper.NormalizeRadians(Single)
  fullName.vb: OpenTK.Mathematics.MathHelper.NormalizeRadians(Single)
  name.vb: NormalizeRadians(Single)
- uid: OpenTK.Mathematics.MathHelper.NormalizeRadians(System.Double)
  commentId: M:OpenTK.Mathematics.MathHelper.NormalizeRadians(System.Double)
  id: NormalizeRadians(System.Double)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: NormalizeRadians(double)
  nameWithType: MathHelper.NormalizeRadians(double)
  fullName: OpenTK.Mathematics.MathHelper.NormalizeRadians(double)
  type: Method
  source:
    id: NormalizeRadians
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 543
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Normalizes an angle to the range (-π, π].
  example: []
  syntax:
    content: public static double NormalizeRadians(double angle)
    parameters:
    - id: angle
      type: System.Double
      description: The angle in radians to normalize.
    return:
      type: System.Double
      description: The normalized angle in the range (-π, π].
    content.vb: Public Shared Function NormalizeRadians(angle As Double) As Double
  overload: OpenTK.Mathematics.MathHelper.NormalizeRadians*
  nameWithType.vb: MathHelper.NormalizeRadians(Double)
  fullName.vb: OpenTK.Mathematics.MathHelper.NormalizeRadians(Double)
  name.vb: NormalizeRadians(Double)
- uid: OpenTK.Mathematics.MathHelper.ClampAngle(System.Single)
  commentId: M:OpenTK.Mathematics.MathHelper.ClampAngle(System.Single)
  id: ClampAngle(System.Single)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: ClampAngle(float)
  nameWithType: MathHelper.ClampAngle(float)
  fullName: OpenTK.Mathematics.MathHelper.ClampAngle(float)
  type: Method
  source:
    id: ClampAngle
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 562
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Clamps an angle to the range [0, 360).
  example: []
  syntax:
    content: public static float ClampAngle(float angle)
    parameters:
    - id: angle
      type: System.Single
      description: The angle to clamp in degrees.
    return:
      type: System.Single
      description: The clamped angle in the range [0, 360).
    content.vb: Public Shared Function ClampAngle(angle As Single) As Single
  overload: OpenTK.Mathematics.MathHelper.ClampAngle*
  nameWithType.vb: MathHelper.ClampAngle(Single)
  fullName.vb: OpenTK.Mathematics.MathHelper.ClampAngle(Single)
  name.vb: ClampAngle(Single)
- uid: OpenTK.Mathematics.MathHelper.ClampAngle(System.Double)
  commentId: M:OpenTK.Mathematics.MathHelper.ClampAngle(System.Double)
  id: ClampAngle(System.Double)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: ClampAngle(double)
  nameWithType: MathHelper.ClampAngle(double)
  fullName: OpenTK.Mathematics.MathHelper.ClampAngle(double)
  type: Method
  source:
    id: ClampAngle
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 581
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Clamps an angle to the range [0, 360).
  example: []
  syntax:
    content: public static double ClampAngle(double angle)
    parameters:
    - id: angle
      type: System.Double
      description: The angle to clamp in degrees.
    return:
      type: System.Double
      description: The clamped angle in the range [0, 360).
    content.vb: Public Shared Function ClampAngle(angle As Double) As Double
  overload: OpenTK.Mathematics.MathHelper.ClampAngle*
  nameWithType.vb: MathHelper.ClampAngle(Double)
  fullName.vb: OpenTK.Mathematics.MathHelper.ClampAngle(Double)
  name.vb: ClampAngle(Double)
- uid: OpenTK.Mathematics.MathHelper.ClampRadians(System.Single)
  commentId: M:OpenTK.Mathematics.MathHelper.ClampRadians(System.Single)
  id: ClampRadians(System.Single)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: ClampRadians(float)
  nameWithType: MathHelper.ClampRadians(float)
  fullName: OpenTK.Mathematics.MathHelper.ClampRadians(float)
  type: Method
  source:
    id: ClampRadians
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 600
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Clamps an angle to the range [0, 2π).
  example: []
  syntax:
    content: public static float ClampRadians(float angle)
    parameters:
    - id: angle
      type: System.Single
      description: The angle to clamp in radians.
    return:
      type: System.Single
      description: The clamped angle in the range [0, 2π).
    content.vb: Public Shared Function ClampRadians(angle As Single) As Single
  overload: OpenTK.Mathematics.MathHelper.ClampRadians*
  nameWithType.vb: MathHelper.ClampRadians(Single)
  fullName.vb: OpenTK.Mathematics.MathHelper.ClampRadians(Single)
  name.vb: ClampRadians(Single)
- uid: OpenTK.Mathematics.MathHelper.ClampRadians(System.Double)
  commentId: M:OpenTK.Mathematics.MathHelper.ClampRadians(System.Double)
  id: ClampRadians(System.Double)
  parent: OpenTK.Mathematics.MathHelper
  langs:
  - csharp
  - vb
  name: ClampRadians(double)
  nameWithType: MathHelper.ClampRadians(double)
  fullName: OpenTK.Mathematics.MathHelper.ClampRadians(double)
  type: Method
  source:
    id: ClampRadians
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\MathHelper.cs
    startLine: 619
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Clamps an angle to the range [0, 2π).
  example: []
  syntax:
    content: public static double ClampRadians(double angle)
    parameters:
    - id: angle
      type: System.Double
      description: The angle to clamp in radians.
    return:
      type: System.Double
      description: The clamped angle in the range [0, 2π).
    content.vb: Public Shared Function ClampRadians(angle As Double) As Double
  overload: OpenTK.Mathematics.MathHelper.ClampRadians*
  nameWithType.vb: MathHelper.ClampRadians(Double)
  fullName.vb: OpenTK.Mathematics.MathHelper.ClampRadians(Double)
  name.vb: ClampRadians(Double)
references:
- uid: OpenTK.Mathematics
  commentId: N:OpenTK.Mathematics
  href: OpenTK.html
  name: OpenTK.Mathematics
  nameWithType: OpenTK.Mathematics
  fullName: OpenTK.Mathematics
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: OpenTK.Mathematics.MathHelper.NextPowerOfTwo*
  commentId: Overload:OpenTK.Mathematics.MathHelper.NextPowerOfTwo
  href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_NextPowerOfTwo_System_Int64_
  name: NextPowerOfTwo
  nameWithType: MathHelper.NextPowerOfTwo
  fullName: OpenTK.Mathematics.MathHelper.NextPowerOfTwo
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: OpenTK.Mathematics.MathHelper.Factorial*
  commentId: Overload:OpenTK.Mathematics.MathHelper.Factorial
  href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_Factorial_System_Int32_
  name: Factorial
  nameWithType: MathHelper.Factorial
  fullName: OpenTK.Mathematics.MathHelper.Factorial
- uid: OpenTK.Mathematics.MathHelper.BinomialCoefficient*
  commentId: Overload:OpenTK.Mathematics.MathHelper.BinomialCoefficient
  href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_BinomialCoefficient_System_Int32_System_Int32_
  name: BinomialCoefficient
  nameWithType: MathHelper.BinomialCoefficient
  fullName: OpenTK.Mathematics.MathHelper.BinomialCoefficient
- uid: OpenTK.Mathematics.MathHelper.DegreesToRadians*
  commentId: Overload:OpenTK.Mathematics.MathHelper.DegreesToRadians
  href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_DegreesToRadians_System_Single_
  name: DegreesToRadians
  nameWithType: MathHelper.DegreesToRadians
  fullName: OpenTK.Mathematics.MathHelper.DegreesToRadians
- uid: OpenTK.Mathematics.MathHelper.RadiansToDegrees*
  commentId: Overload:OpenTK.Mathematics.MathHelper.RadiansToDegrees
  href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_RadiansToDegrees_System_Single_
  name: RadiansToDegrees
  nameWithType: MathHelper.RadiansToDegrees
  fullName: OpenTK.Mathematics.MathHelper.RadiansToDegrees
- uid: OpenTK.Mathematics.MathHelper.Swap*
  commentId: Overload:OpenTK.Mathematics.MathHelper.Swap
  href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_Swap__1___0____0__
  name: Swap
  nameWithType: MathHelper.Swap
  fullName: OpenTK.Mathematics.MathHelper.Swap
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: OpenTK.Mathematics.MathHelper.MapRange*
  commentId: Overload:OpenTK.Mathematics.MathHelper.MapRange
  href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_MapRange_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_
  name: MapRange
  nameWithType: MathHelper.MapRange
  fullName: OpenTK.Mathematics.MathHelper.MapRange
- uid: OpenTK.Mathematics.MathHelper.ApproximatelyEqual*
  commentId: Overload:OpenTK.Mathematics.MathHelper.ApproximatelyEqual
  href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_ApproximatelyEqual_System_Single_System_Single_System_Int32_
  name: ApproximatelyEqual
  nameWithType: MathHelper.ApproximatelyEqual
  fullName: OpenTK.Mathematics.MathHelper.ApproximatelyEqual
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenTK.Mathematics.MathHelper.ApproximatelyEqualEpsilon*
  commentId: Overload:OpenTK.Mathematics.MathHelper.ApproximatelyEqualEpsilon
  href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_ApproximatelyEqualEpsilon_System_Double_System_Double_System_Double_
  name: ApproximatelyEqualEpsilon
  nameWithType: MathHelper.ApproximatelyEqualEpsilon
  fullName: OpenTK.Mathematics.MathHelper.ApproximatelyEqualEpsilon
- uid: OpenTK.Mathematics.MathHelper.ApproximatelyEquivalent*
  commentId: Overload:OpenTK.Mathematics.MathHelper.ApproximatelyEquivalent
  href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_ApproximatelyEquivalent_System_Single_System_Single_System_Single_
  name: ApproximatelyEquivalent
  nameWithType: MathHelper.ApproximatelyEquivalent
  fullName: OpenTK.Mathematics.MathHelper.ApproximatelyEquivalent
- uid: OpenTK.Mathematics.MathHelper.Lerp*
  commentId: Overload:OpenTK.Mathematics.MathHelper.Lerp
  href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_Lerp_System_Single_System_Single_System_Single_
  name: Lerp
  nameWithType: MathHelper.Lerp
  fullName: OpenTK.Mathematics.MathHelper.Lerp
- uid: OpenTK.Mathematics.MathHelper.Elerp*
  commentId: Overload:OpenTK.Mathematics.MathHelper.Elerp
  href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_Elerp_System_Single_System_Single_System_Single_
  name: Elerp
  nameWithType: MathHelper.Elerp
  fullName: OpenTK.Mathematics.MathHelper.Elerp
- uid: OpenTK.Mathematics.MathHelper.NormalizeAngle*
  commentId: Overload:OpenTK.Mathematics.MathHelper.NormalizeAngle
  href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_NormalizeAngle_System_Single_
  name: NormalizeAngle
  nameWithType: MathHelper.NormalizeAngle
  fullName: OpenTK.Mathematics.MathHelper.NormalizeAngle
- uid: OpenTK.Mathematics.MathHelper.NormalizeRadians*
  commentId: Overload:OpenTK.Mathematics.MathHelper.NormalizeRadians
  href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_NormalizeRadians_System_Single_
  name: NormalizeRadians
  nameWithType: MathHelper.NormalizeRadians
  fullName: OpenTK.Mathematics.MathHelper.NormalizeRadians
- uid: OpenTK.Mathematics.MathHelper.ClampAngle*
  commentId: Overload:OpenTK.Mathematics.MathHelper.ClampAngle
  href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_ClampAngle_System_Single_
  name: ClampAngle
  nameWithType: MathHelper.ClampAngle
  fullName: OpenTK.Mathematics.MathHelper.ClampAngle
- uid: OpenTK.Mathematics.MathHelper.ClampRadians*
  commentId: Overload:OpenTK.Mathematics.MathHelper.ClampRadians
  href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_ClampRadians_System_Single_
  name: ClampRadians
  nameWithType: MathHelper.ClampRadians
  fullName: OpenTK.Mathematics.MathHelper.ClampRadians
