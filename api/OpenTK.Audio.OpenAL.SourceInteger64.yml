### YamlMime:ManagedReference
items:
- uid: OpenTK.Audio.OpenAL.SourceInteger64
  commentId: T:OpenTK.Audio.OpenAL.SourceInteger64
  id: SourceInteger64
  parent: OpenTK.Audio.OpenAL
  children:
  - OpenTK.Audio.OpenAL.SourceInteger64.SampleOffsetClock
  langs:
  - csharp
  - vb
  name: SourceInteger64
  nameWithType: SourceInteger64
  fullName: OpenTK.Audio.OpenAL.SourceInteger64
  type: Enum
  source:
    id: SourceInteger64
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\SOFT.DeviceClock\Enums\SourceInteger64.cs
    startLine: 6
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  syntax:
    content: public enum SourceInteger64
    content.vb: Public Enum SourceInteger64
- uid: OpenTK.Audio.OpenAL.SourceInteger64.SampleOffsetClock
  commentId: F:OpenTK.Audio.OpenAL.SourceInteger64.SampleOffsetClock
  id: SampleOffsetClock
  parent: OpenTK.Audio.OpenAL.SourceInteger64
  langs:
  - csharp
  - vb
  name: SampleOffsetClock
  nameWithType: SourceInteger64.SampleOffsetClock
  fullName: OpenTK.Audio.OpenAL.SourceInteger64.SampleOffsetClock
  type: Field
  source:
    id: SampleOffsetClock
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\SOFT.DeviceClock\Enums\SourceInteger64.cs
    startLine: 21
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: >-
    AL_SAMPLE_OFFSET_CLOCK_SOFT

    <br />

    The playback position, expressed in fixed-point samples, along with the device clock, expressed in nanoseconds.

    This attribute is read-only.

    <br />

    The first value in the returned vector is the sample offset, which is a 32.32 fixed-point value.

    The whole number is stored in the upper 32 bits and the fractional component is in the lower 32 bits.

    The value is similar to that returned by <xref href="OpenTK.Audio.OpenAL.ALSourcei.SampleOffset" data-throw-if-not-resolved="false"></xref>, just with more precision.

    <br />

    The second value is the device clock, in nanoseconds.

    This updates at the same rate as the offset, and both are measured atomically with respect to one another.
  example: []
  syntax:
    content: SampleOffsetClock = 4610
    return:
      type: OpenTK.Audio.OpenAL.SourceInteger64
references:
- uid: OpenTK.Audio.OpenAL
  commentId: N:OpenTK.Audio.OpenAL
  href: OpenTK.html
  name: OpenTK.Audio.OpenAL
  nameWithType: OpenTK.Audio.OpenAL
  fullName: OpenTK.Audio.OpenAL
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Audio
    name: Audio
    href: OpenTK.Audio.html
  - name: .
  - uid: OpenTK.Audio.OpenAL
    name: OpenAL
    href: OpenTK.Audio.OpenAL.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Audio
    name: Audio
    href: OpenTK.Audio.html
  - name: .
  - uid: OpenTK.Audio.OpenAL
    name: OpenAL
    href: OpenTK.Audio.OpenAL.html
- uid: OpenTK.Audio.OpenAL.ALSourcei.SampleOffset
  commentId: F:OpenTK.Audio.OpenAL.ALSourcei.SampleOffset
  href: OpenTK.Audio.OpenAL.ALSourcei.html#OpenTK_Audio_OpenAL_ALSourcei_SampleOffset
  name: SampleOffset
  nameWithType: ALSourcei.SampleOffset
  fullName: OpenTK.Audio.OpenAL.ALSourcei.SampleOffset
- uid: OpenTK.Audio.OpenAL.SourceInteger64
  commentId: T:OpenTK.Audio.OpenAL.SourceInteger64
  parent: OpenTK.Audio.OpenAL
  href: OpenTK.Audio.OpenAL.SourceInteger64.html
  name: SourceInteger64
  nameWithType: SourceInteger64
  fullName: OpenTK.Audio.OpenAL.SourceInteger64
