### YamlMime:ManagedReference
items:
- uid: OpenTK.Mathematics.Vector3d
  commentId: T:OpenTK.Mathematics.Vector3d
  id: Vector3d
  parent: OpenTK.Mathematics
  children:
  - OpenTK.Mathematics.Vector3d.#ctor(OpenTK.Mathematics.Vector2d,System.Double)
  - OpenTK.Mathematics.Vector3d.#ctor(System.Double)
  - OpenTK.Mathematics.Vector3d.#ctor(System.Double,System.Double,System.Double)
  - OpenTK.Mathematics.Vector3d.Abs
  - OpenTK.Mathematics.Vector3d.Abs(OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.Abs(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.Add(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.Add(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.BaryCentric(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,System.Double,System.Double)
  - OpenTK.Mathematics.Vector3d.BaryCentric(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double,System.Double,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.CalculateAngle(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.CalculateAngle(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double@)
  - OpenTK.Mathematics.Vector3d.Clamp(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.Clamp(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.ComponentMax(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.ComponentMax(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.ComponentMin(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.ComponentMin(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.Cross(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.Cross(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.Deconstruct(System.Double@,System.Double@,System.Double@)
  - OpenTK.Mathematics.Vector3d.Distance(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.Distance(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double@)
  - OpenTK.Mathematics.Vector3d.DistanceSquared(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.DistanceSquared(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double@)
  - OpenTK.Mathematics.Vector3d.Divide(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.Divide(OpenTK.Mathematics.Vector3d,System.Double)
  - OpenTK.Mathematics.Vector3d.Divide(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.Divide(OpenTK.Mathematics.Vector3d@,System.Double,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.Dot(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.Dot(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double@)
  - OpenTK.Mathematics.Vector3d.Elerp(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,System.Double)
  - OpenTK.Mathematics.Vector3d.Elerp(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.Equals(OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.Equals(System.Object)
  - OpenTK.Mathematics.Vector3d.GetHashCode
  - OpenTK.Mathematics.Vector3d.Item(System.Int32)
  - OpenTK.Mathematics.Vector3d.Length
  - OpenTK.Mathematics.Vector3d.LengthFast
  - OpenTK.Mathematics.Vector3d.LengthSquared
  - OpenTK.Mathematics.Vector3d.Lerp(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.Lerp(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,System.Double)
  - OpenTK.Mathematics.Vector3d.Lerp(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.Lerp(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.MagnitudeMax(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.MagnitudeMax(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.MagnitudeMin(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.MagnitudeMin(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.Multiply(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.Multiply(OpenTK.Mathematics.Vector3d,System.Double)
  - OpenTK.Mathematics.Vector3d.Multiply(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.Multiply(OpenTK.Mathematics.Vector3d@,System.Double,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.NegativeInfinity
  - OpenTK.Mathematics.Vector3d.Normalize
  - OpenTK.Mathematics.Vector3d.Normalize(OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.Normalize(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.NormalizeFast
  - OpenTK.Mathematics.Vector3d.NormalizeFast(OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.NormalizeFast(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.Normalized
  - OpenTK.Mathematics.Vector3d.One
  - OpenTK.Mathematics.Vector3d.PositiveInfinity
  - OpenTK.Mathematics.Vector3d.ReciprocalLengthFast
  - OpenTK.Mathematics.Vector3d.SizeInBytes
  - OpenTK.Mathematics.Vector3d.Slerp(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,System.Double)
  - OpenTK.Mathematics.Vector3d.Slerp(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.Subtract(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.Subtract(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.ToString
  - OpenTK.Mathematics.Vector3d.ToString(System.IFormatProvider)
  - OpenTK.Mathematics.Vector3d.ToString(System.String)
  - OpenTK.Mathematics.Vector3d.ToString(System.String,System.IFormatProvider)
  - OpenTK.Mathematics.Vector3d.Transform(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Quaterniond)
  - OpenTK.Mathematics.Vector3d.Transform(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Quaterniond@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.TransformColumn(OpenTK.Mathematics.Matrix3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.TransformColumn(OpenTK.Mathematics.Matrix3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.TransformNormal(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix4d)
  - OpenTK.Mathematics.Vector3d.TransformNormal(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.TransformNormalInverse(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix4d)
  - OpenTK.Mathematics.Vector3d.TransformNormalInverse(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.TransformPerspective(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix4d)
  - OpenTK.Mathematics.Vector3d.TransformPerspective(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.TransformPosition(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix4d)
  - OpenTK.Mathematics.Vector3d.TransformPosition(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.TransformRow(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix3d)
  - OpenTK.Mathematics.Vector3d.TransformRow(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix3d@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.TransformVector(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix4d)
  - OpenTK.Mathematics.Vector3d.TransformVector(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector3d@)
  - OpenTK.Mathematics.Vector3d.UnitX
  - OpenTK.Mathematics.Vector3d.UnitY
  - OpenTK.Mathematics.Vector3d.UnitZ
  - OpenTK.Mathematics.Vector3d.X
  - OpenTK.Mathematics.Vector3d.Xy
  - OpenTK.Mathematics.Vector3d.Xz
  - OpenTK.Mathematics.Vector3d.Xzy
  - OpenTK.Mathematics.Vector3d.Y
  - OpenTK.Mathematics.Vector3d.Yx
  - OpenTK.Mathematics.Vector3d.Yxz
  - OpenTK.Mathematics.Vector3d.Yz
  - OpenTK.Mathematics.Vector3d.Yzx
  - OpenTK.Mathematics.Vector3d.Z
  - OpenTK.Mathematics.Vector3d.Zero
  - OpenTK.Mathematics.Vector3d.Zx
  - OpenTK.Mathematics.Vector3d.Zxy
  - OpenTK.Mathematics.Vector3d.Zy
  - OpenTK.Mathematics.Vector3d.Zyx
  - OpenTK.Mathematics.Vector3d.op_Addition(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.op_Division(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.op_Division(OpenTK.Mathematics.Vector3d,System.Double)
  - OpenTK.Mathematics.Vector3d.op_Equality(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.op_Explicit(OpenTK.Mathematics.Vector3d)~OpenTK.Mathematics.Vector3
  - OpenTK.Mathematics.Vector3d.op_Explicit(OpenTK.Mathematics.Vector3d)~OpenTK.Mathematics.Vector3h
  - OpenTK.Mathematics.Vector3d.op_Explicit(OpenTK.Mathematics.Vector3d)~OpenTK.Mathematics.Vector3i
  - OpenTK.Mathematics.Vector3d.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double})~OpenTK.Mathematics.Vector3d
  - OpenTK.Mathematics.Vector3d.op_Inequality(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.op_Multiply(OpenTK.Mathematics.Matrix3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.op_Multiply(OpenTK.Mathematics.Quaterniond,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.op_Multiply(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix3d)
  - OpenTK.Mathematics.Vector3d.op_Multiply(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.op_Multiply(OpenTK.Mathematics.Vector3d,System.Double)
  - OpenTK.Mathematics.Vector3d.op_Multiply(System.Double,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.op_Subtraction(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  - OpenTK.Mathematics.Vector3d.op_UnaryNegation(OpenTK.Mathematics.Vector3d)
  langs:
  - csharp
  - vb
  name: Vector3d
  nameWithType: Vector3d
  fullName: OpenTK.Mathematics.Vector3d
  type: Struct
  source:
    id: Vector3d
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 34
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Represents a 3D vector using three double-precision floating-point numbers.
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct Vector3d : IEquatable<Vector3d>, IFormattable
    content.vb: >-
      <Serializable>

      Public Structure Vector3d Implements IEquatable(Of Vector3d), IFormattable
  implements:
  - System.IEquatable{OpenTK.Mathematics.Vector3d}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.X
  commentId: F:OpenTK.Mathematics.Vector3d.X
  id: X
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Vector3d.X
  fullName: OpenTK.Mathematics.Vector3d.X
  type: Field
  source:
    id: X
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 41
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The X component of the Vector3.
  example: []
  syntax:
    content: public double X
    return:
      type: System.Double
    content.vb: Public X As Double
- uid: OpenTK.Mathematics.Vector3d.Y
  commentId: F:OpenTK.Mathematics.Vector3d.Y
  id: Y
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Vector3d.Y
  fullName: OpenTK.Mathematics.Vector3d.Y
  type: Field
  source:
    id: Y
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 46
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The Y component of the Vector3.
  example: []
  syntax:
    content: public double Y
    return:
      type: System.Double
    content.vb: Public Y As Double
- uid: OpenTK.Mathematics.Vector3d.Z
  commentId: F:OpenTK.Mathematics.Vector3d.Z
  id: Z
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: Vector3d.Z
  fullName: OpenTK.Mathematics.Vector3d.Z
  type: Field
  source:
    id: Z
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 51
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The Z component of the Vector3.
  example: []
  syntax:
    content: public double Z
    return:
      type: System.Double
    content.vb: Public Z As Double
- uid: OpenTK.Mathematics.Vector3d.#ctor(System.Double)
  commentId: M:OpenTK.Mathematics.Vector3d.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Vector3d(double)
  nameWithType: Vector3d.Vector3d(double)
  fullName: OpenTK.Mathematics.Vector3d.Vector3d(double)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 57
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector3d" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector3d(double value)
    parameters:
    - id: value
      type: System.Double
      description: The value that will initialize this instance.
    content.vb: Public Sub New(value As Double)
  overload: OpenTK.Mathematics.Vector3d.#ctor*
  nameWithType.vb: Vector3d.New(Double)
  fullName.vb: OpenTK.Mathematics.Vector3d.New(Double)
  name.vb: New(Double)
- uid: OpenTK.Mathematics.Vector3d.#ctor(System.Double,System.Double,System.Double)
  commentId: M:OpenTK.Mathematics.Vector3d.#ctor(System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double)'
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Vector3d(double, double, double)
  nameWithType: Vector3d.Vector3d(double, double, double)
  fullName: OpenTK.Mathematics.Vector3d.Vector3d(double, double, double)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 70
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector3d" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector3d(double x, double y, double z)
    parameters:
    - id: x
      type: System.Double
      description: The x component of the Vector3d.
    - id: y
      type: System.Double
      description: The y component of the Vector3d.
    - id: z
      type: System.Double
      description: The z component of the Vector3d.
    content.vb: Public Sub New(x As Double, y As Double, z As Double)
  overload: OpenTK.Mathematics.Vector3d.#ctor*
  nameWithType.vb: Vector3d.New(Double, Double, Double)
  fullName.vb: OpenTK.Mathematics.Vector3d.New(Double, Double, Double)
  name.vb: New(Double, Double, Double)
- uid: OpenTK.Mathematics.Vector3d.#ctor(OpenTK.Mathematics.Vector2d,System.Double)
  commentId: M:OpenTK.Mathematics.Vector3d.#ctor(OpenTK.Mathematics.Vector2d,System.Double)
  id: '#ctor(OpenTK.Mathematics.Vector2d,System.Double)'
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Vector3d(Vector2d, double)
  nameWithType: Vector3d.Vector3d(Vector2d, double)
  fullName: OpenTK.Mathematics.Vector3d.Vector3d(OpenTK.Mathematics.Vector2d, double)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 82
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector3d" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector3d(Vector2d xy, double z = 0)
    parameters:
    - id: xy
      type: OpenTK.Mathematics.Vector2d
      description: The x and y components of the Vector3d.
    - id: z
      type: System.Double
      description: The z component of the Vector3d.
    content.vb: Public Sub New(xy As Vector2d, z As Double = 0)
  overload: OpenTK.Mathematics.Vector3d.#ctor*
  nameWithType.vb: Vector3d.New(Vector2d, Double)
  fullName.vb: OpenTK.Mathematics.Vector3d.New(OpenTK.Mathematics.Vector2d, Double)
  name.vb: New(Vector2d, Double)
- uid: OpenTK.Mathematics.Vector3d.Item(System.Int32)
  commentId: P:OpenTK.Mathematics.Vector3d.Item(System.Int32)
  id: Item(System.Int32)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: Vector3d.this[int]
  fullName: OpenTK.Mathematics.Vector3d.this[int]
  type: Property
  source:
    id: this[]
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 94
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the value at the index of the Vector.
  example: []
  syntax:
    content: public double this[int index] { readonly get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The index of the component from the Vector.
    return:
      type: System.Double
    content.vb: Public Default Property this[](index As Integer) As Double
  overload: OpenTK.Mathematics.Vector3d.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: Thrown if the index is less than 0 or greater than 2.
  nameWithType.vb: Vector3d.this[](Integer)
  fullName.vb: OpenTK.Mathematics.Vector3d.this[](Integer)
  name.vb: this[](Integer)
- uid: OpenTK.Mathematics.Vector3d.Length
  commentId: P:OpenTK.Mathematics.Vector3d.Length
  id: Length
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Vector3d.Length
  fullName: OpenTK.Mathematics.Vector3d.Length
  type: Property
  source:
    id: Length
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 142
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the length (magnitude) of the vector.
  example: []
  syntax:
    content: public readonly double Length { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Length As Double
  overload: OpenTK.Mathematics.Vector3d.Length*
  seealso:
  - linkId: OpenTK.Mathematics.Vector3d.LengthSquared
    commentId: P:OpenTK.Mathematics.Vector3d.LengthSquared
- uid: OpenTK.Mathematics.Vector3d.ReciprocalLengthFast
  commentId: P:OpenTK.Mathematics.Vector3d.ReciprocalLengthFast
  id: ReciprocalLengthFast
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: ReciprocalLengthFast
  nameWithType: Vector3d.ReciprocalLengthFast
  fullName: OpenTK.Mathematics.Vector3d.ReciprocalLengthFast
  type: Property
  source:
    id: ReciprocalLengthFast
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 147
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets an approximation of 1 over the length (magnitude) of the vector.
  example: []
  syntax:
    content: public readonly double ReciprocalLengthFast { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property ReciprocalLengthFast As Double
  overload: OpenTK.Mathematics.Vector3d.ReciprocalLengthFast*
- uid: OpenTK.Mathematics.Vector3d.LengthFast
  commentId: P:OpenTK.Mathematics.Vector3d.LengthFast
  id: LengthFast
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: LengthFast
  nameWithType: Vector3d.LengthFast
  fullName: OpenTK.Mathematics.Vector3d.LengthFast
  type: Property
  source:
    id: LengthFast
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 157
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets an approximation of the vector length (magnitude).
  remarks: This property uses an approximation of the square root function to calculate vector magnitude.
  example: []
  syntax:
    content: public readonly double LengthFast { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property LengthFast As Double
  overload: OpenTK.Mathematics.Vector3d.LengthFast*
  seealso:
  - linkId: OpenTK.Mathematics.Vector3d.LengthSquared
    commentId: P:OpenTK.Mathematics.Vector3d.LengthSquared
- uid: OpenTK.Mathematics.Vector3d.LengthSquared
  commentId: P:OpenTK.Mathematics.Vector3d.LengthSquared
  id: LengthSquared
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: LengthSquared
  nameWithType: Vector3d.LengthSquared
  fullName: OpenTK.Mathematics.Vector3d.LengthSquared
  type: Property
  source:
    id: LengthSquared
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 168
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the square of the vector length (magnitude).
  remarks: >-
    This property avoids the costly square root operation required by the Length property. This makes it more suitable

    for comparisons.
  example: []
  syntax:
    content: public readonly double LengthSquared { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property LengthSquared As Double
  overload: OpenTK.Mathematics.Vector3d.LengthSquared*
  seealso:
  - linkId: OpenTK.Mathematics.Vector3d.LengthFast
    commentId: P:OpenTK.Mathematics.Vector3d.LengthFast
- uid: OpenTK.Mathematics.Vector3d.Normalized
  commentId: M:OpenTK.Mathematics.Vector3d.Normalized
  id: Normalized
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Normalized()
  nameWithType: Vector3d.Normalized()
  fullName: OpenTK.Mathematics.Vector3d.Normalized()
  type: Method
  source:
    id: Normalized
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 174
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a copy of the Vector3d scaled to unit length.
  example: []
  syntax:
    content: public readonly Vector3d Normalized()
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The normalized copy.
    content.vb: Public Function Normalized() As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Normalized*
- uid: OpenTK.Mathematics.Vector3d.Normalize
  commentId: M:OpenTK.Mathematics.Vector3d.Normalize
  id: Normalize
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: Vector3d.Normalize()
  fullName: OpenTK.Mathematics.Vector3d.Normalize()
  type: Method
  source:
    id: Normalize
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 184
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scales the Vector3d to unit length.
  example: []
  syntax:
    content: public void Normalize()
    content.vb: Public Sub Normalize()
  overload: OpenTK.Mathematics.Vector3d.Normalize*
- uid: OpenTK.Mathematics.Vector3d.NormalizeFast
  commentId: M:OpenTK.Mathematics.Vector3d.NormalizeFast
  id: NormalizeFast
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: NormalizeFast()
  nameWithType: Vector3d.NormalizeFast()
  fullName: OpenTK.Mathematics.Vector3d.NormalizeFast()
  type: Method
  source:
    id: NormalizeFast
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 195
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scales the Vector3d to approximately unit length.
  example: []
  syntax:
    content: public void NormalizeFast()
    content.vb: Public Sub NormalizeFast()
  overload: OpenTK.Mathematics.Vector3d.NormalizeFast*
- uid: OpenTK.Mathematics.Vector3d.Abs
  commentId: M:OpenTK.Mathematics.Vector3d.Abs
  id: Abs
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Abs()
  nameWithType: Vector3d.Abs()
  fullName: OpenTK.Mathematics.Vector3d.Abs()
  type: Method
  source:
    id: Abs
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 207
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the component-wise absolute value of the vector.
  example: []
  syntax:
    content: public readonly Vector3d Abs()
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The component-wise absolute value vector.
    content.vb: Public Function Abs() As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Abs*
- uid: OpenTK.Mathematics.Vector3d.UnitX
  commentId: F:OpenTK.Mathematics.Vector3d.UnitX
  id: UnitX
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: UnitX
  nameWithType: Vector3d.UnitX
  fullName: OpenTK.Mathematics.Vector3d.UnitX
  type: Field
  source:
    id: UnitX
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 219
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length Vector3d that points towards the X-axis.
  example: []
  syntax:
    content: public static readonly Vector3d UnitX
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Shared ReadOnly UnitX As Vector3d
- uid: OpenTK.Mathematics.Vector3d.UnitY
  commentId: F:OpenTK.Mathematics.Vector3d.UnitY
  id: UnitY
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: UnitY
  nameWithType: Vector3d.UnitY
  fullName: OpenTK.Mathematics.Vector3d.UnitY
  type: Field
  source:
    id: UnitY
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 224
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length Vector3d that points towards the Y-axis.
  example: []
  syntax:
    content: public static readonly Vector3d UnitY
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Shared ReadOnly UnitY As Vector3d
- uid: OpenTK.Mathematics.Vector3d.UnitZ
  commentId: F:OpenTK.Mathematics.Vector3d.UnitZ
  id: UnitZ
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: UnitZ
  nameWithType: Vector3d.UnitZ
  fullName: OpenTK.Mathematics.Vector3d.UnitZ
  type: Field
  source:
    id: UnitZ
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 229
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length Vector3d that points towards the Z-axis.
  example: []
  syntax:
    content: public static readonly Vector3d UnitZ
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Shared ReadOnly UnitZ As Vector3d
- uid: OpenTK.Mathematics.Vector3d.Zero
  commentId: F:OpenTK.Mathematics.Vector3d.Zero
  id: Zero
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Vector3d.Zero
  fullName: OpenTK.Mathematics.Vector3d.Zero
  type: Field
  source:
    id: Zero
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 234
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to 0.
  example: []
  syntax:
    content: public static readonly Vector3d Zero
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Shared ReadOnly Zero As Vector3d
- uid: OpenTK.Mathematics.Vector3d.One
  commentId: F:OpenTK.Mathematics.Vector3d.One
  id: One
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Vector3d.One
  fullName: OpenTK.Mathematics.Vector3d.One
  type: Field
  source:
    id: One
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 239
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to 1.
  example: []
  syntax:
    content: public static readonly Vector3d One
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Shared ReadOnly One As Vector3d
- uid: OpenTK.Mathematics.Vector3d.PositiveInfinity
  commentId: F:OpenTK.Mathematics.Vector3d.PositiveInfinity
  id: PositiveInfinity
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: PositiveInfinity
  nameWithType: Vector3d.PositiveInfinity
  fullName: OpenTK.Mathematics.Vector3d.PositiveInfinity
  type: Field
  source:
    id: PositiveInfinity
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 244
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to positive infinity.
  example: []
  syntax:
    content: public static readonly Vector3d PositiveInfinity
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Shared ReadOnly PositiveInfinity As Vector3d
- uid: OpenTK.Mathematics.Vector3d.NegativeInfinity
  commentId: F:OpenTK.Mathematics.Vector3d.NegativeInfinity
  id: NegativeInfinity
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: NegativeInfinity
  nameWithType: Vector3d.NegativeInfinity
  fullName: OpenTK.Mathematics.Vector3d.NegativeInfinity
  type: Field
  source:
    id: NegativeInfinity
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 249
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to negative infinity.
  example: []
  syntax:
    content: public static readonly Vector3d NegativeInfinity
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Shared ReadOnly NegativeInfinity As Vector3d
- uid: OpenTK.Mathematics.Vector3d.SizeInBytes
  commentId: F:OpenTK.Mathematics.Vector3d.SizeInBytes
  id: SizeInBytes
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: SizeInBytes
  nameWithType: Vector3d.SizeInBytes
  fullName: OpenTK.Mathematics.Vector3d.SizeInBytes
  type: Field
  source:
    id: SizeInBytes
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 254
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines the size of the Vector3d struct in bytes.
  example: []
  syntax:
    content: public static readonly int SizeInBytes
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly SizeInBytes As Integer
- uid: OpenTK.Mathematics.Vector3d.Add(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.Add(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: Add(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Add(Vector3d, Vector3d)
  nameWithType: Vector3d.Add(Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Add(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Add
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 262
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d Add(Vector3d a, Vector3d b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3d
      description: Left operand.
    - id: b
      type: OpenTK.Mathematics.Vector3d
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: Result of operation.
    content.vb: >-
      <Pure>

      Public Shared Function Add(a As Vector3d, b As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Add*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.Add(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.Add(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  id: Add(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Add(in Vector3d, in Vector3d, out Vector3d)
  nameWithType: Vector3d.Add(in Vector3d, in Vector3d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Add(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Add
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 275
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two vectors.
  example: []
  syntax:
    content: public static void Add(in Vector3d a, in Vector3d b, out Vector3d result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3d
      description: Left operand.
    - id: b
      type: OpenTK.Mathematics.Vector3d
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: Result of operation.
    content.vb: Public Shared Sub Add(a As Vector3d, b As Vector3d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.Add*
  nameWithType.vb: Vector3d.Add(Vector3d, Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.Add(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: Add(Vector3d, Vector3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.Subtract(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.Subtract(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: Subtract(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Subtract(Vector3d, Vector3d)
  nameWithType: Vector3d.Subtract(Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Subtract(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Subtract
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 288
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtract one Vector from another.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d Subtract(Vector3d a, Vector3d b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3d
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector3d
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: Result of subtraction.
    content.vb: >-
      <Pure>

      Public Shared Function Subtract(a As Vector3d, b As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Subtract*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.Subtract(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.Subtract(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  id: Subtract(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Subtract(in Vector3d, in Vector3d, out Vector3d)
  nameWithType: Vector3d.Subtract(in Vector3d, in Vector3d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Subtract(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Subtract
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 301
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtract one Vector from another.
  example: []
  syntax:
    content: public static void Subtract(in Vector3d a, in Vector3d b, out Vector3d result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3d
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector3d
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: Result of subtraction.
    content.vb: Public Shared Sub Subtract(a As Vector3d, b As Vector3d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.Subtract*
  nameWithType.vb: Vector3d.Subtract(Vector3d, Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.Subtract(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: Subtract(Vector3d, Vector3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.Multiply(OpenTK.Mathematics.Vector3d,System.Double)
  commentId: M:OpenTK.Mathematics.Vector3d.Multiply(OpenTK.Mathematics.Vector3d,System.Double)
  id: Multiply(OpenTK.Mathematics.Vector3d,System.Double)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Multiply(Vector3d, double)
  nameWithType: Vector3d.Multiply(Vector3d, double)
  fullName: OpenTK.Mathematics.Vector3d.Multiply(OpenTK.Mathematics.Vector3d, double)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 314
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d Multiply(Vector3d vector, double scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3d
      description: Left operand.
    - id: scale
      type: System.Double
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Multiply(vector As Vector3d, scale As Double) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d.Multiply(Vector3d, Double)
  fullName.vb: OpenTK.Mathematics.Vector3d.Multiply(OpenTK.Mathematics.Vector3d, Double)
  name.vb: Multiply(Vector3d, Double)
- uid: OpenTK.Mathematics.Vector3d.Multiply(OpenTK.Mathematics.Vector3d@,System.Double,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.Multiply(OpenTK.Mathematics.Vector3d@,System.Double,OpenTK.Mathematics.Vector3d@)
  id: Multiply(OpenTK.Mathematics.Vector3d@,System.Double,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Multiply(in Vector3d, double, out Vector3d)
  nameWithType: Vector3d.Multiply(in Vector3d, double, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Multiply(in OpenTK.Mathematics.Vector3d, double, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 327
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by a scalar.
  example: []
  syntax:
    content: public static void Multiply(in Vector3d vector, double scale, out Vector3d result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3d
      description: Left operand.
    - id: scale
      type: System.Double
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: Result of the operation.
    content.vb: Public Shared Sub Multiply(vector As Vector3d, scale As Double, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.Multiply*
  nameWithType.vb: Vector3d.Multiply(Vector3d, Double, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.Multiply(OpenTK.Mathematics.Vector3d, Double, OpenTK.Mathematics.Vector3d)
  name.vb: Multiply(Vector3d, Double, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.Multiply(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.Multiply(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: Multiply(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Multiply(Vector3d, Vector3d)
  nameWithType: Vector3d.Multiply(Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Multiply(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 340
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by the components a vector (scale).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d Multiply(Vector3d vector, Vector3d scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3d
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector3d
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Multiply(vector As Vector3d, scale As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.Multiply(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.Multiply(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  id: Multiply(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Multiply(in Vector3d, in Vector3d, out Vector3d)
  nameWithType: Vector3d.Multiply(in Vector3d, in Vector3d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Multiply(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 353
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by the components of a vector (scale).
  example: []
  syntax:
    content: public static void Multiply(in Vector3d vector, in Vector3d scale, out Vector3d result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3d
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector3d
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: Result of the operation.
    content.vb: Public Shared Sub Multiply(vector As Vector3d, scale As Vector3d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.Multiply*
  nameWithType.vb: Vector3d.Multiply(Vector3d, Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.Multiply(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: Multiply(Vector3d, Vector3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.Divide(OpenTK.Mathematics.Vector3d,System.Double)
  commentId: M:OpenTK.Mathematics.Vector3d.Divide(OpenTK.Mathematics.Vector3d,System.Double)
  id: Divide(OpenTK.Mathematics.Vector3d,System.Double)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Divide(Vector3d, double)
  nameWithType: Vector3d.Divide(Vector3d, double)
  fullName: OpenTK.Mathematics.Vector3d.Divide(OpenTK.Mathematics.Vector3d, double)
  type: Method
  source:
    id: Divide
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 366
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d Divide(Vector3d vector, double scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3d
      description: Left operand.
    - id: scale
      type: System.Double
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Divide(vector As Vector3d, scale As Double) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Divide*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d.Divide(Vector3d, Double)
  fullName.vb: OpenTK.Mathematics.Vector3d.Divide(OpenTK.Mathematics.Vector3d, Double)
  name.vb: Divide(Vector3d, Double)
- uid: OpenTK.Mathematics.Vector3d.Divide(OpenTK.Mathematics.Vector3d@,System.Double,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.Divide(OpenTK.Mathematics.Vector3d@,System.Double,OpenTK.Mathematics.Vector3d@)
  id: Divide(OpenTK.Mathematics.Vector3d@,System.Double,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Divide(in Vector3d, double, out Vector3d)
  nameWithType: Vector3d.Divide(in Vector3d, double, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Divide(in OpenTK.Mathematics.Vector3d, double, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Divide
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 379
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by a scalar.
  example: []
  syntax:
    content: public static void Divide(in Vector3d vector, double scale, out Vector3d result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3d
      description: Left operand.
    - id: scale
      type: System.Double
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: Result of the operation.
    content.vb: Public Shared Sub Divide(vector As Vector3d, scale As Double, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.Divide*
  nameWithType.vb: Vector3d.Divide(Vector3d, Double, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.Divide(OpenTK.Mathematics.Vector3d, Double, OpenTK.Mathematics.Vector3d)
  name.vb: Divide(Vector3d, Double, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.Divide(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.Divide(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: Divide(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Divide(Vector3d, Vector3d)
  nameWithType: Vector3d.Divide(Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Divide(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Divide
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 392
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by the components of a vector (scale).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d Divide(Vector3d vector, Vector3d scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3d
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector3d
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Divide(vector As Vector3d, scale As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Divide*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.Divide(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.Divide(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  id: Divide(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Divide(in Vector3d, in Vector3d, out Vector3d)
  nameWithType: Vector3d.Divide(in Vector3d, in Vector3d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Divide(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Divide
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 405
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divide a vector by the components of a vector (scale).
  example: []
  syntax:
    content: public static void Divide(in Vector3d vector, in Vector3d scale, out Vector3d result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3d
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector3d
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: Result of the operation.
    content.vb: Public Shared Sub Divide(vector As Vector3d, scale As Vector3d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.Divide*
  nameWithType.vb: Vector3d.Divide(Vector3d, Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.Divide(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: Divide(Vector3d, Vector3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.ComponentMin(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.ComponentMin(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: ComponentMin(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: ComponentMin(Vector3d, Vector3d)
  nameWithType: Vector3d.ComponentMin(Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.ComponentMin(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: ComponentMin
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 418
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the smallest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d ComponentMin(Vector3d a, Vector3d b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3d
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector3d
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The component-wise minimum.
    content.vb: >-
      <Pure>

      Public Shared Function ComponentMin(a As Vector3d, b As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.ComponentMin*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.ComponentMin(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.ComponentMin(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  id: ComponentMin(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: ComponentMin(in Vector3d, in Vector3d, out Vector3d)
  nameWithType: Vector3d.ComponentMin(in Vector3d, in Vector3d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.ComponentMin(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: ComponentMin
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 433
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the smallest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: public static void ComponentMin(in Vector3d a, in Vector3d b, out Vector3d result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3d
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector3d
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: The component-wise minimum.
    content.vb: Public Shared Sub ComponentMin(a As Vector3d, b As Vector3d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.ComponentMin*
  nameWithType.vb: Vector3d.ComponentMin(Vector3d, Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.ComponentMin(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: ComponentMin(Vector3d, Vector3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.ComponentMax(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.ComponentMax(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: ComponentMax(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: ComponentMax(Vector3d, Vector3d)
  nameWithType: Vector3d.ComponentMax(Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.ComponentMax(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: ComponentMax
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 446
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the largest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d ComponentMax(Vector3d a, Vector3d b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3d
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector3d
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The component-wise maximum.
    content.vb: >-
      <Pure>

      Public Shared Function ComponentMax(a As Vector3d, b As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.ComponentMax*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.ComponentMax(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.ComponentMax(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  id: ComponentMax(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: ComponentMax(in Vector3d, in Vector3d, out Vector3d)
  nameWithType: Vector3d.ComponentMax(in Vector3d, in Vector3d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.ComponentMax(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: ComponentMax
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 461
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the largest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: public static void ComponentMax(in Vector3d a, in Vector3d b, out Vector3d result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3d
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector3d
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: The component-wise maximum.
    content.vb: Public Shared Sub ComponentMax(a As Vector3d, b As Vector3d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.ComponentMax*
  nameWithType.vb: Vector3d.ComponentMax(Vector3d, Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.ComponentMax(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: ComponentMax(Vector3d, Vector3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.MagnitudeMin(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.MagnitudeMin(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: MagnitudeMin(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: MagnitudeMin(Vector3d, Vector3d)
  nameWithType: Vector3d.MagnitudeMin(Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.MagnitudeMin(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: MagnitudeMin
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 474
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the Vector3d with the minimum magnitude.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d MagnitudeMin(Vector3d left, Vector3d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3d
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector3d
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The minimum Vector3d.
    content.vb: >-
      <Pure>

      Public Shared Function MagnitudeMin(left As Vector3d, right As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.MagnitudeMin*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.MagnitudeMin(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.MagnitudeMin(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  id: MagnitudeMin(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: MagnitudeMin(in Vector3d, in Vector3d, out Vector3d)
  nameWithType: Vector3d.MagnitudeMin(in Vector3d, in Vector3d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.MagnitudeMin(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: MagnitudeMin
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 486
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the Vector3d with the minimum magnitude.
  example: []
  syntax:
    content: public static void MagnitudeMin(in Vector3d left, in Vector3d right, out Vector3d result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3d
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector3d
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: The magnitude-wise minimum.
    content.vb: Public Shared Sub MagnitudeMin(left As Vector3d, right As Vector3d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.MagnitudeMin*
  nameWithType.vb: Vector3d.MagnitudeMin(Vector3d, Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.MagnitudeMin(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: MagnitudeMin(Vector3d, Vector3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.MagnitudeMax(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.MagnitudeMax(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: MagnitudeMax(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: MagnitudeMax(Vector3d, Vector3d)
  nameWithType: Vector3d.MagnitudeMax(Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.MagnitudeMax(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: MagnitudeMax
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 497
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the Vector3d with the minimum magnitude.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d MagnitudeMax(Vector3d left, Vector3d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3d
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector3d
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The minimum Vector3d.
    content.vb: >-
      <Pure>

      Public Shared Function MagnitudeMax(left As Vector3d, right As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.MagnitudeMax*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.MagnitudeMax(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.MagnitudeMax(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  id: MagnitudeMax(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: MagnitudeMax(in Vector3d, in Vector3d, out Vector3d)
  nameWithType: Vector3d.MagnitudeMax(in Vector3d, in Vector3d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.MagnitudeMax(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: MagnitudeMax
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 509
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the Vector3d with the maximum magnitude.
  example: []
  syntax:
    content: public static void MagnitudeMax(in Vector3d left, in Vector3d right, out Vector3d result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3d
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector3d
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: The magnitude-wise maximum.
    content.vb: Public Shared Sub MagnitudeMax(left As Vector3d, right As Vector3d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.MagnitudeMax*
  nameWithType.vb: Vector3d.MagnitudeMax(Vector3d, Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.MagnitudeMax(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: MagnitudeMax(Vector3d, Vector3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.Clamp(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.Clamp(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: Clamp(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Clamp(Vector3d, Vector3d, Vector3d)
  nameWithType: Vector3d.Clamp(Vector3d, Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Clamp(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Clamp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 521
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Clamp a vector to the given minimum and maximum vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d Clamp(Vector3d vec, Vector3d min, Vector3d max)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: Input vector.
    - id: min
      type: OpenTK.Mathematics.Vector3d
      description: Minimum vector.
    - id: max
      type: OpenTK.Mathematics.Vector3d
      description: Maximum vector.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The clamped vector.
    content.vb: >-
      <Pure>

      Public Shared Function Clamp(vec As Vector3d, min As Vector3d, max As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Clamp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.Clamp(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.Clamp(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  id: Clamp(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Clamp(in Vector3d, in Vector3d, in Vector3d, out Vector3d)
  nameWithType: Vector3d.Clamp(in Vector3d, in Vector3d, in Vector3d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Clamp(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Clamp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 537
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Clamp a vector to the given minimum and maximum vectors.
  example: []
  syntax:
    content: public static void Clamp(in Vector3d vec, in Vector3d min, in Vector3d max, out Vector3d result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: Input vector.
    - id: min
      type: OpenTK.Mathematics.Vector3d
      description: Minimum vector.
    - id: max
      type: OpenTK.Mathematics.Vector3d
      description: Maximum vector.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: The clamped vector.
    content.vb: Public Shared Sub Clamp(vec As Vector3d, min As Vector3d, max As Vector3d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.Clamp*
  nameWithType.vb: Vector3d.Clamp(Vector3d, Vector3d, Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.Clamp(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: Clamp(Vector3d, Vector3d, Vector3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.Abs(OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.Abs(OpenTK.Mathematics.Vector3d)
  id: Abs(OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Abs(Vector3d)
  nameWithType: Vector3d.Abs(Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Abs(OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Abs
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 549
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Take the component-wise absolute value of a vector.
  example: []
  syntax:
    content: public static Vector3d Abs(Vector3d vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The vector to apply component-wise absolute value to.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The component-wise absolute value vector.
    content.vb: Public Shared Function Abs(vec As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Abs*
- uid: OpenTK.Mathematics.Vector3d.Abs(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.Abs(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  id: Abs(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Abs(in Vector3d, out Vector3d)
  nameWithType: Vector3d.Abs(in Vector3d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Abs(in OpenTK.Mathematics.Vector3d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Abs
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 562
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Take the component-wise absolute value of a vector.
  example: []
  syntax:
    content: public static void Abs(in Vector3d vec, out Vector3d result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The vector to apply component-wise absolute value to.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: The component-wise absolute value vector.
    content.vb: Public Shared Sub Abs(vec As Vector3d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.Abs*
  nameWithType.vb: Vector3d.Abs(Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.Abs(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: Abs(Vector3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.Distance(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.Distance(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: Distance(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Distance(Vector3d, Vector3d)
  nameWithType: Vector3d.Distance(Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Distance(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Distance
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 575
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compute the euclidean distance between two vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static double Distance(Vector3d vec1, Vector3d vec2)
    parameters:
    - id: vec1
      type: OpenTK.Mathematics.Vector3d
      description: The first vector.
    - id: vec2
      type: OpenTK.Mathematics.Vector3d
      description: The second vector.
    return:
      type: System.Double
      description: The distance.
    content.vb: >-
      <Pure>

      Public Shared Function Distance(vec1 As Vector3d, vec2 As Vector3d) As Double
  overload: OpenTK.Mathematics.Vector3d.Distance*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.Distance(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double@)
  commentId: M:OpenTK.Mathematics.Vector3d.Distance(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double@)
  id: Distance(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Distance(in Vector3d, in Vector3d, out double)
  nameWithType: Vector3d.Distance(in Vector3d, in Vector3d, out double)
  fullName: OpenTK.Mathematics.Vector3d.Distance(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, out double)
  type: Method
  source:
    id: Distance
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 588
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compute the euclidean distance between two vectors.
  example: []
  syntax:
    content: public static void Distance(in Vector3d vec1, in Vector3d vec2, out double result)
    parameters:
    - id: vec1
      type: OpenTK.Mathematics.Vector3d
      description: The first vector.
    - id: vec2
      type: OpenTK.Mathematics.Vector3d
      description: The second vector.
    - id: result
      type: System.Double
      description: The distance.
    content.vb: Public Shared Sub Distance(vec1 As Vector3d, vec2 As Vector3d, result As Double)
  overload: OpenTK.Mathematics.Vector3d.Distance*
  nameWithType.vb: Vector3d.Distance(Vector3d, Vector3d, Double)
  fullName.vb: OpenTK.Mathematics.Vector3d.Distance(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, Double)
  name.vb: Distance(Vector3d, Vector3d, Double)
- uid: OpenTK.Mathematics.Vector3d.DistanceSquared(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.DistanceSquared(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: DistanceSquared(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: DistanceSquared(Vector3d, Vector3d)
  nameWithType: Vector3d.DistanceSquared(Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.DistanceSquared(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: DistanceSquared
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 600
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compute the squared euclidean distance between two vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static double DistanceSquared(Vector3d vec1, Vector3d vec2)
    parameters:
    - id: vec1
      type: OpenTK.Mathematics.Vector3d
      description: The first vector.
    - id: vec2
      type: OpenTK.Mathematics.Vector3d
      description: The second vector.
    return:
      type: System.Double
      description: The squared distance.
    content.vb: >-
      <Pure>

      Public Shared Function DistanceSquared(vec1 As Vector3d, vec2 As Vector3d) As Double
  overload: OpenTK.Mathematics.Vector3d.DistanceSquared*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.DistanceSquared(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double@)
  commentId: M:OpenTK.Mathematics.Vector3d.DistanceSquared(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double@)
  id: DistanceSquared(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: DistanceSquared(in Vector3d, in Vector3d, out double)
  nameWithType: Vector3d.DistanceSquared(in Vector3d, in Vector3d, out double)
  fullName: OpenTK.Mathematics.Vector3d.DistanceSquared(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, out double)
  type: Method
  source:
    id: DistanceSquared
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 613
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compute the squared euclidean distance between two vectors.
  example: []
  syntax:
    content: public static void DistanceSquared(in Vector3d vec1, in Vector3d vec2, out double result)
    parameters:
    - id: vec1
      type: OpenTK.Mathematics.Vector3d
      description: The first vector.
    - id: vec2
      type: OpenTK.Mathematics.Vector3d
      description: The second vector.
    - id: result
      type: System.Double
      description: The squared distance.
    content.vb: Public Shared Sub DistanceSquared(vec1 As Vector3d, vec2 As Vector3d, result As Double)
  overload: OpenTK.Mathematics.Vector3d.DistanceSquared*
  nameWithType.vb: Vector3d.DistanceSquared(Vector3d, Vector3d, Double)
  fullName.vb: OpenTK.Mathematics.Vector3d.DistanceSquared(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, Double)
  name.vb: DistanceSquared(Vector3d, Vector3d, Double)
- uid: OpenTK.Mathematics.Vector3d.Normalize(OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.Normalize(OpenTK.Mathematics.Vector3d)
  id: Normalize(OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Normalize(Vector3d)
  nameWithType: Vector3d.Normalize(Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Normalize(OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Normalize
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 624
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scale a vector to unit length.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d Normalize(Vector3d vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The input vector.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The normalized copy.
    content.vb: >-
      <Pure>

      Public Shared Function Normalize(vec As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Normalize*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.Normalize(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.Normalize(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  id: Normalize(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Normalize(in Vector3d, out Vector3d)
  nameWithType: Vector3d.Normalize(in Vector3d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Normalize(in OpenTK.Mathematics.Vector3d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Normalize
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 639
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scale a vector to unit length.
  example: []
  syntax:
    content: public static void Normalize(in Vector3d vec, out Vector3d result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The input vector.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: The normalized vector.
    content.vb: Public Shared Sub Normalize(vec As Vector3d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.Normalize*
  nameWithType.vb: Vector3d.Normalize(Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.Normalize(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: Normalize(Vector3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.NormalizeFast(OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.NormalizeFast(OpenTK.Mathematics.Vector3d)
  id: NormalizeFast(OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: NormalizeFast(Vector3d)
  nameWithType: Vector3d.NormalizeFast(Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.NormalizeFast(OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: NormalizeFast
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 652
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scale a vector to approximately unit length.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d NormalizeFast(Vector3d vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The input vector.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The normalized copy.
    content.vb: >-
      <Pure>

      Public Shared Function NormalizeFast(vec As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.NormalizeFast*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.NormalizeFast(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.NormalizeFast(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  id: NormalizeFast(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: NormalizeFast(in Vector3d, out Vector3d)
  nameWithType: Vector3d.NormalizeFast(in Vector3d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.NormalizeFast(in OpenTK.Mathematics.Vector3d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: NormalizeFast
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 667
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scale a vector to approximately unit length.
  example: []
  syntax:
    content: public static void NormalizeFast(in Vector3d vec, out Vector3d result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The input vector.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: The normalized vector.
    content.vb: Public Shared Sub NormalizeFast(vec As Vector3d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.NormalizeFast*
  nameWithType.vb: Vector3d.NormalizeFast(Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.NormalizeFast(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: NormalizeFast(Vector3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.Dot(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.Dot(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: Dot(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Dot(Vector3d, Vector3d)
  nameWithType: Vector3d.Dot(Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Dot(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Dot
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 681
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculate the dot (scalar) product of two vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static double Dot(Vector3d left, Vector3d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3d
      description: First operand.
    - id: right
      type: OpenTK.Mathematics.Vector3d
      description: Second operand.
    return:
      type: System.Double
      description: The dot product of the two inputs.
    content.vb: >-
      <Pure>

      Public Shared Function Dot(left As Vector3d, right As Vector3d) As Double
  overload: OpenTK.Mathematics.Vector3d.Dot*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.Dot(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double@)
  commentId: M:OpenTK.Mathematics.Vector3d.Dot(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double@)
  id: Dot(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Dot(in Vector3d, in Vector3d, out double)
  nameWithType: Vector3d.Dot(in Vector3d, in Vector3d, out double)
  fullName: OpenTK.Mathematics.Vector3d.Dot(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, out double)
  type: Method
  source:
    id: Dot
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 693
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculate the dot (scalar) product of two vectors.
  example: []
  syntax:
    content: public static void Dot(in Vector3d left, in Vector3d right, out double result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3d
      description: First operand.
    - id: right
      type: OpenTK.Mathematics.Vector3d
      description: Second operand.
    - id: result
      type: System.Double
      description: The dot product of the two inputs.
    content.vb: Public Shared Sub Dot(left As Vector3d, right As Vector3d, result As Double)
  overload: OpenTK.Mathematics.Vector3d.Dot*
  nameWithType.vb: Vector3d.Dot(Vector3d, Vector3d, Double)
  fullName.vb: OpenTK.Mathematics.Vector3d.Dot(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, Double)
  name.vb: Dot(Vector3d, Vector3d, Double)
- uid: OpenTK.Mathematics.Vector3d.Cross(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.Cross(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: Cross(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Cross(Vector3d, Vector3d)
  nameWithType: Vector3d.Cross(Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Cross(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Cross
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 704
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Caclulate the cross (vector) product of two vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d Cross(Vector3d left, Vector3d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3d
      description: First operand.
    - id: right
      type: OpenTK.Mathematics.Vector3d
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The cross product of the two inputs.
    content.vb: >-
      <Pure>

      Public Shared Function Cross(left As Vector3d, right As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Cross*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.Cross(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.Cross(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  id: Cross(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Cross(in Vector3d, in Vector3d, out Vector3d)
  nameWithType: Vector3d.Cross(in Vector3d, in Vector3d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Cross(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Cross
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 717
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Caclulate the cross (vector) product of two vectors.
  example: []
  syntax:
    content: public static void Cross(in Vector3d left, in Vector3d right, out Vector3d result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3d
      description: First operand.
    - id: right
      type: OpenTK.Mathematics.Vector3d
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: The cross product of the two inputs.
    content.vb: Public Shared Sub Cross(left As Vector3d, right As Vector3d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.Cross*
  nameWithType.vb: Vector3d.Cross(Vector3d, Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.Cross(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: Cross(Vector3d, Vector3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.Lerp(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,System.Double)
  commentId: M:OpenTK.Mathematics.Vector3d.Lerp(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,System.Double)
  id: Lerp(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,System.Double)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Lerp(Vector3d, Vector3d, double)
  nameWithType: Vector3d.Lerp(Vector3d, Vector3d, double)
  fullName: OpenTK.Mathematics.Vector3d.Lerp(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, double)
  type: Method
  source:
    id: Lerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 731
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the linear blend of the 2 given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d Lerp(Vector3d a, Vector3d b, double blend)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3d
      description: First input vector.
    - id: b
      type: OpenTK.Mathematics.Vector3d
      description: Second input vector.
    - id: blend
      type: System.Double
      description: The blend factor.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: a when blend=0, b when blend=1, and a linear combination otherwise.
    content.vb: >-
      <Pure>

      Public Shared Function Lerp(a As Vector3d, b As Vector3d, blend As Double) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Lerp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d.Lerp(Vector3d, Vector3d, Double)
  fullName.vb: OpenTK.Mathematics.Vector3d.Lerp(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, Double)
  name.vb: Lerp(Vector3d, Vector3d, Double)
- uid: OpenTK.Mathematics.Vector3d.Lerp(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.Lerp(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double,OpenTK.Mathematics.Vector3d@)
  id: Lerp(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Lerp(in Vector3d, in Vector3d, double, out Vector3d)
  nameWithType: Vector3d.Lerp(in Vector3d, in Vector3d, double, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Lerp(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, double, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Lerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 747
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the linear blend of the 2 given vectors.
  example: []
  syntax:
    content: public static void Lerp(in Vector3d a, in Vector3d b, double blend, out Vector3d result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3d
      description: First input vector.
    - id: b
      type: OpenTK.Mathematics.Vector3d
      description: Second input vector.
    - id: blend
      type: System.Double
      description: The blend factor.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: a when blend=0, b when blend=1, and a linear combination otherwise.
    content.vb: Public Shared Sub Lerp(a As Vector3d, b As Vector3d, blend As Double, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.Lerp*
  nameWithType.vb: Vector3d.Lerp(Vector3d, Vector3d, Double, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.Lerp(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, Double, OpenTK.Mathematics.Vector3d)
  name.vb: Lerp(Vector3d, Vector3d, Double, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.Lerp(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.Lerp(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: Lerp(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Lerp(Vector3d, Vector3d, Vector3d)
  nameWithType: Vector3d.Lerp(Vector3d, Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Lerp(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Lerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 761
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the component-wise linear blend of the 2 given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d Lerp(Vector3d a, Vector3d b, Vector3d blend)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3d
      description: First input vector.
    - id: b
      type: OpenTK.Mathematics.Vector3d
      description: Second input vector.
    - id: blend
      type: OpenTK.Mathematics.Vector3d
      description: The blend factor.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: a when blend=0, b when blend=1, and a component-wise linear combination otherwise.
    content.vb: >-
      <Pure>

      Public Shared Function Lerp(a As Vector3d, b As Vector3d, blend As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Lerp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.Lerp(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.Lerp(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d@)
  id: Lerp(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Lerp(in Vector3d, in Vector3d, Vector3d, out Vector3d)
  nameWithType: Vector3d.Lerp(in Vector3d, in Vector3d, Vector3d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Lerp(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Lerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 777
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the component-wise linear blend of the 2 given vectors.
  example: []
  syntax:
    content: public static void Lerp(in Vector3d a, in Vector3d b, Vector3d blend, out Vector3d result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3d
      description: First input vector.
    - id: b
      type: OpenTK.Mathematics.Vector3d
      description: Second input vector.
    - id: blend
      type: OpenTK.Mathematics.Vector3d
      description: The blend factor.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: a when blend=0, b when blend=1, and a component-wise linear combination otherwise.
    content.vb: Public Shared Sub Lerp(a As Vector3d, b As Vector3d, blend As Vector3d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.Lerp*
  nameWithType.vb: Vector3d.Lerp(Vector3d, Vector3d, Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.Lerp(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: Lerp(Vector3d, Vector3d, Vector3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.Slerp(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,System.Double)
  commentId: M:OpenTK.Mathematics.Vector3d.Slerp(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,System.Double)
  id: Slerp(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,System.Double)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Slerp(Vector3d, Vector3d, double)
  nameWithType: Vector3d.Slerp(Vector3d, Vector3d, double)
  fullName: OpenTK.Mathematics.Vector3d.Slerp(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, double)
  type: Method
  source:
    id: Slerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 792
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Returns a new vector that is the spherical interpolation of the two given vectors.

    <code class="paramref">a</code> and <code class="paramref">b</code> need to be normalized for this function to work properly.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d Slerp(Vector3d a, Vector3d b, double t)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3d
      description: Unit vector start point.
    - id: b
      type: OpenTK.Mathematics.Vector3d
      description: Unit vector end point.
    - id: t
      type: System.Double
      description: The blend factor.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: <code class="paramref">a</code> when <code class="paramref">t</code>=0, <code class="paramref">b</code> when <code class="paramref">t</code>=1, and a spherical interpolation between the vectors otherwise.
    content.vb: >-
      <Pure>

      Public Shared Function Slerp(a As Vector3d, b As Vector3d, t As Double) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Slerp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d.Slerp(Vector3d, Vector3d, Double)
  fullName.vb: OpenTK.Mathematics.Vector3d.Slerp(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, Double)
  name.vb: Slerp(Vector3d, Vector3d, Double)
- uid: OpenTK.Mathematics.Vector3d.Slerp(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.Slerp(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double,OpenTK.Mathematics.Vector3d@)
  id: Slerp(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Slerp(in Vector3d, in Vector3d, double, out Vector3d)
  nameWithType: Vector3d.Slerp(in Vector3d, in Vector3d, double, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Slerp(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, double, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Slerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 822
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Returns a new vector that is the spherical interpolation of the two given vectors.

    <code class="paramref">a</code> and <code class="paramref">b</code> need to be normalized for this function to work properly.
  example: []
  syntax:
    content: public static void Slerp(in Vector3d a, in Vector3d b, double t, out Vector3d result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3d
      description: Unit vector start point.
    - id: b
      type: OpenTK.Mathematics.Vector3d
      description: Unit vector end point.
    - id: t
      type: System.Double
      description: The blend factor.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: Is <code class="paramref">a</code> when <code class="paramref">t</code>=0, <code class="paramref">b</code> when <code class="paramref">t</code>=1, and a spherical interpolation between the vectors otherwise.
    content.vb: Public Shared Sub Slerp(a As Vector3d, b As Vector3d, t As Double, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.Slerp*
  nameWithType.vb: Vector3d.Slerp(Vector3d, Vector3d, Double, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.Slerp(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, Double, OpenTK.Mathematics.Vector3d)
  name.vb: Slerp(Vector3d, Vector3d, Double, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.Elerp(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,System.Double)
  commentId: M:OpenTK.Mathematics.Vector3d.Elerp(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,System.Double)
  id: Elerp(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,System.Double)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Elerp(Vector3d, Vector3d, double)
  nameWithType: Vector3d.Elerp(Vector3d, Vector3d, double)
  fullName: OpenTK.Mathematics.Vector3d.Elerp(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, double)
  type: Method
  source:
    id: Elerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 860
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Returns a new vector that is the exponential interpolation of the two vectors.

    Equivalent to <code>a * pow(b/a, t)</code>.
  example: []
  syntax:
    content: public static Vector3d Elerp(Vector3d a, Vector3d b, double t)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3d
      description: The starting value. Must be non-negative.
    - id: b
      type: OpenTK.Mathematics.Vector3d
      description: The end value. Must be non-negative.
    - id: t
      type: System.Double
      description: The blend factor.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The exponential interpolation between <code class="paramref">a</code> and <code class="paramref">b</code>.
    content.vb: Public Shared Function Elerp(a As Vector3d, b As Vector3d, t As Double) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Elerp*
  seealso:
  - linkId: OpenTK.Mathematics.MathHelper.Elerp(System.Double,System.Double,System.Double)
    commentId: M:OpenTK.Mathematics.MathHelper.Elerp(System.Double,System.Double,System.Double)
  nameWithType.vb: Vector3d.Elerp(Vector3d, Vector3d, Double)
  fullName.vb: OpenTK.Mathematics.Vector3d.Elerp(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, Double)
  name.vb: Elerp(Vector3d, Vector3d, Double)
- uid: OpenTK.Mathematics.Vector3d.Elerp(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.Elerp(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double,OpenTK.Mathematics.Vector3d@)
  id: Elerp(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Elerp(in Vector3d, in Vector3d, double, out Vector3d)
  nameWithType: Vector3d.Elerp(in Vector3d, in Vector3d, double, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Elerp(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, double, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Elerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 877
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Returns a new vector that is the exponential interpolation of the two vectors.

    Equivalent to <code>a * pow(b/a, t)</code>.
  example: []
  syntax:
    content: public static void Elerp(in Vector3d a, in Vector3d b, double t, out Vector3d result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3d
      description: The starting value. Must be non-negative.
    - id: b
      type: OpenTK.Mathematics.Vector3d
      description: The end value. Must be non-negative.
    - id: t
      type: System.Double
      description: The blend factor.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: The exponential interpolation between <code class="paramref">a</code> and <code class="paramref">b</code>.
    content.vb: Public Shared Sub Elerp(a As Vector3d, b As Vector3d, t As Double, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.Elerp*
  seealso:
  - linkId: OpenTK.Mathematics.MathHelper.Elerp(System.Double,System.Double,System.Double)
    commentId: M:OpenTK.Mathematics.MathHelper.Elerp(System.Double,System.Double,System.Double)
  nameWithType.vb: Vector3d.Elerp(Vector3d, Vector3d, Double, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.Elerp(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, Double, OpenTK.Mathematics.Vector3d)
  name.vb: Elerp(Vector3d, Vector3d, Double, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.BaryCentric(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,System.Double,System.Double)
  commentId: M:OpenTK.Mathematics.Vector3d.BaryCentric(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,System.Double,System.Double)
  id: BaryCentric(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d,System.Double,System.Double)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: BaryCentric(Vector3d, Vector3d, Vector3d, double, double)
  nameWithType: Vector3d.BaryCentric(Vector3d, Vector3d, Vector3d, double, double)
  fullName: OpenTK.Mathematics.Vector3d.BaryCentric(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, double, double)
  type: Method
  source:
    id: BaryCentric
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 893
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Interpolate 3 Vectors using Barycentric coordinates.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d BaryCentric(Vector3d a, Vector3d b, Vector3d c, double u, double v)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3d
      description: First input Vector.
    - id: b
      type: OpenTK.Mathematics.Vector3d
      description: Second input Vector.
    - id: c
      type: OpenTK.Mathematics.Vector3d
      description: Third input Vector.
    - id: u
      type: System.Double
      description: First Barycentric Coordinate.
    - id: v
      type: System.Double
      description: Second Barycentric Coordinate.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise.
    content.vb: >-
      <Pure>

      Public Shared Function BaryCentric(a As Vector3d, b As Vector3d, c As Vector3d, u As Double, v As Double) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.BaryCentric*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d.BaryCentric(Vector3d, Vector3d, Vector3d, Double, Double)
  fullName.vb: OpenTK.Mathematics.Vector3d.BaryCentric(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, Double, Double)
  name.vb: BaryCentric(Vector3d, Vector3d, Vector3d, Double, Double)
- uid: OpenTK.Mathematics.Vector3d.BaryCentric(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double,System.Double,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.BaryCentric(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double,System.Double,OpenTK.Mathematics.Vector3d@)
  id: BaryCentric(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double,System.Double,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: BaryCentric(in Vector3d, in Vector3d, in Vector3d, double, double, out Vector3d)
  nameWithType: Vector3d.BaryCentric(in Vector3d, in Vector3d, in Vector3d, double, double, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.BaryCentric(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, double, double, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: BaryCentric
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 912
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Interpolate 3 Vectors using Barycentric coordinates.
  example: []
  syntax:
    content: >-
      [Pure]

      public static void BaryCentric(in Vector3d a, in Vector3d b, in Vector3d c, double u, double v, out Vector3d result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3d
      description: First input Vector.
    - id: b
      type: OpenTK.Mathematics.Vector3d
      description: Second input Vector.
    - id: c
      type: OpenTK.Mathematics.Vector3d
      description: Third input Vector.
    - id: u
      type: System.Double
      description: First Barycentric Coordinate.
    - id: v
      type: System.Double
      description: Second Barycentric Coordinate.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: >-
        Output Vector. a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c

        otherwise.
    content.vb: >-
      <Pure>

      Public Shared Sub BaryCentric(a As Vector3d, b As Vector3d, c As Vector3d, u As Double, v As Double, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.BaryCentric*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d.BaryCentric(Vector3d, Vector3d, Vector3d, Double, Double, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.BaryCentric(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, Double, Double, OpenTK.Mathematics.Vector3d)
  name.vb: BaryCentric(Vector3d, Vector3d, Vector3d, Double, Double, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.TransformVector(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix4d)
  commentId: M:OpenTK.Mathematics.Vector3d.TransformVector(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix4d)
  id: TransformVector(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix4d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: TransformVector(Vector3d, Matrix4d)
  nameWithType: Vector3d.TransformVector(Vector3d, Matrix4d)
  fullName: OpenTK.Mathematics.Vector3d.TransformVector(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Matrix4d)
  type: Method
  source:
    id: TransformVector
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 939
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Transform a direction vector by the given Matrix.

    Assumes the matrix has a bottom row of (0,0,0,1), that is the translation part is ignored.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d TransformVector(Vector3d vec, Matrix4d mat)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The vector to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4d
      description: The desired transformation.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Function TransformVector(vec As Vector3d, mat As Matrix4d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.TransformVector*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.TransformVector(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.TransformVector(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector3d@)
  id: TransformVector(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: TransformVector(in Vector3d, in Matrix4d, out Vector3d)
  nameWithType: Vector3d.TransformVector(in Vector3d, in Matrix4d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.TransformVector(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Matrix4d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: TransformVector
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 953
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Transform a direction vector by the given Matrix.

    Assumes the matrix has a bottom row of (0,0,0,1), that is the translation part is ignored.
  example: []
  syntax:
    content: public static void TransformVector(in Vector3d vec, in Matrix4d mat, out Vector3d result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The vector to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4d
      description: The desired transformation.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: The transformed vector.
    content.vb: Public Shared Sub TransformVector(vec As Vector3d, mat As Matrix4d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.TransformVector*
  nameWithType.vb: Vector3d.TransformVector(Vector3d, Matrix4d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.TransformVector(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Matrix4d, OpenTK.Mathematics.Vector3d)
  name.vb: TransformVector(Vector3d, Matrix4d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.TransformNormal(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix4d)
  commentId: M:OpenTK.Mathematics.Vector3d.TransformNormal(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix4d)
  id: TransformNormal(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix4d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: TransformNormal(Vector3d, Matrix4d)
  nameWithType: Vector3d.TransformNormal(Vector3d, Matrix4d)
  fullName: OpenTK.Mathematics.Vector3d.TransformNormal(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Matrix4d)
  type: Method
  source:
    id: TransformNormal
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 978
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Normal by the given Matrix.
  remarks: >-
    This calculates the inverse of the given matrix, use TransformNormalInverse if you

    already have the inverse to avoid this extra calculation.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d TransformNormal(Vector3d norm, Matrix4d mat)
    parameters:
    - id: norm
      type: OpenTK.Mathematics.Vector3d
      description: The normal to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4d
      description: The desired transformation.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The transformed normal.
    content.vb: >-
      <Pure>

      Public Shared Function TransformNormal(norm As Vector3d, mat As Matrix4d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.TransformNormal*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.TransformNormal(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.TransformNormal(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector3d@)
  id: TransformNormal(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: TransformNormal(in Vector3d, in Matrix4d, out Vector3d)
  nameWithType: Vector3d.TransformNormal(in Vector3d, in Matrix4d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.TransformNormal(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Matrix4d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: TransformNormal
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 995
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Normal by the given Matrix.
  remarks: >-
    This calculates the inverse of the given matrix, use TransformNormalInverse if you

    already have the inverse to avoid this extra calculation.
  example: []
  syntax:
    content: public static void TransformNormal(in Vector3d norm, in Matrix4d mat, out Vector3d result)
    parameters:
    - id: norm
      type: OpenTK.Mathematics.Vector3d
      description: The normal to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4d
      description: The desired transformation.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: The transformed normal.
    content.vb: Public Shared Sub TransformNormal(norm As Vector3d, mat As Matrix4d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.TransformNormal*
  nameWithType.vb: Vector3d.TransformNormal(Vector3d, Matrix4d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.TransformNormal(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Matrix4d, OpenTK.Mathematics.Vector3d)
  name.vb: TransformNormal(Vector3d, Matrix4d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.TransformNormalInverse(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix4d)
  commentId: M:OpenTK.Mathematics.Vector3d.TransformNormalInverse(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix4d)
  id: TransformNormalInverse(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix4d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: TransformNormalInverse(Vector3d, Matrix4d)
  nameWithType: Vector3d.TransformNormalInverse(Vector3d, Matrix4d)
  fullName: OpenTK.Mathematics.Vector3d.TransformNormalInverse(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Matrix4d)
  type: Method
  source:
    id: TransformNormalInverse
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1011
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Normal by the (transpose of the) given Matrix.
  remarks: >-
    This version doesn't calculate the inverse matrix.

    Use this version if you already have the inverse of the desired transform to hand.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d TransformNormalInverse(Vector3d norm, Matrix4d invMat)
    parameters:
    - id: norm
      type: OpenTK.Mathematics.Vector3d
      description: The normal to transform.
    - id: invMat
      type: OpenTK.Mathematics.Matrix4d
      description: The inverse of the desired transformation.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The transformed normal.
    content.vb: >-
      <Pure>

      Public Shared Function TransformNormalInverse(norm As Vector3d, invMat As Matrix4d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.TransformNormalInverse*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.TransformNormalInverse(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.TransformNormalInverse(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector3d@)
  id: TransformNormalInverse(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: TransformNormalInverse(in Vector3d, in Matrix4d, out Vector3d)
  nameWithType: Vector3d.TransformNormalInverse(in Vector3d, in Matrix4d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.TransformNormalInverse(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Matrix4d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: TransformNormalInverse
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1028
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Normal by the (transpose of the) given Matrix.
  remarks: >-
    This version doesn't calculate the inverse matrix.

    Use this version if you already have the inverse of the desired transform to hand.
  example: []
  syntax:
    content: public static void TransformNormalInverse(in Vector3d norm, in Matrix4d invMat, out Vector3d result)
    parameters:
    - id: norm
      type: OpenTK.Mathematics.Vector3d
      description: The normal to transform.
    - id: invMat
      type: OpenTK.Mathematics.Matrix4d
      description: The inverse of the desired transformation.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: The transformed normal.
    content.vb: Public Shared Sub TransformNormalInverse(norm As Vector3d, invMat As Matrix4d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.TransformNormalInverse*
  nameWithType.vb: Vector3d.TransformNormalInverse(Vector3d, Matrix4d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.TransformNormalInverse(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Matrix4d, OpenTK.Mathematics.Vector3d)
  name.vb: TransformNormalInverse(Vector3d, Matrix4d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.TransformPosition(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix4d)
  commentId: M:OpenTK.Mathematics.Vector3d.TransformPosition(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix4d)
  id: TransformPosition(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix4d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: TransformPosition(Vector3d, Matrix4d)
  nameWithType: Vector3d.TransformPosition(Vector3d, Matrix4d)
  fullName: OpenTK.Mathematics.Vector3d.TransformPosition(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Matrix4d)
  type: Method
  source:
    id: TransformPosition
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1049
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Position by the given Matrix.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d TransformPosition(Vector3d pos, Matrix4d mat)
    parameters:
    - id: pos
      type: OpenTK.Mathematics.Vector3d
      description: The position to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4d
      description: The desired transformation.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The transformed position.
    content.vb: >-
      <Pure>

      Public Shared Function TransformPosition(pos As Vector3d, mat As Matrix4d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.TransformPosition*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.TransformPosition(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.TransformPosition(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector3d@)
  id: TransformPosition(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: TransformPosition(in Vector3d, in Matrix4d, out Vector3d)
  nameWithType: Vector3d.TransformPosition(in Vector3d, in Matrix4d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.TransformPosition(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Matrix4d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: TransformPosition
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1062
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Position by the given Matrix.
  example: []
  syntax:
    content: public static void TransformPosition(in Vector3d pos, in Matrix4d mat, out Vector3d result)
    parameters:
    - id: pos
      type: OpenTK.Mathematics.Vector3d
      description: The position to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4d
      description: The desired transformation.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: The transformed position.
    content.vb: Public Shared Sub TransformPosition(pos As Vector3d, mat As Matrix4d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.TransformPosition*
  nameWithType.vb: Vector3d.TransformPosition(Vector3d, Matrix4d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.TransformPosition(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Matrix4d, OpenTK.Mathematics.Vector3d)
  name.vb: TransformPosition(Vector3d, Matrix4d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.TransformRow(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix3d)
  commentId: M:OpenTK.Mathematics.Vector3d.TransformRow(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix3d)
  id: TransformRow(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: TransformRow(Vector3d, Matrix3d)
  nameWithType: Vector3d.TransformRow(Vector3d, Matrix3d)
  fullName: OpenTK.Mathematics.Vector3d.TransformRow(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Matrix3d)
  type: Method
  source:
    id: TransformRow
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1086
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d TransformRow(Vector3d vec, Matrix3d mat)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The vector to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix3d
      description: The desired transformation.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Function TransformRow(vec As Vector3d, mat As Matrix3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.TransformRow*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.TransformRow(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix3d@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.TransformRow(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix3d@,OpenTK.Mathematics.Vector3d@)
  id: TransformRow(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix3d@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: TransformRow(in Vector3d, in Matrix3d, out Vector3d)
  nameWithType: Vector3d.TransformRow(in Vector3d, in Matrix3d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.TransformRow(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Matrix3d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: TransformRow
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1099
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix.
  example: []
  syntax:
    content: public static void TransformRow(in Vector3d vec, in Matrix3d mat, out Vector3d result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The vector to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix3d
      description: The desired transformation.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: The transformed vector.
    content.vb: Public Shared Sub TransformRow(vec As Vector3d, mat As Matrix3d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.TransformRow*
  nameWithType.vb: Vector3d.TransformRow(Vector3d, Matrix3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.TransformRow(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Matrix3d, OpenTK.Mathematics.Vector3d)
  name.vb: TransformRow(Vector3d, Matrix3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.Transform(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Quaterniond)
  commentId: M:OpenTK.Mathematics.Vector3d.Transform(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Quaterniond)
  id: Transform(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Quaterniond)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Transform(Vector3d, Quaterniond)
  nameWithType: Vector3d.Transform(Vector3d, Quaterniond)
  fullName: OpenTK.Mathematics.Vector3d.Transform(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Quaterniond)
  type: Method
  source:
    id: Transform
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1112
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transforms a vector by a quaternion rotation.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d Transform(Vector3d vec, Quaterniond quat)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The vector to transform.
    - id: quat
      type: OpenTK.Mathematics.Quaterniond
      description: The quaternion to rotate the vector by.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Transform(vec As Vector3d, quat As Quaterniond) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Transform*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.Transform(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Quaterniond@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.Transform(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Quaterniond@,OpenTK.Mathematics.Vector3d@)
  id: Transform(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Quaterniond@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Transform(in Vector3d, in Quaterniond, out Vector3d)
  nameWithType: Vector3d.Transform(in Vector3d, in Quaterniond, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Transform(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Quaterniond, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Transform
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1125
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transforms a vector by a quaternion rotation.
  example: []
  syntax:
    content: public static void Transform(in Vector3d vec, in Quaterniond quat, out Vector3d result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The vector to transform.
    - id: quat
      type: OpenTK.Mathematics.Quaterniond
      description: The quaternion to rotate the vector by.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: The result of the operation.
    content.vb: Public Shared Sub Transform(vec As Vector3d, quat As Quaterniond, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.Transform*
  nameWithType.vb: Vector3d.Transform(Vector3d, Quaterniond, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.Transform(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Quaterniond, OpenTK.Mathematics.Vector3d)
  name.vb: Transform(Vector3d, Quaterniond, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.TransformColumn(OpenTK.Mathematics.Matrix3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.TransformColumn(OpenTK.Mathematics.Matrix3d,OpenTK.Mathematics.Vector3d)
  id: TransformColumn(OpenTK.Mathematics.Matrix3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: TransformColumn(Matrix3d, Vector3d)
  nameWithType: Vector3d.TransformColumn(Matrix3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.TransformColumn(OpenTK.Mathematics.Matrix3d, OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: TransformColumn
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1144
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix using right-handed notation.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d TransformColumn(Matrix3d mat, Vector3d vec)
    parameters:
    - id: mat
      type: OpenTK.Mathematics.Matrix3d
      description: The desired transformation.
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The vector to transform.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Function TransformColumn(mat As Matrix3d, vec As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.TransformColumn*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.TransformColumn(OpenTK.Mathematics.Matrix3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.TransformColumn(OpenTK.Mathematics.Matrix3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  id: TransformColumn(OpenTK.Mathematics.Matrix3d@,OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: TransformColumn(in Matrix3d, in Vector3d, out Vector3d)
  nameWithType: Vector3d.TransformColumn(in Matrix3d, in Vector3d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.TransformColumn(in OpenTK.Mathematics.Matrix3d, in OpenTK.Mathematics.Vector3d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: TransformColumn
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1157
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix using right-handed notation.
  example: []
  syntax:
    content: public static void TransformColumn(in Matrix3d mat, in Vector3d vec, out Vector3d result)
    parameters:
    - id: mat
      type: OpenTK.Mathematics.Matrix3d
      description: The desired transformation.
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The vector to transform.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: The transformed vector.
    content.vb: Public Shared Sub TransformColumn(mat As Matrix3d, vec As Vector3d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.TransformColumn*
  nameWithType.vb: Vector3d.TransformColumn(Matrix3d, Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.TransformColumn(OpenTK.Mathematics.Matrix3d, OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: TransformColumn(Matrix3d, Vector3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.TransformPerspective(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix4d)
  commentId: M:OpenTK.Mathematics.Vector3d.TransformPerspective(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix4d)
  id: TransformPerspective(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix4d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: TransformPerspective(Vector3d, Matrix4d)
  nameWithType: Vector3d.TransformPerspective(Vector3d, Matrix4d)
  fullName: OpenTK.Mathematics.Vector3d.TransformPerspective(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Matrix4d)
  type: Method
  source:
    id: TransformPerspective
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1170
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector3d by the given Matrix, and project the resulting Vector4 back to a Vector3.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d TransformPerspective(Vector3d vec, Matrix4d mat)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The vector to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4d
      description: The desired transformation.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Function TransformPerspective(vec As Vector3d, mat As Matrix4d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.TransformPerspective*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.TransformPerspective(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector3d@)
  commentId: M:OpenTK.Mathematics.Vector3d.TransformPerspective(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector3d@)
  id: TransformPerspective(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector3d@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: TransformPerspective(in Vector3d, in Matrix4d, out Vector3d)
  nameWithType: Vector3d.TransformPerspective(in Vector3d, in Matrix4d, out Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.TransformPerspective(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Matrix4d, out OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: TransformPerspective
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1183
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector3d by the given Matrix, and project the resulting Vector4d back to a Vector3d.
  example: []
  syntax:
    content: public static void TransformPerspective(in Vector3d vec, in Matrix4d mat, out Vector3d result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The vector to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4d
      description: The desired transformation.
    - id: result
      type: OpenTK.Mathematics.Vector3d
      description: The transformed vector.
    content.vb: Public Shared Sub TransformPerspective(vec As Vector3d, mat As Matrix4d, result As Vector3d)
  overload: OpenTK.Mathematics.Vector3d.TransformPerspective*
  nameWithType.vb: Vector3d.TransformPerspective(Vector3d, Matrix4d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.TransformPerspective(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Matrix4d, OpenTK.Mathematics.Vector3d)
  name.vb: TransformPerspective(Vector3d, Matrix4d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.CalculateAngle(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.CalculateAngle(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: CalculateAngle(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: CalculateAngle(Vector3d, Vector3d)
  nameWithType: Vector3d.CalculateAngle(Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.CalculateAngle(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: CalculateAngle
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1199
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculates the angle (in radians) between two vectors.
  remarks: Note that the returned angle is never bigger than the constant Pi.
  example: []
  syntax:
    content: >-
      [Pure]

      public static double CalculateAngle(Vector3d first, Vector3d second)
    parameters:
    - id: first
      type: OpenTK.Mathematics.Vector3d
      description: The first vector.
    - id: second
      type: OpenTK.Mathematics.Vector3d
      description: The second vector.
    return:
      type: System.Double
      description: Angle (in radians) between the vectors.
    content.vb: >-
      <Pure>

      Public Shared Function CalculateAngle(first As Vector3d, second As Vector3d) As Double
  overload: OpenTK.Mathematics.Vector3d.CalculateAngle*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3d.CalculateAngle(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double@)
  commentId: M:OpenTK.Mathematics.Vector3d.CalculateAngle(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double@)
  id: CalculateAngle(OpenTK.Mathematics.Vector3d@,OpenTK.Mathematics.Vector3d@,System.Double@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: CalculateAngle(in Vector3d, in Vector3d, out double)
  nameWithType: Vector3d.CalculateAngle(in Vector3d, in Vector3d, out double)
  fullName: OpenTK.Mathematics.Vector3d.CalculateAngle(in OpenTK.Mathematics.Vector3d, in OpenTK.Mathematics.Vector3d, out double)
  type: Method
  source:
    id: CalculateAngle
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1213
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculates the angle (in radians) between two vectors.
  remarks: Note that the returned angle is never bigger than the constant Pi.
  example: []
  syntax:
    content: public static void CalculateAngle(in Vector3d first, in Vector3d second, out double result)
    parameters:
    - id: first
      type: OpenTK.Mathematics.Vector3d
      description: The first vector.
    - id: second
      type: OpenTK.Mathematics.Vector3d
      description: The second vector.
    - id: result
      type: System.Double
      description: Angle (in radians) between the vectors.
    content.vb: Public Shared Sub CalculateAngle(first As Vector3d, second As Vector3d, result As Double)
  overload: OpenTK.Mathematics.Vector3d.CalculateAngle*
  nameWithType.vb: Vector3d.CalculateAngle(Vector3d, Vector3d, Double)
  fullName.vb: OpenTK.Mathematics.Vector3d.CalculateAngle(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d, Double)
  name.vb: CalculateAngle(Vector3d, Vector3d, Double)
- uid: OpenTK.Mathematics.Vector3d.Xy
  commentId: P:OpenTK.Mathematics.Vector3d.Xy
  id: Xy
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Xy
  nameWithType: Vector3d.Xy
  fullName: OpenTK.Mathematics.Vector3d.Xy
  type: Property
  source:
    id: Xy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1222
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2d with the X and Y components of this instance.
  example: []
  syntax:
    content: public Vector2d Xy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Property Xy As Vector2d
  overload: OpenTK.Mathematics.Vector3d.Xy*
- uid: OpenTK.Mathematics.Vector3d.Xz
  commentId: P:OpenTK.Mathematics.Vector3d.Xz
  id: Xz
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Xz
  nameWithType: Vector3d.Xz
  fullName: OpenTK.Mathematics.Vector3d.Xz
  type: Property
  source:
    id: Xz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1236
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2d with the X and Z components of this instance.
  example: []
  syntax:
    content: public Vector2d Xz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Property Xz As Vector2d
  overload: OpenTK.Mathematics.Vector3d.Xz*
- uid: OpenTK.Mathematics.Vector3d.Yx
  commentId: P:OpenTK.Mathematics.Vector3d.Yx
  id: Yx
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Yx
  nameWithType: Vector3d.Yx
  fullName: OpenTK.Mathematics.Vector3d.Yx
  type: Property
  source:
    id: Yx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1250
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2d with the Y and X components of this instance.
  example: []
  syntax:
    content: public Vector2d Yx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Property Yx As Vector2d
  overload: OpenTK.Mathematics.Vector3d.Yx*
- uid: OpenTK.Mathematics.Vector3d.Yz
  commentId: P:OpenTK.Mathematics.Vector3d.Yz
  id: Yz
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Yz
  nameWithType: Vector3d.Yz
  fullName: OpenTK.Mathematics.Vector3d.Yz
  type: Property
  source:
    id: Yz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1264
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2d with the Y and Z components of this instance.
  example: []
  syntax:
    content: public Vector2d Yz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Property Yz As Vector2d
  overload: OpenTK.Mathematics.Vector3d.Yz*
- uid: OpenTK.Mathematics.Vector3d.Zx
  commentId: P:OpenTK.Mathematics.Vector3d.Zx
  id: Zx
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Zx
  nameWithType: Vector3d.Zx
  fullName: OpenTK.Mathematics.Vector3d.Zx
  type: Property
  source:
    id: Zx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1278
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2d with the Z and X components of this instance.
  example: []
  syntax:
    content: public Vector2d Zx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Property Zx As Vector2d
  overload: OpenTK.Mathematics.Vector3d.Zx*
- uid: OpenTK.Mathematics.Vector3d.Zy
  commentId: P:OpenTK.Mathematics.Vector3d.Zy
  id: Zy
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Zy
  nameWithType: Vector3d.Zy
  fullName: OpenTK.Mathematics.Vector3d.Zy
  type: Property
  source:
    id: Zy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1292
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2d with the Z and Y components of this instance.
  example: []
  syntax:
    content: public Vector2d Zy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Property Zy As Vector2d
  overload: OpenTK.Mathematics.Vector3d.Zy*
- uid: OpenTK.Mathematics.Vector3d.Xzy
  commentId: P:OpenTK.Mathematics.Vector3d.Xzy
  id: Xzy
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Xzy
  nameWithType: Vector3d.Xzy
  fullName: OpenTK.Mathematics.Vector3d.Xzy
  type: Property
  source:
    id: Xzy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1306
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the X, Z, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3d Xzy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Xzy As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Xzy*
- uid: OpenTK.Mathematics.Vector3d.Yxz
  commentId: P:OpenTK.Mathematics.Vector3d.Yxz
  id: Yxz
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Yxz
  nameWithType: Vector3d.Yxz
  fullName: OpenTK.Mathematics.Vector3d.Yxz
  type: Property
  source:
    id: Yxz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1321
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the Y, X, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3d Yxz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Yxz As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Yxz*
- uid: OpenTK.Mathematics.Vector3d.Yzx
  commentId: P:OpenTK.Mathematics.Vector3d.Yzx
  id: Yzx
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Yzx
  nameWithType: Vector3d.Yzx
  fullName: OpenTK.Mathematics.Vector3d.Yzx
  type: Property
  source:
    id: Yzx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1336
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the Y, Z, and X components of this instance.
  example: []
  syntax:
    content: public Vector3d Yzx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Yzx As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Yzx*
- uid: OpenTK.Mathematics.Vector3d.Zxy
  commentId: P:OpenTK.Mathematics.Vector3d.Zxy
  id: Zxy
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Zxy
  nameWithType: Vector3d.Zxy
  fullName: OpenTK.Mathematics.Vector3d.Zxy
  type: Property
  source:
    id: Zxy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1351
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the Z, X, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3d Zxy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Zxy As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Zxy*
- uid: OpenTK.Mathematics.Vector3d.Zyx
  commentId: P:OpenTK.Mathematics.Vector3d.Zyx
  id: Zyx
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Zyx
  nameWithType: Vector3d.Zyx
  fullName: OpenTK.Mathematics.Vector3d.Zyx
  type: Property
  source:
    id: Zyx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1366
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the Z, Y, and X components of this instance.
  example: []
  syntax:
    content: public Vector3d Zyx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Zyx As Vector3d
  overload: OpenTK.Mathematics.Vector3d.Zyx*
- uid: OpenTK.Mathematics.Vector3d.op_Addition(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.op_Addition(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: op_Addition(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: operator +(Vector3d, Vector3d)
  nameWithType: Vector3d.operator +(Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.operator +(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Operator
  source:
    id: op_Addition
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1384
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d operator +(Vector3d left, Vector3d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3d
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector3d
      description: The second instance.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator +(left As Vector3d, right As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.op_Addition*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d.+(Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.+(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: +(Vector3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.op_Subtraction(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.op_Subtraction(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: op_Subtraction(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: operator -(Vector3d, Vector3d)
  nameWithType: Vector3d.operator -(Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.operator -(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Operator
  source:
    id: op_Subtraction
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1399
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtracts two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d operator -(Vector3d left, Vector3d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3d
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector3d
      description: The second instance.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator -(left As Vector3d, right As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.op_Subtraction*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d.-(Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.-(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: -(Vector3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.op_UnaryNegation(OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.op_UnaryNegation(OpenTK.Mathematics.Vector3d)
  id: op_UnaryNegation(OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: operator -(Vector3d)
  nameWithType: Vector3d.operator -(Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.operator -(OpenTK.Mathematics.Vector3d)
  type: Operator
  source:
    id: op_UnaryNegation
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1413
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Negates an instance.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d operator -(Vector3d vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The instance.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator -(vec As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.op_UnaryNegation*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d.-(Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.-(OpenTK.Mathematics.Vector3d)
  name.vb: -(Vector3d)
- uid: OpenTK.Mathematics.Vector3d.op_Multiply(OpenTK.Mathematics.Vector3d,System.Double)
  commentId: M:OpenTK.Mathematics.Vector3d.op_Multiply(OpenTK.Mathematics.Vector3d,System.Double)
  id: op_Multiply(OpenTK.Mathematics.Vector3d,System.Double)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: operator *(Vector3d, double)
  nameWithType: Vector3d.operator *(Vector3d, double)
  fullName: OpenTK.Mathematics.Vector3d.operator *(OpenTK.Mathematics.Vector3d, double)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1428
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies an instance by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d operator *(Vector3d vec, double scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The instance.
    - id: scale
      type: System.Double
      description: The scalar.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator *(vec As Vector3d, scale As Double) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d.*(Vector3d, Double)
  fullName.vb: OpenTK.Mathematics.Vector3d.*(OpenTK.Mathematics.Vector3d, Double)
  name.vb: '*(Vector3d, Double)'
- uid: OpenTK.Mathematics.Vector3d.op_Multiply(System.Double,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.op_Multiply(System.Double,OpenTK.Mathematics.Vector3d)
  id: op_Multiply(System.Double,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: operator *(double, Vector3d)
  nameWithType: Vector3d.operator *(double, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.operator *(double, OpenTK.Mathematics.Vector3d)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1443
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies an instance by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d operator *(double scale, Vector3d vec)
    parameters:
    - id: scale
      type: System.Double
      description: The scalar.
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The instance.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator *(scale As Double, vec As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d.*(Double, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.*(Double, OpenTK.Mathematics.Vector3d)
  name.vb: '*(Double, Vector3d)'
- uid: OpenTK.Mathematics.Vector3d.op_Multiply(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.op_Multiply(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: op_Multiply(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: operator *(Vector3d, Vector3d)
  nameWithType: Vector3d.operator *(Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.operator *(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1458
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Component-wise multiplication between the specified instance by a scale vector.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d operator *(Vector3d vec, Vector3d scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: Right operand.
    - id: scale
      type: OpenTK.Mathematics.Vector3d
      description: Left operand.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: Result of multiplication.
    content.vb: >-
      <Pure>

      Public Shared Operator *(vec As Vector3d, scale As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d.*(Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.*(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: '*(Vector3d, Vector3d)'
- uid: OpenTK.Mathematics.Vector3d.op_Multiply(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix3d)
  commentId: M:OpenTK.Mathematics.Vector3d.op_Multiply(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix3d)
  id: op_Multiply(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Matrix3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: operator *(Vector3d, Matrix3d)
  nameWithType: Vector3d.operator *(Vector3d, Matrix3d)
  fullName: OpenTK.Mathematics.Vector3d.operator *(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Matrix3d)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1473
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d operator *(Vector3d vec, Matrix3d mat)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The vector to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix3d
      description: The desired transformation.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Operator *(vec As Vector3d, mat As Matrix3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d.*(Vector3d, Matrix3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.*(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Matrix3d)
  name.vb: '*(Vector3d, Matrix3d)'
- uid: OpenTK.Mathematics.Vector3d.op_Multiply(OpenTK.Mathematics.Matrix3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.op_Multiply(OpenTK.Mathematics.Matrix3d,OpenTK.Mathematics.Vector3d)
  id: op_Multiply(OpenTK.Mathematics.Matrix3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: operator *(Matrix3d, Vector3d)
  nameWithType: Vector3d.operator *(Matrix3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.operator *(OpenTK.Mathematics.Matrix3d, OpenTK.Mathematics.Vector3d)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1486
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix using right-handed notation.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d operator *(Matrix3d mat, Vector3d vec)
    parameters:
    - id: mat
      type: OpenTK.Mathematics.Matrix3d
      description: The desired transformation.
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The vector to transform.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Operator *(mat As Matrix3d, vec As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d.*(Matrix3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.*(OpenTK.Mathematics.Matrix3d, OpenTK.Mathematics.Vector3d)
  name.vb: '*(Matrix3d, Vector3d)'
- uid: OpenTK.Mathematics.Vector3d.op_Multiply(OpenTK.Mathematics.Quaterniond,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.op_Multiply(OpenTK.Mathematics.Quaterniond,OpenTK.Mathematics.Vector3d)
  id: op_Multiply(OpenTK.Mathematics.Quaterniond,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: operator *(Quaterniond, Vector3d)
  nameWithType: Vector3d.operator *(Quaterniond, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.operator *(OpenTK.Mathematics.Quaterniond, OpenTK.Mathematics.Vector3d)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1499
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transforms a vector by a quaternion rotation.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d operator *(Quaterniond quat, Vector3d vec)
    parameters:
    - id: quat
      type: OpenTK.Mathematics.Quaterniond
      description: The quaternion to rotate the vector by.
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The vector to transform.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Operator *(quat As Quaterniond, vec As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d.*(Quaterniond, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.*(OpenTK.Mathematics.Quaterniond, OpenTK.Mathematics.Vector3d)
  name.vb: '*(Quaterniond, Vector3d)'
- uid: OpenTK.Mathematics.Vector3d.op_Division(OpenTK.Mathematics.Vector3d,System.Double)
  commentId: M:OpenTK.Mathematics.Vector3d.op_Division(OpenTK.Mathematics.Vector3d,System.Double)
  id: op_Division(OpenTK.Mathematics.Vector3d,System.Double)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: operator /(Vector3d, double)
  nameWithType: Vector3d.operator /(Vector3d, double)
  fullName: OpenTK.Mathematics.Vector3d.operator /(OpenTK.Mathematics.Vector3d, double)
  type: Operator
  source:
    id: op_Division
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1512
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides an instance by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d operator /(Vector3d vec, double scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The instance.
    - id: scale
      type: System.Double
      description: The scalar.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator /(vec As Vector3d, scale As Double) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.op_Division*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d./(Vector3d, Double)
  fullName.vb: OpenTK.Mathematics.Vector3d./(OpenTK.Mathematics.Vector3d, Double)
  name.vb: /(Vector3d, Double)
- uid: OpenTK.Mathematics.Vector3d.op_Division(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.op_Division(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: op_Division(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: operator /(Vector3d, Vector3d)
  nameWithType: Vector3d.operator /(Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.operator /(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Operator
  source:
    id: op_Division
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1527
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Component-wise division between the specified instance by a scale vector.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3d operator /(Vector3d vec, Vector3d scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector3d
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: Result of the division.
    content.vb: >-
      <Pure>

      Public Shared Operator /(vec As Vector3d, scale As Vector3d) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.op_Division*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d./(Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d./(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: /(Vector3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.op_Equality(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.op_Equality(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: op_Equality(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: operator ==(Vector3d, Vector3d)
  nameWithType: Vector3d.operator ==(Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.operator ==(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Operator
  source:
    id: op_Equality
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1542
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compares two instances for equality.
  example: []
  syntax:
    content: public static bool operator ==(Vector3d left, Vector3d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3d
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector3d
      description: The second instance.
    return:
      type: System.Boolean
      description: True, if left equals right; false otherwise.
    content.vb: Public Shared Operator =(left As Vector3d, right As Vector3d) As Boolean
  overload: OpenTK.Mathematics.Vector3d.op_Equality*
  nameWithType.vb: Vector3d.=(Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.=(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: =(Vector3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.op_Inequality(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.op_Inequality(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  id: op_Inequality(OpenTK.Mathematics.Vector3d,OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: operator !=(Vector3d, Vector3d)
  nameWithType: Vector3d.operator !=(Vector3d, Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.operator !=(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  type: Operator
  source:
    id: op_Inequality
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1553
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compares two instances for inequality.
  example: []
  syntax:
    content: public static bool operator !=(Vector3d left, Vector3d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3d
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector3d
      description: The second instance.
    return:
      type: System.Boolean
      description: True, if left does not equa lright; false otherwise.
    content.vb: Public Shared Operator <>(left As Vector3d, right As Vector3d) As Boolean
  overload: OpenTK.Mathematics.Vector3d.op_Inequality*
  nameWithType.vb: Vector3d.<>(Vector3d, Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.<>(OpenTK.Mathematics.Vector3d, OpenTK.Mathematics.Vector3d)
  name.vb: <>(Vector3d, Vector3d)
- uid: OpenTK.Mathematics.Vector3d.op_Explicit(OpenTK.Mathematics.Vector3d)~OpenTK.Mathematics.Vector3
  commentId: M:OpenTK.Mathematics.Vector3d.op_Explicit(OpenTK.Mathematics.Vector3d)~OpenTK.Mathematics.Vector3
  id: op_Explicit(OpenTK.Mathematics.Vector3d)~OpenTK.Mathematics.Vector3
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: explicit operator Vector3(Vector3d)
  nameWithType: Vector3d.explicit operator Vector3(Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.explicit operator OpenTK.Mathematics.Vector3(OpenTK.Mathematics.Vector3d)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1563
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector3d to OpenTK.Vector3.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator Vector3(Vector3d vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The Vector3d to convert.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The resulting Vector3.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(vec As Vector3d) As Vector3
  overload: OpenTK.Mathematics.Vector3d.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d.CType(Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.CType(OpenTK.Mathematics.Vector3d)
  name.vb: CType(Vector3d)
- uid: OpenTK.Mathematics.Vector3d.op_Explicit(OpenTK.Mathematics.Vector3d)~OpenTK.Mathematics.Vector3h
  commentId: M:OpenTK.Mathematics.Vector3d.op_Explicit(OpenTK.Mathematics.Vector3d)~OpenTK.Mathematics.Vector3h
  id: op_Explicit(OpenTK.Mathematics.Vector3d)~OpenTK.Mathematics.Vector3h
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: explicit operator Vector3h(Vector3d)
  nameWithType: Vector3d.explicit operator Vector3h(Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.explicit operator OpenTK.Mathematics.Vector3h(OpenTK.Mathematics.Vector3d)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1574
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector3d to OpenTK.Vector3h.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator Vector3h(Vector3d vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The Vector3d to convert.
    return:
      type: OpenTK.Mathematics.Vector3h
      description: The resulting Vector3h.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(vec As Vector3d) As Vector3h
  overload: OpenTK.Mathematics.Vector3d.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d.CType(Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.CType(OpenTK.Mathematics.Vector3d)
  name.vb: CType(Vector3d)
- uid: OpenTK.Mathematics.Vector3d.op_Explicit(OpenTK.Mathematics.Vector3d)~OpenTK.Mathematics.Vector3i
  commentId: M:OpenTK.Mathematics.Vector3d.op_Explicit(OpenTK.Mathematics.Vector3d)~OpenTK.Mathematics.Vector3i
  id: op_Explicit(OpenTK.Mathematics.Vector3d)~OpenTK.Mathematics.Vector3i
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: explicit operator Vector3i(Vector3d)
  nameWithType: Vector3d.explicit operator Vector3i(Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.explicit operator OpenTK.Mathematics.Vector3i(OpenTK.Mathematics.Vector3d)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1585
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector3d to OpenTK.Vector3i.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator Vector3i(Vector3d vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3d
      description: The Vector3d to convert.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: The resulting Vector3i.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(vec As Vector3d) As Vector3i
  overload: OpenTK.Mathematics.Vector3d.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d.CType(Vector3d)
  fullName.vb: OpenTK.Mathematics.Vector3d.CType(OpenTK.Mathematics.Vector3d)
  name.vb: CType(Vector3d)
- uid: OpenTK.Mathematics.Vector3d.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double})~OpenTK.Mathematics.Vector3d
  commentId: M:OpenTK.Mathematics.Vector3d.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double})~OpenTK.Mathematics.Vector3d
  id: op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double})~OpenTK.Mathematics.Vector3d
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: implicit operator Vector3d((double X, double Y, double Z))
  nameWithType: Vector3d.implicit operator Vector3d((double X, double Y, double Z))
  fullName: OpenTK.Mathematics.Vector3d.implicit operator OpenTK.Mathematics.Vector3d((double X, double Y, double Z))
  type: Operator
  source:
    id: op_Implicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1597
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector3d" data-throw-if-not-resolved="false"></xref> struct using a tuple containing the component

    values.
  example: []
  syntax:
    content: >-
      [Pure]

      public static implicit operator Vector3d((double X, double Y, double Z) values)
    parameters:
    - id: values
      type: System.ValueTuple{System.Double,System.Double,System.Double}
      description: A tuple containing the component values.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: A new instance of the <xref href="OpenTK.Mathematics.Vector3d" data-throw-if-not-resolved="false"></xref> struct with the given component values.
    content.vb: >-
      <Pure>

      Public Shared Widening Operator CType(values As (X As Double, Y As Double, Z As Double)) As Vector3d
  overload: OpenTK.Mathematics.Vector3d.op_Implicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d.CType((X As Double, Y As Double, Z As Double))
  fullName.vb: OpenTK.Mathematics.Vector3d.CType((X As Double, Y As Double, Z As Double))
  name.vb: CType((X As Double, Y As Double, Z As Double))
- uid: OpenTK.Mathematics.Vector3d.ToString
  commentId: M:OpenTK.Mathematics.Vector3d.ToString
  id: ToString
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector3d.ToString()
  fullName: OpenTK.Mathematics.Vector3d.ToString()
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1604
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: OpenTK.Mathematics.Vector3d.ToString*
- uid: OpenTK.Mathematics.Vector3d.ToString(System.String)
  commentId: M:OpenTK.Mathematics.Vector3d.ToString(System.String)
  id: ToString(System.String)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Vector3d.ToString(string)
  fullName: OpenTK.Mathematics.Vector3d.ToString(string)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1610
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public string ToString(string format)
    parameters:
    - id: format
      type: System.String
      description: >-
        The format to use.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to use the default format defined for the type of the <xref href="System.IFormattable" data-throw-if-not-resolved="false"></xref> implementation.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(format As String) As String
  overload: OpenTK.Mathematics.Vector3d.ToString*
  nameWithType.vb: Vector3d.ToString(String)
  fullName.vb: OpenTK.Mathematics.Vector3d.ToString(String)
  name.vb: ToString(String)
- uid: OpenTK.Mathematics.Vector3d.ToString(System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Vector3d.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: Vector3d.ToString(IFormatProvider)
  fullName: OpenTK.Mathematics.Vector3d.ToString(System.IFormatProvider)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1616
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public string ToString(IFormatProvider formatProvider)
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
      description: >-
        The provider to use to format the value.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Vector3d.ToString*
- uid: OpenTK.Mathematics.Vector3d.ToString(System.String,System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Vector3d.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: ToString(string, IFormatProvider)
  nameWithType: Vector3d.ToString(string, IFormatProvider)
  fullName: OpenTK.Mathematics.Vector3d.ToString(string, System.IFormatProvider)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1622
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public readonly string ToString(string format, IFormatProvider formatProvider)
    parameters:
    - id: format
      type: System.String
      description: >-
        The format to use.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to use the default format defined for the type of the <xref href="System.IFormattable" data-throw-if-not-resolved="false"></xref> implementation.
    - id: formatProvider
      type: System.IFormatProvider
      description: >-
        The provider to use to format the value.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Vector3d.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: Vector3d.ToString(String, IFormatProvider)
  fullName.vb: OpenTK.Mathematics.Vector3d.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
- uid: OpenTK.Mathematics.Vector3d.Equals(System.Object)
  commentId: M:OpenTK.Mathematics.Vector3d.Equals(System.Object)
  id: Equals(System.Object)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Vector3d.Equals(object)
  fullName: OpenTK.Mathematics.Vector3d.Equals(object)
  type: Method
  source:
    id: Equals
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1633
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: OpenTK.Mathematics.Vector3d.Equals*
  nameWithType.vb: Vector3d.Equals(Object)
  fullName.vb: OpenTK.Mathematics.Vector3d.Equals(Object)
  name.vb: Equals(Object)
- uid: OpenTK.Mathematics.Vector3d.Equals(OpenTK.Mathematics.Vector3d)
  commentId: M:OpenTK.Mathematics.Vector3d.Equals(OpenTK.Mathematics.Vector3d)
  id: Equals(OpenTK.Mathematics.Vector3d)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Equals(Vector3d)
  nameWithType: Vector3d.Equals(Vector3d)
  fullName: OpenTK.Mathematics.Vector3d.Equals(OpenTK.Mathematics.Vector3d)
  type: Method
  source:
    id: Equals
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1639
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public readonly bool Equals(Vector3d other)
    parameters:
    - id: other
      type: OpenTK.Mathematics.Vector3d
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As Vector3d) As Boolean
  overload: OpenTK.Mathematics.Vector3d.Equals*
  implements:
  - System.IEquatable{OpenTK.Mathematics.Vector3d}.Equals(OpenTK.Mathematics.Vector3d)
- uid: OpenTK.Mathematics.Vector3d.GetHashCode
  commentId: M:OpenTK.Mathematics.Vector3d.GetHashCode
  id: GetHashCode
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Vector3d.GetHashCode()
  fullName: OpenTK.Mathematics.Vector3d.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1648
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override readonly int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: OpenTK.Mathematics.Vector3d.GetHashCode*
- uid: OpenTK.Mathematics.Vector3d.Deconstruct(System.Double@,System.Double@,System.Double@)
  commentId: M:OpenTK.Mathematics.Vector3d.Deconstruct(System.Double@,System.Double@,System.Double@)
  id: Deconstruct(System.Double@,System.Double@,System.Double@)
  parent: OpenTK.Mathematics.Vector3d
  langs:
  - csharp
  - vb
  name: Deconstruct(out double, out double, out double)
  nameWithType: Vector3d.Deconstruct(out double, out double, out double)
  fullName: OpenTK.Mathematics.Vector3d.Deconstruct(out double, out double, out double)
  type: Method
  source:
    id: Deconstruct
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3d.cs
    startLine: 1659
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Deconstructs the vector into it's individual components.
  example: []
  syntax:
    content: >-
      [Pure]

      public readonly void Deconstruct(out double x, out double y, out double z)
    parameters:
    - id: x
      type: System.Double
      description: The X component of the vector.
    - id: y
      type: System.Double
      description: The Y component of the vector.
    - id: z
      type: System.Double
      description: The Z component of the vector.
    content.vb: >-
      <Pure>

      Public Sub Deconstruct(x As Double, y As Double, z As Double)
  overload: OpenTK.Mathematics.Vector3d.Deconstruct*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3d.Deconstruct(Double, Double, Double)
  fullName.vb: OpenTK.Mathematics.Vector3d.Deconstruct(Double, Double, Double)
  name.vb: Deconstruct(Double, Double, Double)
references:
- uid: OpenTK.Mathematics
  commentId: N:OpenTK.Mathematics
  href: OpenTK.html
  name: OpenTK.Mathematics
  nameWithType: OpenTK.Mathematics
  fullName: OpenTK.Mathematics
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
- uid: System.IEquatable{OpenTK.Mathematics.Vector3d}
  commentId: T:System.IEquatable{OpenTK.Mathematics.Vector3d}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Vector3d>
  nameWithType: IEquatable<Vector3d>
  fullName: System.IEquatable<OpenTK.Mathematics.Vector3d>
  nameWithType.vb: IEquatable(Of Vector3d)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Vector3d)
  name.vb: IEquatable(Of Vector3d)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: OpenTK.Mathematics.Vector3d
    name: Vector3d
    href: OpenTK.Mathematics.Vector3d.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Mathematics.Vector3d
    name: Vector3d
    href: OpenTK.Mathematics.Vector3d.html
  - name: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: OpenTK.Mathematics.Vector3d
  commentId: T:OpenTK.Mathematics.Vector3d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector3d.html
  name: Vector3d
  nameWithType: Vector3d
  fullName: OpenTK.Mathematics.Vector3d
- uid: OpenTK.Mathematics.Vector3d.#ctor*
  commentId: Overload:OpenTK.Mathematics.Vector3d.#ctor
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d__ctor_System_Double_
  name: Vector3d
  nameWithType: Vector3d.Vector3d
  fullName: OpenTK.Mathematics.Vector3d.Vector3d
  nameWithType.vb: Vector3d.New
  fullName.vb: OpenTK.Mathematics.Vector3d.New
  name.vb: New
- uid: OpenTK.Mathematics.Vector2d
  commentId: T:OpenTK.Mathematics.Vector2d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector2d.html
  name: Vector2d
  nameWithType: Vector2d
  fullName: OpenTK.Mathematics.Vector2d
- uid: System.IndexOutOfRangeException
  commentId: T:System.IndexOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.indexoutofrangeexception
  name: IndexOutOfRangeException
  nameWithType: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
- uid: OpenTK.Mathematics.Vector3d.Item*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Item
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Item_System_Int32_
  name: this
  nameWithType: Vector3d.this
  fullName: OpenTK.Mathematics.Vector3d.this
  nameWithType.vb: Vector3d.this[]
  fullName.vb: OpenTK.Mathematics.Vector3d.this[]
  name.vb: this[]
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: OpenTK.Mathematics.Vector3d.LengthSquared
  commentId: P:OpenTK.Mathematics.Vector3d.LengthSquared
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_LengthSquared
  name: LengthSquared
  nameWithType: Vector3d.LengthSquared
  fullName: OpenTK.Mathematics.Vector3d.LengthSquared
- uid: OpenTK.Mathematics.Vector3d.LengthFast
  commentId: P:OpenTK.Mathematics.Vector3d.LengthFast
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_LengthFast
  name: LengthFast
  nameWithType: Vector3d.LengthFast
  fullName: OpenTK.Mathematics.Vector3d.LengthFast
- uid: OpenTK.Mathematics.Vector3d.Length*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Length
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Length
  name: Length
  nameWithType: Vector3d.Length
  fullName: OpenTK.Mathematics.Vector3d.Length
- uid: OpenTK.Mathematics.Vector3d.ReciprocalLengthFast*
  commentId: Overload:OpenTK.Mathematics.Vector3d.ReciprocalLengthFast
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_ReciprocalLengthFast
  name: ReciprocalLengthFast
  nameWithType: Vector3d.ReciprocalLengthFast
  fullName: OpenTK.Mathematics.Vector3d.ReciprocalLengthFast
- uid: OpenTK.Mathematics.Vector3d.Length
  commentId: P:OpenTK.Mathematics.Vector3d.Length
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Length
  name: Length
  nameWithType: Vector3d.Length
  fullName: OpenTK.Mathematics.Vector3d.Length
- uid: OpenTK.Mathematics.Vector3d.LengthFast*
  commentId: Overload:OpenTK.Mathematics.Vector3d.LengthFast
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_LengthFast
  name: LengthFast
  nameWithType: Vector3d.LengthFast
  fullName: OpenTK.Mathematics.Vector3d.LengthFast
- uid: OpenTK.Mathematics.Vector3d.LengthSquared*
  commentId: Overload:OpenTK.Mathematics.Vector3d.LengthSquared
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_LengthSquared
  name: LengthSquared
  nameWithType: Vector3d.LengthSquared
  fullName: OpenTK.Mathematics.Vector3d.LengthSquared
- uid: OpenTK.Mathematics.Vector3d.Normalized*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Normalized
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Normalized
  name: Normalized
  nameWithType: Vector3d.Normalized
  fullName: OpenTK.Mathematics.Vector3d.Normalized
- uid: OpenTK.Mathematics.Vector3d.Normalize*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Normalize
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Normalize
  name: Normalize
  nameWithType: Vector3d.Normalize
  fullName: OpenTK.Mathematics.Vector3d.Normalize
- uid: OpenTK.Mathematics.Vector3d.NormalizeFast*
  commentId: Overload:OpenTK.Mathematics.Vector3d.NormalizeFast
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_NormalizeFast
  name: NormalizeFast
  nameWithType: Vector3d.NormalizeFast
  fullName: OpenTK.Mathematics.Vector3d.NormalizeFast
- uid: OpenTK.Mathematics.Vector3d.Abs*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Abs
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Abs
  name: Abs
  nameWithType: Vector3d.Abs
  fullName: OpenTK.Mathematics.Vector3d.Abs
- uid: OpenTK.Mathematics.Vector3d.Add*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Add
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Add_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_
  name: Add
  nameWithType: Vector3d.Add
  fullName: OpenTK.Mathematics.Vector3d.Add
- uid: OpenTK.Mathematics.Vector3d.Subtract*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Subtract
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Subtract_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_
  name: Subtract
  nameWithType: Vector3d.Subtract
  fullName: OpenTK.Mathematics.Vector3d.Subtract
- uid: OpenTK.Mathematics.Vector3d.Multiply*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Multiply
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Multiply_OpenTK_Mathematics_Vector3d_System_Double_
  name: Multiply
  nameWithType: Vector3d.Multiply
  fullName: OpenTK.Mathematics.Vector3d.Multiply
- uid: OpenTK.Mathematics.Vector3d.Divide*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Divide
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Divide_OpenTK_Mathematics_Vector3d_System_Double_
  name: Divide
  nameWithType: Vector3d.Divide
  fullName: OpenTK.Mathematics.Vector3d.Divide
- uid: OpenTK.Mathematics.Vector3d.ComponentMin*
  commentId: Overload:OpenTK.Mathematics.Vector3d.ComponentMin
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_ComponentMin_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_
  name: ComponentMin
  nameWithType: Vector3d.ComponentMin
  fullName: OpenTK.Mathematics.Vector3d.ComponentMin
- uid: OpenTK.Mathematics.Vector3d.ComponentMax*
  commentId: Overload:OpenTK.Mathematics.Vector3d.ComponentMax
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_ComponentMax_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_
  name: ComponentMax
  nameWithType: Vector3d.ComponentMax
  fullName: OpenTK.Mathematics.Vector3d.ComponentMax
- uid: OpenTK.Mathematics.Vector3d.MagnitudeMin*
  commentId: Overload:OpenTK.Mathematics.Vector3d.MagnitudeMin
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_MagnitudeMin_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_
  name: MagnitudeMin
  nameWithType: Vector3d.MagnitudeMin
  fullName: OpenTK.Mathematics.Vector3d.MagnitudeMin
- uid: OpenTK.Mathematics.Vector3d.MagnitudeMax*
  commentId: Overload:OpenTK.Mathematics.Vector3d.MagnitudeMax
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_MagnitudeMax_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_
  name: MagnitudeMax
  nameWithType: Vector3d.MagnitudeMax
  fullName: OpenTK.Mathematics.Vector3d.MagnitudeMax
- uid: OpenTK.Mathematics.Vector3d.Clamp*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Clamp
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Clamp_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_
  name: Clamp
  nameWithType: Vector3d.Clamp
  fullName: OpenTK.Mathematics.Vector3d.Clamp
- uid: OpenTK.Mathematics.Vector3d.Distance*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Distance
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Distance_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_
  name: Distance
  nameWithType: Vector3d.Distance
  fullName: OpenTK.Mathematics.Vector3d.Distance
- uid: OpenTK.Mathematics.Vector3d.DistanceSquared*
  commentId: Overload:OpenTK.Mathematics.Vector3d.DistanceSquared
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_DistanceSquared_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_
  name: DistanceSquared
  nameWithType: Vector3d.DistanceSquared
  fullName: OpenTK.Mathematics.Vector3d.DistanceSquared
- uid: OpenTK.Mathematics.Vector3d.Dot*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Dot
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Dot_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_
  name: Dot
  nameWithType: Vector3d.Dot
  fullName: OpenTK.Mathematics.Vector3d.Dot
- uid: OpenTK.Mathematics.Vector3d.Cross*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Cross
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Cross_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_
  name: Cross
  nameWithType: Vector3d.Cross
  fullName: OpenTK.Mathematics.Vector3d.Cross
- uid: OpenTK.Mathematics.Vector3d.Lerp*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Lerp
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Lerp_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_System_Double_
  name: Lerp
  nameWithType: Vector3d.Lerp
  fullName: OpenTK.Mathematics.Vector3d.Lerp
- uid: OpenTK.Mathematics.Vector3d.Slerp*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Slerp
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Slerp_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_System_Double_
  name: Slerp
  nameWithType: Vector3d.Slerp
  fullName: OpenTK.Mathematics.Vector3d.Slerp
- uid: OpenTK.Mathematics.MathHelper.Elerp(System.Double,System.Double,System.Double)
  commentId: M:OpenTK.Mathematics.MathHelper.Elerp(System.Double,System.Double,System.Double)
  isExternal: true
  href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_Elerp_System_Double_System_Double_System_Double_
  name: Elerp(double, double, double)
  nameWithType: MathHelper.Elerp(double, double, double)
  fullName: OpenTK.Mathematics.MathHelper.Elerp(double, double, double)
  nameWithType.vb: MathHelper.Elerp(Double, Double, Double)
  fullName.vb: OpenTK.Mathematics.MathHelper.Elerp(Double, Double, Double)
  name.vb: Elerp(Double, Double, Double)
  spec.csharp:
  - uid: OpenTK.Mathematics.MathHelper.Elerp(System.Double,System.Double,System.Double)
    name: Elerp
    href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_Elerp_System_Double_System_Double_System_Double_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: OpenTK.Mathematics.MathHelper.Elerp(System.Double,System.Double,System.Double)
    name: Elerp
    href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_Elerp_System_Double_System_Double_System_Double_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: OpenTK.Mathematics.Vector3d.Elerp*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Elerp
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Elerp_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_System_Double_
  name: Elerp
  nameWithType: Vector3d.Elerp
  fullName: OpenTK.Mathematics.Vector3d.Elerp
- uid: OpenTK.Mathematics.Vector3d.BaryCentric*
  commentId: Overload:OpenTK.Mathematics.Vector3d.BaryCentric
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_BaryCentric_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_System_Double_System_Double_
  name: BaryCentric
  nameWithType: Vector3d.BaryCentric
  fullName: OpenTK.Mathematics.Vector3d.BaryCentric
- uid: OpenTK.Mathematics.Vector3d.TransformVector*
  commentId: Overload:OpenTK.Mathematics.Vector3d.TransformVector
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_TransformVector_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Matrix4d_
  name: TransformVector
  nameWithType: Vector3d.TransformVector
  fullName: OpenTK.Mathematics.Vector3d.TransformVector
- uid: OpenTK.Mathematics.Matrix4d
  commentId: T:OpenTK.Mathematics.Matrix4d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Matrix4d.html
  name: Matrix4d
  nameWithType: Matrix4d
  fullName: OpenTK.Mathematics.Matrix4d
- uid: OpenTK.Mathematics.Vector3d.TransformNormal*
  commentId: Overload:OpenTK.Mathematics.Vector3d.TransformNormal
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_TransformNormal_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Matrix4d_
  name: TransformNormal
  nameWithType: Vector3d.TransformNormal
  fullName: OpenTK.Mathematics.Vector3d.TransformNormal
- uid: OpenTK.Mathematics.Vector3d.TransformNormalInverse*
  commentId: Overload:OpenTK.Mathematics.Vector3d.TransformNormalInverse
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_TransformNormalInverse_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Matrix4d_
  name: TransformNormalInverse
  nameWithType: Vector3d.TransformNormalInverse
  fullName: OpenTK.Mathematics.Vector3d.TransformNormalInverse
- uid: OpenTK.Mathematics.Vector3d.TransformPosition*
  commentId: Overload:OpenTK.Mathematics.Vector3d.TransformPosition
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_TransformPosition_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Matrix4d_
  name: TransformPosition
  nameWithType: Vector3d.TransformPosition
  fullName: OpenTK.Mathematics.Vector3d.TransformPosition
- uid: OpenTK.Mathematics.Vector3d.TransformRow*
  commentId: Overload:OpenTK.Mathematics.Vector3d.TransformRow
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_TransformRow_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Matrix3d_
  name: TransformRow
  nameWithType: Vector3d.TransformRow
  fullName: OpenTK.Mathematics.Vector3d.TransformRow
- uid: OpenTK.Mathematics.Matrix3d
  commentId: T:OpenTK.Mathematics.Matrix3d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Matrix3d.html
  name: Matrix3d
  nameWithType: Matrix3d
  fullName: OpenTK.Mathematics.Matrix3d
- uid: OpenTK.Mathematics.Vector3d.Transform*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Transform
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Transform_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Quaterniond_
  name: Transform
  nameWithType: Vector3d.Transform
  fullName: OpenTK.Mathematics.Vector3d.Transform
- uid: OpenTK.Mathematics.Quaterniond
  commentId: T:OpenTK.Mathematics.Quaterniond
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Quaterniond.html
  name: Quaterniond
  nameWithType: Quaterniond
  fullName: OpenTK.Mathematics.Quaterniond
- uid: OpenTK.Mathematics.Vector3d.TransformColumn*
  commentId: Overload:OpenTK.Mathematics.Vector3d.TransformColumn
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_TransformColumn_OpenTK_Mathematics_Matrix3d_OpenTK_Mathematics_Vector3d_
  name: TransformColumn
  nameWithType: Vector3d.TransformColumn
  fullName: OpenTK.Mathematics.Vector3d.TransformColumn
- uid: OpenTK.Mathematics.Vector3d.TransformPerspective*
  commentId: Overload:OpenTK.Mathematics.Vector3d.TransformPerspective
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_TransformPerspective_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Matrix4d_
  name: TransformPerspective
  nameWithType: Vector3d.TransformPerspective
  fullName: OpenTK.Mathematics.Vector3d.TransformPerspective
- uid: OpenTK.Mathematics.Vector3d.CalculateAngle*
  commentId: Overload:OpenTK.Mathematics.Vector3d.CalculateAngle
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_CalculateAngle_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_
  name: CalculateAngle
  nameWithType: Vector3d.CalculateAngle
  fullName: OpenTK.Mathematics.Vector3d.CalculateAngle
- uid: OpenTK.Mathematics.Vector3d.Xy*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Xy
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Xy
  name: Xy
  nameWithType: Vector3d.Xy
  fullName: OpenTK.Mathematics.Vector3d.Xy
- uid: OpenTK.Mathematics.Vector3d.Xz*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Xz
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Xz
  name: Xz
  nameWithType: Vector3d.Xz
  fullName: OpenTK.Mathematics.Vector3d.Xz
- uid: OpenTK.Mathematics.Vector3d.Yx*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Yx
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Yx
  name: Yx
  nameWithType: Vector3d.Yx
  fullName: OpenTK.Mathematics.Vector3d.Yx
- uid: OpenTK.Mathematics.Vector3d.Yz*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Yz
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Yz
  name: Yz
  nameWithType: Vector3d.Yz
  fullName: OpenTK.Mathematics.Vector3d.Yz
- uid: OpenTK.Mathematics.Vector3d.Zx*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Zx
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Zx
  name: Zx
  nameWithType: Vector3d.Zx
  fullName: OpenTK.Mathematics.Vector3d.Zx
- uid: OpenTK.Mathematics.Vector3d.Zy*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Zy
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Zy
  name: Zy
  nameWithType: Vector3d.Zy
  fullName: OpenTK.Mathematics.Vector3d.Zy
- uid: OpenTK.Mathematics.Vector3d.Xzy*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Xzy
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Xzy
  name: Xzy
  nameWithType: Vector3d.Xzy
  fullName: OpenTK.Mathematics.Vector3d.Xzy
- uid: OpenTK.Mathematics.Vector3d.Yxz*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Yxz
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Yxz
  name: Yxz
  nameWithType: Vector3d.Yxz
  fullName: OpenTK.Mathematics.Vector3d.Yxz
- uid: OpenTK.Mathematics.Vector3d.Yzx*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Yzx
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Yzx
  name: Yzx
  nameWithType: Vector3d.Yzx
  fullName: OpenTK.Mathematics.Vector3d.Yzx
- uid: OpenTK.Mathematics.Vector3d.Zxy*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Zxy
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Zxy
  name: Zxy
  nameWithType: Vector3d.Zxy
  fullName: OpenTK.Mathematics.Vector3d.Zxy
- uid: OpenTK.Mathematics.Vector3d.Zyx*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Zyx
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Zyx
  name: Zyx
  nameWithType: Vector3d.Zyx
  fullName: OpenTK.Mathematics.Vector3d.Zyx
- uid: OpenTK.Mathematics.Vector3d.op_Addition*
  commentId: Overload:OpenTK.Mathematics.Vector3d.op_Addition
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_op_Addition_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_
  name: operator +
  nameWithType: Vector3d.operator +
  fullName: OpenTK.Mathematics.Vector3d.operator +
  nameWithType.vb: Vector3d.+
  fullName.vb: OpenTK.Mathematics.Vector3d.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3d.op_Addition*
    name: +
    href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_op_Addition_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_
- uid: OpenTK.Mathematics.Vector3d.op_Subtraction*
  commentId: Overload:OpenTK.Mathematics.Vector3d.op_Subtraction
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_op_Subtraction_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_
  name: operator -
  nameWithType: Vector3d.operator -
  fullName: OpenTK.Mathematics.Vector3d.operator -
  nameWithType.vb: Vector3d.-
  fullName.vb: OpenTK.Mathematics.Vector3d.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3d.op_Subtraction*
    name: '-'
    href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_op_Subtraction_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_
- uid: OpenTK.Mathematics.Vector3d.op_UnaryNegation*
  commentId: Overload:OpenTK.Mathematics.Vector3d.op_UnaryNegation
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_op_UnaryNegation_OpenTK_Mathematics_Vector3d_
  name: operator -
  nameWithType: Vector3d.operator -
  fullName: OpenTK.Mathematics.Vector3d.operator -
  nameWithType.vb: Vector3d.-
  fullName.vb: OpenTK.Mathematics.Vector3d.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3d.op_UnaryNegation*
    name: '-'
    href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_op_UnaryNegation_OpenTK_Mathematics_Vector3d_
- uid: OpenTK.Mathematics.Vector3d.op_Multiply*
  commentId: Overload:OpenTK.Mathematics.Vector3d.op_Multiply
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_op_Multiply_OpenTK_Mathematics_Vector3d_System_Double_
  name: operator *
  nameWithType: Vector3d.operator *
  fullName: OpenTK.Mathematics.Vector3d.operator *
  nameWithType.vb: Vector3d.*
  fullName.vb: OpenTK.Mathematics.Vector3d.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3d.op_Multiply*
    name: '*'
    href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_op_Multiply_OpenTK_Mathematics_Vector3d_System_Double_
- uid: OpenTK.Mathematics.Vector3d.op_Division*
  commentId: Overload:OpenTK.Mathematics.Vector3d.op_Division
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_op_Division_OpenTK_Mathematics_Vector3d_System_Double_
  name: operator /
  nameWithType: Vector3d.operator /
  fullName: OpenTK.Mathematics.Vector3d.operator /
  nameWithType.vb: Vector3d./
  fullName.vb: OpenTK.Mathematics.Vector3d./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3d.op_Division*
    name: /
    href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_op_Division_OpenTK_Mathematics_Vector3d_System_Double_
- uid: OpenTK.Mathematics.Vector3d.op_Equality*
  commentId: Overload:OpenTK.Mathematics.Vector3d.op_Equality
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_op_Equality_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_
  name: operator ==
  nameWithType: Vector3d.operator ==
  fullName: OpenTK.Mathematics.Vector3d.operator ==
  nameWithType.vb: Vector3d.=
  fullName.vb: OpenTK.Mathematics.Vector3d.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3d.op_Equality*
    name: ==
    href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_op_Equality_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenTK.Mathematics.Vector3d.op_Inequality*
  commentId: Overload:OpenTK.Mathematics.Vector3d.op_Inequality
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_op_Inequality_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_
  name: operator !=
  nameWithType: Vector3d.operator !=
  fullName: OpenTK.Mathematics.Vector3d.operator !=
  nameWithType.vb: Vector3d.<>
  fullName.vb: OpenTK.Mathematics.Vector3d.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3d.op_Inequality*
    name: '!='
    href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_op_Inequality_OpenTK_Mathematics_Vector3d_OpenTK_Mathematics_Vector3d_
- uid: OpenTK.Mathematics.Vector3d.op_Explicit*
  commentId: Overload:OpenTK.Mathematics.Vector3d.op_Explicit
  name: explicit operator
  nameWithType: Vector3d.explicit operator
  fullName: OpenTK.Mathematics.Vector3d.explicit operator
  nameWithType.vb: Vector3d.CType
  fullName.vb: OpenTK.Mathematics.Vector3d.CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: OpenTK.Mathematics.Vector3
  commentId: T:OpenTK.Mathematics.Vector3
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: OpenTK.Mathematics.Vector3
- uid: OpenTK.Mathematics.Vector3h
  commentId: T:OpenTK.Mathematics.Vector3h
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector3h.html
  name: Vector3h
  nameWithType: Vector3h
  fullName: OpenTK.Mathematics.Vector3h
- uid: OpenTK.Mathematics.Vector3i
  commentId: T:OpenTK.Mathematics.Vector3i
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector3i.html
  name: Vector3i
  nameWithType: Vector3i
  fullName: OpenTK.Mathematics.Vector3i
- uid: OpenTK.Mathematics.Vector3d.op_Implicit*
  commentId: Overload:OpenTK.Mathematics.Vector3d.op_Implicit
  name: implicit operator
  nameWithType: Vector3d.implicit operator
  fullName: OpenTK.Mathematics.Vector3d.implicit operator
  nameWithType.vb: Vector3d.CType
  fullName.vb: OpenTK.Mathematics.Vector3d.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: System.ValueTuple{System.Double,System.Double,System.Double}
  commentId: T:System.ValueTuple{System.Double,System.Double,System.Double}
  parent: System
  definition: System.ValueTuple`3
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: (double X, double Y, double Z)
  nameWithType: (double X, double Y, double Z)
  fullName: (double X, double Y, double Z)
  nameWithType.vb: (X As Double, Y As Double, Z As Double)
  fullName.vb: (X As Double, Y As Double, Z As Double)
  name.vb: (X As Double, Y As Double, Z As Double)
  spec.csharp:
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double,System.Double}.X
    name: X
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double-.x
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double,System.Double}.Y
    name: Y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double-.y
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double,System.Double}.Z
    name: Z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double-.z
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Double,System.Double,System.Double}.X
    name: X
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double-.x
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double,System.Double}.Y
    name: Y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double-.y
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double,System.Double}.Z
    name: Z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double-.z
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: System.ValueTuple`3
  commentId: T:System.ValueTuple`3
  name: (T1, T2, T3)
  nameWithType: (T1, T2, T3)
  fullName: (T1, T2, T3)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Vector3d.ToString*
  commentId: Overload:OpenTK.Mathematics.Vector3d.ToString
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_ToString
  name: ToString
  nameWithType: Vector3d.ToString
  fullName: OpenTK.Mathematics.Vector3d.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: OpenTK.Mathematics.Vector3d.Equals*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Equals
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Equals_System_Object_
  name: Equals
  nameWithType: Vector3d.Equals
  fullName: OpenTK.Mathematics.Vector3d.Equals
- uid: System.IEquatable{OpenTK.Mathematics.Vector3d}.Equals(OpenTK.Mathematics.Vector3d)
  commentId: M:System.IEquatable{OpenTK.Mathematics.Vector3d}.Equals(OpenTK.Mathematics.Vector3d)
  parent: System.IEquatable{OpenTK.Mathematics.Vector3d}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Vector3d)
  nameWithType: IEquatable<Vector3d>.Equals(Vector3d)
  fullName: System.IEquatable<OpenTK.Mathematics.Vector3d>.Equals(OpenTK.Mathematics.Vector3d)
  nameWithType.vb: IEquatable(Of Vector3d).Equals(Vector3d)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Vector3d).Equals(OpenTK.Mathematics.Vector3d)
  spec.csharp:
  - uid: System.IEquatable{OpenTK.Mathematics.Vector3d}.Equals(OpenTK.Mathematics.Vector3d)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: OpenTK.Mathematics.Vector3d
    name: Vector3d
    href: OpenTK.Mathematics.Vector3d.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{OpenTK.Mathematics.Vector3d}.Equals(OpenTK.Mathematics.Vector3d)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: OpenTK.Mathematics.Vector3d
    name: Vector3d
    href: OpenTK.Mathematics.Vector3d.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Vector3d.GetHashCode*
  commentId: Overload:OpenTK.Mathematics.Vector3d.GetHashCode
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_GetHashCode
  name: GetHashCode
  nameWithType: Vector3d.GetHashCode
  fullName: OpenTK.Mathematics.Vector3d.GetHashCode
- uid: OpenTK.Mathematics.Vector3d.Deconstruct*
  commentId: Overload:OpenTK.Mathematics.Vector3d.Deconstruct
  href: OpenTK.Mathematics.Vector3d.html#OpenTK_Mathematics_Vector3d_Deconstruct_System_Double__System_Double__System_Double__
  name: Deconstruct
  nameWithType: Vector3d.Deconstruct
  fullName: OpenTK.Mathematics.Vector3d.Deconstruct
