### YamlMime:ManagedReference
items:
- uid: OpenTK.Mathematics.Vector4d
  commentId: T:OpenTK.Mathematics.Vector4d
  id: Vector4d
  parent: OpenTK.Mathematics
  children:
  - OpenTK.Mathematics.Vector4d.#ctor(OpenTK.Mathematics.Vector2d,System.Double,System.Double)
  - OpenTK.Mathematics.Vector4d.#ctor(OpenTK.Mathematics.Vector3d,System.Double)
  - OpenTK.Mathematics.Vector4d.#ctor(System.Double)
  - OpenTK.Mathematics.Vector4d.#ctor(System.Double,System.Double,System.Double,System.Double)
  - OpenTK.Mathematics.Vector4d.Abs
  - OpenTK.Mathematics.Vector4d.Abs(OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.Abs(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.Add(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.Add(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.BaryCentric(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,System.Double,System.Double)
  - OpenTK.Mathematics.Vector4d.BaryCentric(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,System.Double,System.Double,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.Clamp(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.Clamp(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.ComponentMax(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.ComponentMax(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.ComponentMin(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.ComponentMin(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.Deconstruct(System.Double@,System.Double@,System.Double@,System.Double@)
  - OpenTK.Mathematics.Vector4d.Divide(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.Divide(OpenTK.Mathematics.Vector4d,System.Double)
  - OpenTK.Mathematics.Vector4d.Divide(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.Divide(OpenTK.Mathematics.Vector4d@,System.Double,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.Dot(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.Dot(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,System.Double@)
  - OpenTK.Mathematics.Vector4d.Elerp(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,System.Single)
  - OpenTK.Mathematics.Vector4d.Elerp(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,System.Single,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.Equals(OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.Equals(System.Object)
  - OpenTK.Mathematics.Vector4d.GetHashCode
  - OpenTK.Mathematics.Vector4d.Item(System.Int32)
  - OpenTK.Mathematics.Vector4d.Length
  - OpenTK.Mathematics.Vector4d.LengthFast
  - OpenTK.Mathematics.Vector4d.LengthSquared
  - OpenTK.Mathematics.Vector4d.Lerp(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.Lerp(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,System.Double)
  - OpenTK.Mathematics.Vector4d.Lerp(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.Lerp(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,System.Double,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.MagnitudeMax(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.MagnitudeMax(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.MagnitudeMin(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.MagnitudeMin(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.Multiply(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.Multiply(OpenTK.Mathematics.Vector4d,System.Double)
  - OpenTK.Mathematics.Vector4d.Multiply(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.Multiply(OpenTK.Mathematics.Vector4d@,System.Double,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.NegativeInfinity
  - OpenTK.Mathematics.Vector4d.Normalize
  - OpenTK.Mathematics.Vector4d.Normalize(OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.Normalize(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.NormalizeFast
  - OpenTK.Mathematics.Vector4d.NormalizeFast(OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.NormalizeFast(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.Normalized
  - OpenTK.Mathematics.Vector4d.One
  - OpenTK.Mathematics.Vector4d.PositiveInfinity
  - OpenTK.Mathematics.Vector4d.ReciprocalLengthFast
  - OpenTK.Mathematics.Vector4d.SizeInBytes
  - OpenTK.Mathematics.Vector4d.Slerp(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,System.Double)
  - OpenTK.Mathematics.Vector4d.Slerp(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,System.Double,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.Subtract(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.Subtract(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.ToString
  - OpenTK.Mathematics.Vector4d.ToString(System.IFormatProvider)
  - OpenTK.Mathematics.Vector4d.ToString(System.String)
  - OpenTK.Mathematics.Vector4d.ToString(System.String,System.IFormatProvider)
  - OpenTK.Mathematics.Vector4d.Transform(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Quaterniond)
  - OpenTK.Mathematics.Vector4d.Transform(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Quaterniond@,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.TransformColumn(OpenTK.Mathematics.Matrix4d,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.TransformColumn(OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.TransformRow(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Matrix4d)
  - OpenTK.Mathematics.Vector4d.TransformRow(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector4d@)
  - OpenTK.Mathematics.Vector4d.UnitW
  - OpenTK.Mathematics.Vector4d.UnitX
  - OpenTK.Mathematics.Vector4d.UnitY
  - OpenTK.Mathematics.Vector4d.UnitZ
  - OpenTK.Mathematics.Vector4d.W
  - OpenTK.Mathematics.Vector4d.Wx
  - OpenTK.Mathematics.Vector4d.Wxy
  - OpenTK.Mathematics.Vector4d.Wxyz
  - OpenTK.Mathematics.Vector4d.Wxz
  - OpenTK.Mathematics.Vector4d.Wxzy
  - OpenTK.Mathematics.Vector4d.Wy
  - OpenTK.Mathematics.Vector4d.Wyx
  - OpenTK.Mathematics.Vector4d.Wyxz
  - OpenTK.Mathematics.Vector4d.Wyz
  - OpenTK.Mathematics.Vector4d.Wyzx
  - OpenTK.Mathematics.Vector4d.Wz
  - OpenTK.Mathematics.Vector4d.Wzx
  - OpenTK.Mathematics.Vector4d.Wzxy
  - OpenTK.Mathematics.Vector4d.Wzy
  - OpenTK.Mathematics.Vector4d.Wzyw
  - OpenTK.Mathematics.Vector4d.Wzyx
  - OpenTK.Mathematics.Vector4d.X
  - OpenTK.Mathematics.Vector4d.Xw
  - OpenTK.Mathematics.Vector4d.Xwy
  - OpenTK.Mathematics.Vector4d.Xwyz
  - OpenTK.Mathematics.Vector4d.Xwz
  - OpenTK.Mathematics.Vector4d.Xwzy
  - OpenTK.Mathematics.Vector4d.Xy
  - OpenTK.Mathematics.Vector4d.Xyw
  - OpenTK.Mathematics.Vector4d.Xywz
  - OpenTK.Mathematics.Vector4d.Xyz
  - OpenTK.Mathematics.Vector4d.Xz
  - OpenTK.Mathematics.Vector4d.Xzw
  - OpenTK.Mathematics.Vector4d.Xzwy
  - OpenTK.Mathematics.Vector4d.Xzy
  - OpenTK.Mathematics.Vector4d.Xzyw
  - OpenTK.Mathematics.Vector4d.Y
  - OpenTK.Mathematics.Vector4d.Yw
  - OpenTK.Mathematics.Vector4d.Ywx
  - OpenTK.Mathematics.Vector4d.Ywxz
  - OpenTK.Mathematics.Vector4d.Ywz
  - OpenTK.Mathematics.Vector4d.Ywzx
  - OpenTK.Mathematics.Vector4d.Yx
  - OpenTK.Mathematics.Vector4d.Yxw
  - OpenTK.Mathematics.Vector4d.Yxwz
  - OpenTK.Mathematics.Vector4d.Yxz
  - OpenTK.Mathematics.Vector4d.Yxzw
  - OpenTK.Mathematics.Vector4d.Yywz
  - OpenTK.Mathematics.Vector4d.Yyzw
  - OpenTK.Mathematics.Vector4d.Yz
  - OpenTK.Mathematics.Vector4d.Yzw
  - OpenTK.Mathematics.Vector4d.Yzwx
  - OpenTK.Mathematics.Vector4d.Yzx
  - OpenTK.Mathematics.Vector4d.Yzxw
  - OpenTK.Mathematics.Vector4d.Z
  - OpenTK.Mathematics.Vector4d.Zero
  - OpenTK.Mathematics.Vector4d.Zw
  - OpenTK.Mathematics.Vector4d.Zwx
  - OpenTK.Mathematics.Vector4d.Zwxy
  - OpenTK.Mathematics.Vector4d.Zwy
  - OpenTK.Mathematics.Vector4d.Zwyx
  - OpenTK.Mathematics.Vector4d.Zwzy
  - OpenTK.Mathematics.Vector4d.Zx
  - OpenTK.Mathematics.Vector4d.Zxw
  - OpenTK.Mathematics.Vector4d.Zxwy
  - OpenTK.Mathematics.Vector4d.Zxy
  - OpenTK.Mathematics.Vector4d.Zxyw
  - OpenTK.Mathematics.Vector4d.Zy
  - OpenTK.Mathematics.Vector4d.Zyw
  - OpenTK.Mathematics.Vector4d.Zywx
  - OpenTK.Mathematics.Vector4d.Zyx
  - OpenTK.Mathematics.Vector4d.Zyxw
  - OpenTK.Mathematics.Vector4d.op_Addition(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.op_Division(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.op_Division(OpenTK.Mathematics.Vector4d,System.Double)
  - OpenTK.Mathematics.Vector4d.op_Equality(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.op_Explicit(OpenTK.Mathematics.Vector4d)~OpenTK.Mathematics.Vector4
  - OpenTK.Mathematics.Vector4d.op_Explicit(OpenTK.Mathematics.Vector4d)~OpenTK.Mathematics.Vector4h
  - OpenTK.Mathematics.Vector4d.op_Explicit(OpenTK.Mathematics.Vector4d)~OpenTK.Mathematics.Vector4i
  - OpenTK.Mathematics.Vector4d.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})~OpenTK.Mathematics.Vector4d
  - OpenTK.Mathematics.Vector4d.op_Inequality(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.op_Multiply(OpenTK.Mathematics.Matrix4d,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.op_Multiply(OpenTK.Mathematics.Quaterniond,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.op_Multiply(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Matrix4d)
  - OpenTK.Mathematics.Vector4d.op_Multiply(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.op_Multiply(OpenTK.Mathematics.Vector4d,System.Double)
  - OpenTK.Mathematics.Vector4d.op_Multiply(System.Double,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.op_Subtraction(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  - OpenTK.Mathematics.Vector4d.op_UnaryNegation(OpenTK.Mathematics.Vector4d)
  langs:
  - csharp
  - vb
  name: Vector4d
  nameWithType: Vector4d
  fullName: OpenTK.Mathematics.Vector4d
  type: Struct
  source:
    id: Vector4d
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 37
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Represents a 4D vector using four double-precision floating-point numbers.
  remarks: The Vector4 structure is suitable for interoperation with unmanaged code requiring four consecutive doubles.
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct Vector4d : IEquatable<Vector4d>, IFormattable
    content.vb: >-
      <Serializable>

      Public Structure Vector4d Implements IEquatable(Of Vector4d), IFormattable
  implements:
  - System.IEquatable{OpenTK.Mathematics.Vector4d}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4d.X
  commentId: F:OpenTK.Mathematics.Vector4d.X
  id: X
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Vector4d.X
  fullName: OpenTK.Mathematics.Vector4d.X
  type: Field
  source:
    id: X
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 44
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The X component of the Vector4d.
  example: []
  syntax:
    content: public double X
    return:
      type: System.Double
    content.vb: Public X As Double
- uid: OpenTK.Mathematics.Vector4d.Y
  commentId: F:OpenTK.Mathematics.Vector4d.Y
  id: Y
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Vector4d.Y
  fullName: OpenTK.Mathematics.Vector4d.Y
  type: Field
  source:
    id: Y
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 49
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The Y component of the Vector4d.
  example: []
  syntax:
    content: public double Y
    return:
      type: System.Double
    content.vb: Public Y As Double
- uid: OpenTK.Mathematics.Vector4d.Z
  commentId: F:OpenTK.Mathematics.Vector4d.Z
  id: Z
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: Vector4d.Z
  fullName: OpenTK.Mathematics.Vector4d.Z
  type: Field
  source:
    id: Z
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 54
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The Z component of the Vector4d.
  example: []
  syntax:
    content: public double Z
    return:
      type: System.Double
    content.vb: Public Z As Double
- uid: OpenTK.Mathematics.Vector4d.W
  commentId: F:OpenTK.Mathematics.Vector4d.W
  id: W
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: W
  nameWithType: Vector4d.W
  fullName: OpenTK.Mathematics.Vector4d.W
  type: Field
  source:
    id: W
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 59
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The W component of the Vector4d.
  example: []
  syntax:
    content: public double W
    return:
      type: System.Double
    content.vb: Public W As Double
- uid: OpenTK.Mathematics.Vector4d.UnitX
  commentId: F:OpenTK.Mathematics.Vector4d.UnitX
  id: UnitX
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: UnitX
  nameWithType: Vector4d.UnitX
  fullName: OpenTK.Mathematics.Vector4d.UnitX
  type: Field
  source:
    id: UnitX
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 64
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length Vector4d that points towards the X-axis.
  example: []
  syntax:
    content: public static readonly Vector4d UnitX
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Shared ReadOnly UnitX As Vector4d
- uid: OpenTK.Mathematics.Vector4d.UnitY
  commentId: F:OpenTK.Mathematics.Vector4d.UnitY
  id: UnitY
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: UnitY
  nameWithType: Vector4d.UnitY
  fullName: OpenTK.Mathematics.Vector4d.UnitY
  type: Field
  source:
    id: UnitY
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 69
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length Vector4d that points towards the Y-axis.
  example: []
  syntax:
    content: public static readonly Vector4d UnitY
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Shared ReadOnly UnitY As Vector4d
- uid: OpenTK.Mathematics.Vector4d.UnitZ
  commentId: F:OpenTK.Mathematics.Vector4d.UnitZ
  id: UnitZ
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: UnitZ
  nameWithType: Vector4d.UnitZ
  fullName: OpenTK.Mathematics.Vector4d.UnitZ
  type: Field
  source:
    id: UnitZ
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 74
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length Vector4d that points towards the Z-axis.
  example: []
  syntax:
    content: public static readonly Vector4d UnitZ
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Shared ReadOnly UnitZ As Vector4d
- uid: OpenTK.Mathematics.Vector4d.UnitW
  commentId: F:OpenTK.Mathematics.Vector4d.UnitW
  id: UnitW
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: UnitW
  nameWithType: Vector4d.UnitW
  fullName: OpenTK.Mathematics.Vector4d.UnitW
  type: Field
  source:
    id: UnitW
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 79
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length Vector4d that points towards the W-axis.
  example: []
  syntax:
    content: public static readonly Vector4d UnitW
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Shared ReadOnly UnitW As Vector4d
- uid: OpenTK.Mathematics.Vector4d.Zero
  commentId: F:OpenTK.Mathematics.Vector4d.Zero
  id: Zero
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Vector4d.Zero
  fullName: OpenTK.Mathematics.Vector4d.Zero
  type: Field
  source:
    id: Zero
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 84
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to 0.
  example: []
  syntax:
    content: public static readonly Vector4d Zero
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Shared ReadOnly Zero As Vector4d
- uid: OpenTK.Mathematics.Vector4d.One
  commentId: F:OpenTK.Mathematics.Vector4d.One
  id: One
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Vector4d.One
  fullName: OpenTK.Mathematics.Vector4d.One
  type: Field
  source:
    id: One
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 89
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to 1.
  example: []
  syntax:
    content: public static readonly Vector4d One
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Shared ReadOnly One As Vector4d
- uid: OpenTK.Mathematics.Vector4d.PositiveInfinity
  commentId: F:OpenTK.Mathematics.Vector4d.PositiveInfinity
  id: PositiveInfinity
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: PositiveInfinity
  nameWithType: Vector4d.PositiveInfinity
  fullName: OpenTK.Mathematics.Vector4d.PositiveInfinity
  type: Field
  source:
    id: PositiveInfinity
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 94
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to positive infinity.
  example: []
  syntax:
    content: public static readonly Vector4d PositiveInfinity
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Shared ReadOnly PositiveInfinity As Vector4d
- uid: OpenTK.Mathematics.Vector4d.NegativeInfinity
  commentId: F:OpenTK.Mathematics.Vector4d.NegativeInfinity
  id: NegativeInfinity
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: NegativeInfinity
  nameWithType: Vector4d.NegativeInfinity
  fullName: OpenTK.Mathematics.Vector4d.NegativeInfinity
  type: Field
  source:
    id: NegativeInfinity
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 99
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to negative infinity.
  example: []
  syntax:
    content: public static readonly Vector4d NegativeInfinity
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Shared ReadOnly NegativeInfinity As Vector4d
- uid: OpenTK.Mathematics.Vector4d.SizeInBytes
  commentId: F:OpenTK.Mathematics.Vector4d.SizeInBytes
  id: SizeInBytes
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: SizeInBytes
  nameWithType: Vector4d.SizeInBytes
  fullName: OpenTK.Mathematics.Vector4d.SizeInBytes
  type: Field
  source:
    id: SizeInBytes
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 104
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines the size of the Vector4d struct in bytes.
  example: []
  syntax:
    content: public static readonly int SizeInBytes
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly SizeInBytes As Integer
- uid: OpenTK.Mathematics.Vector4d.#ctor(System.Double)
  commentId: M:OpenTK.Mathematics.Vector4d.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Vector4d(double)
  nameWithType: Vector4d.Vector4d(double)
  fullName: OpenTK.Mathematics.Vector4d.Vector4d(double)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 110
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector4d" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector4d(double value)
    parameters:
    - id: value
      type: System.Double
      description: The value that will initialize this instance.
    content.vb: Public Sub New(value As Double)
  overload: OpenTK.Mathematics.Vector4d.#ctor*
  nameWithType.vb: Vector4d.New(Double)
  fullName.vb: OpenTK.Mathematics.Vector4d.New(Double)
  name.vb: New(Double)
- uid: OpenTK.Mathematics.Vector4d.#ctor(System.Double,System.Double,System.Double,System.Double)
  commentId: M:OpenTK.Mathematics.Vector4d.#ctor(System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Vector4d(double, double, double, double)
  nameWithType: Vector4d.Vector4d(double, double, double, double)
  fullName: OpenTK.Mathematics.Vector4d.Vector4d(double, double, double, double)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 125
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector4d" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector4d(double x, double y, double z, double w)
    parameters:
    - id: x
      type: System.Double
      description: The x component of the Vector4d.
    - id: y
      type: System.Double
      description: The y component of the Vector4d.
    - id: z
      type: System.Double
      description: The z component of the Vector4d.
    - id: w
      type: System.Double
      description: The w component of the Vector4d.
    content.vb: Public Sub New(x As Double, y As Double, z As Double, w As Double)
  overload: OpenTK.Mathematics.Vector4d.#ctor*
  nameWithType.vb: Vector4d.New(Double, Double, Double, Double)
  fullName.vb: OpenTK.Mathematics.Vector4d.New(Double, Double, Double, Double)
  name.vb: New(Double, Double, Double, Double)
- uid: OpenTK.Mathematics.Vector4d.#ctor(OpenTK.Mathematics.Vector2d,System.Double,System.Double)
  commentId: M:OpenTK.Mathematics.Vector4d.#ctor(OpenTK.Mathematics.Vector2d,System.Double,System.Double)
  id: '#ctor(OpenTK.Mathematics.Vector2d,System.Double,System.Double)'
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Vector4d(Vector2d, double, double)
  nameWithType: Vector4d.Vector4d(Vector2d, double, double)
  fullName: OpenTK.Mathematics.Vector4d.Vector4d(OpenTK.Mathematics.Vector2d, double, double)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 139
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector4d" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector4d(Vector2d xy, double z = 0, double w = 0)
    parameters:
    - id: xy
      type: OpenTK.Mathematics.Vector2d
      description: The x and y components of the Vector4d.
    - id: z
      type: System.Double
      description: The z component of the Vector4d.
    - id: w
      type: System.Double
      description: The w component of the Vector4d.
    content.vb: Public Sub New(xy As Vector2d, z As Double = 0, w As Double = 0)
  overload: OpenTK.Mathematics.Vector4d.#ctor*
  nameWithType.vb: Vector4d.New(Vector2d, Double, Double)
  fullName.vb: OpenTK.Mathematics.Vector4d.New(OpenTK.Mathematics.Vector2d, Double, Double)
  name.vb: New(Vector2d, Double, Double)
- uid: OpenTK.Mathematics.Vector4d.#ctor(OpenTK.Mathematics.Vector3d,System.Double)
  commentId: M:OpenTK.Mathematics.Vector4d.#ctor(OpenTK.Mathematics.Vector3d,System.Double)
  id: '#ctor(OpenTK.Mathematics.Vector3d,System.Double)'
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Vector4d(Vector3d, double)
  nameWithType: Vector4d.Vector4d(Vector3d, double)
  fullName: OpenTK.Mathematics.Vector4d.Vector4d(OpenTK.Mathematics.Vector3d, double)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 152
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector4d" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector4d(Vector3d xyz, double w = 0)
    parameters:
    - id: xyz
      type: OpenTK.Mathematics.Vector3d
      description: The x, y and z components of the Vector4d.
    - id: w
      type: System.Double
      description: The w component of the Vector4d.
    content.vb: Public Sub New(xyz As Vector3d, w As Double = 0)
  overload: OpenTK.Mathematics.Vector4d.#ctor*
  nameWithType.vb: Vector4d.New(Vector3d, Double)
  fullName.vb: OpenTK.Mathematics.Vector4d.New(OpenTK.Mathematics.Vector3d, Double)
  name.vb: New(Vector3d, Double)
- uid: OpenTK.Mathematics.Vector4d.Item(System.Int32)
  commentId: P:OpenTK.Mathematics.Vector4d.Item(System.Int32)
  id: Item(System.Int32)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: Vector4d.this[int]
  fullName: OpenTK.Mathematics.Vector4d.this[int]
  type: Property
  source:
    id: this[]
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 165
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the value at the index of the Vector.
  example: []
  syntax:
    content: public double this[int index] { readonly get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The index of the component from the Vector.
    return:
      type: System.Double
    content.vb: Public Default Property this[](index As Integer) As Double
  overload: OpenTK.Mathematics.Vector4d.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: Thrown if the index is less than 0 or greater than 3.
  nameWithType.vb: Vector4d.this[](Integer)
  fullName.vb: OpenTK.Mathematics.Vector4d.this[](Integer)
  name.vb: this[](Integer)
- uid: OpenTK.Mathematics.Vector4d.Length
  commentId: P:OpenTK.Mathematics.Vector4d.Length
  id: Length
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Vector4d.Length
  fullName: OpenTK.Mathematics.Vector4d.Length
  type: Property
  source:
    id: Length
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 222
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the length (magnitude) of the vector.
  example: []
  syntax:
    content: public readonly double Length { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Length As Double
  overload: OpenTK.Mathematics.Vector4d.Length*
  seealso:
  - linkId: OpenTK.Mathematics.Vector4d.LengthSquared
    commentId: P:OpenTK.Mathematics.Vector4d.LengthSquared
- uid: OpenTK.Mathematics.Vector4d.ReciprocalLengthFast
  commentId: P:OpenTK.Mathematics.Vector4d.ReciprocalLengthFast
  id: ReciprocalLengthFast
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: ReciprocalLengthFast
  nameWithType: Vector4d.ReciprocalLengthFast
  fullName: OpenTK.Mathematics.Vector4d.ReciprocalLengthFast
  type: Property
  source:
    id: ReciprocalLengthFast
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 227
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets an approximation of 1 over the length (magnitude) of the vector.
  example: []
  syntax:
    content: public readonly double ReciprocalLengthFast { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property ReciprocalLengthFast As Double
  overload: OpenTK.Mathematics.Vector4d.ReciprocalLengthFast*
- uid: OpenTK.Mathematics.Vector4d.LengthFast
  commentId: P:OpenTK.Mathematics.Vector4d.LengthFast
  id: LengthFast
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: LengthFast
  nameWithType: Vector4d.LengthFast
  fullName: OpenTK.Mathematics.Vector4d.LengthFast
  type: Property
  source:
    id: LengthFast
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 237
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets an approximation of the vector length (magnitude).
  remarks: This property uses an approximation of the square root function to calculate vector magnitude.
  example: []
  syntax:
    content: public readonly double LengthFast { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property LengthFast As Double
  overload: OpenTK.Mathematics.Vector4d.LengthFast*
  seealso:
  - linkId: OpenTK.Mathematics.Vector4d.LengthSquared
    commentId: P:OpenTK.Mathematics.Vector4d.LengthSquared
- uid: OpenTK.Mathematics.Vector4d.LengthSquared
  commentId: P:OpenTK.Mathematics.Vector4d.LengthSquared
  id: LengthSquared
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: LengthSquared
  nameWithType: Vector4d.LengthSquared
  fullName: OpenTK.Mathematics.Vector4d.LengthSquared
  type: Property
  source:
    id: LengthSquared
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 247
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the square of the vector length (magnitude).
  remarks: >-
    This property avoids the costly square root operation required by the Length property. This makes it more suitable

    for comparisons.
  example: []
  syntax:
    content: public readonly double LengthSquared { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property LengthSquared As Double
  overload: OpenTK.Mathematics.Vector4d.LengthSquared*
- uid: OpenTK.Mathematics.Vector4d.Normalized
  commentId: M:OpenTK.Mathematics.Vector4d.Normalized
  id: Normalized
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Normalized()
  nameWithType: Vector4d.Normalized()
  fullName: OpenTK.Mathematics.Vector4d.Normalized()
  type: Method
  source:
    id: Normalized
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 253
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a copy of the Vector4d scaled to unit length.
  example: []
  syntax:
    content: public readonly Vector4d Normalized()
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The normalized copy.
    content.vb: Public Function Normalized() As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Normalized*
- uid: OpenTK.Mathematics.Vector4d.Normalize
  commentId: M:OpenTK.Mathematics.Vector4d.Normalize
  id: Normalize
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: Vector4d.Normalize()
  fullName: OpenTK.Mathematics.Vector4d.Normalize()
  type: Method
  source:
    id: Normalize
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 263
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scales the Vector4d to unit length.
  example: []
  syntax:
    content: public void Normalize()
    content.vb: Public Sub Normalize()
  overload: OpenTK.Mathematics.Vector4d.Normalize*
- uid: OpenTK.Mathematics.Vector4d.NormalizeFast
  commentId: M:OpenTK.Mathematics.Vector4d.NormalizeFast
  id: NormalizeFast
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: NormalizeFast()
  nameWithType: Vector4d.NormalizeFast()
  fullName: OpenTK.Mathematics.Vector4d.NormalizeFast()
  type: Method
  source:
    id: NormalizeFast
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 275
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scales the Vector4d to approximately unit length.
  example: []
  syntax:
    content: public void NormalizeFast()
    content.vb: Public Sub NormalizeFast()
  overload: OpenTK.Mathematics.Vector4d.NormalizeFast*
- uid: OpenTK.Mathematics.Vector4d.Abs
  commentId: M:OpenTK.Mathematics.Vector4d.Abs
  id: Abs
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Abs()
  nameWithType: Vector4d.Abs()
  fullName: OpenTK.Mathematics.Vector4d.Abs()
  type: Method
  source:
    id: Abs
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 288
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the component-wise absolute value of the vector.
  example: []
  syntax:
    content: public readonly Vector4d Abs()
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The component-wise absolute value vector.
    content.vb: Public Function Abs() As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Abs*
- uid: OpenTK.Mathematics.Vector4d.Add(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.Add(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  id: Add(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Add(Vector4d, Vector4d)
  nameWithType: Vector4d.Add(Vector4d, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Add(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Add
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 304
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d Add(Vector4d a, Vector4d b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4d
      description: Left operand.
    - id: b
      type: OpenTK.Mathematics.Vector4d
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: Result of operation.
    content.vb: >-
      <Pure>

      Public Shared Function Add(a As Vector4d, b As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Add*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4d.Add(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.Add(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  id: Add(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Add(in Vector4d, in Vector4d, out Vector4d)
  nameWithType: Vector4d.Add(in Vector4d, in Vector4d, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Add(in OpenTK.Mathematics.Vector4d, in OpenTK.Mathematics.Vector4d, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Add
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 317
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two vectors.
  example: []
  syntax:
    content: public static void Add(in Vector4d a, in Vector4d b, out Vector4d result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4d
      description: Left operand.
    - id: b
      type: OpenTK.Mathematics.Vector4d
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: Result of operation.
    content.vb: Public Shared Sub Add(a As Vector4d, b As Vector4d, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.Add*
  nameWithType.vb: Vector4d.Add(Vector4d, Vector4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.Add(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  name.vb: Add(Vector4d, Vector4d, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.Subtract(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.Subtract(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  id: Subtract(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Subtract(Vector4d, Vector4d)
  nameWithType: Vector4d.Subtract(Vector4d, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Subtract(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Subtract
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 331
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtract one Vector from another.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d Subtract(Vector4d a, Vector4d b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4d
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector4d
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: Result of subtraction.
    content.vb: >-
      <Pure>

      Public Shared Function Subtract(a As Vector4d, b As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Subtract*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4d.Subtract(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.Subtract(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  id: Subtract(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Subtract(in Vector4d, in Vector4d, out Vector4d)
  nameWithType: Vector4d.Subtract(in Vector4d, in Vector4d, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Subtract(in OpenTK.Mathematics.Vector4d, in OpenTK.Mathematics.Vector4d, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Subtract
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 344
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtract one Vector from another.
  example: []
  syntax:
    content: public static void Subtract(in Vector4d a, in Vector4d b, out Vector4d result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4d
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector4d
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: Result of subtraction.
    content.vb: Public Shared Sub Subtract(a As Vector4d, b As Vector4d, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.Subtract*
  nameWithType.vb: Vector4d.Subtract(Vector4d, Vector4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.Subtract(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  name.vb: Subtract(Vector4d, Vector4d, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.Multiply(OpenTK.Mathematics.Vector4d,System.Double)
  commentId: M:OpenTK.Mathematics.Vector4d.Multiply(OpenTK.Mathematics.Vector4d,System.Double)
  id: Multiply(OpenTK.Mathematics.Vector4d,System.Double)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Multiply(Vector4d, double)
  nameWithType: Vector4d.Multiply(Vector4d, double)
  fullName: OpenTK.Mathematics.Vector4d.Multiply(OpenTK.Mathematics.Vector4d, double)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 358
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d Multiply(Vector4d vector, double scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4d
      description: Left operand.
    - id: scale
      type: System.Double
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Multiply(vector As Vector4d, scale As Double) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d.Multiply(Vector4d, Double)
  fullName.vb: OpenTK.Mathematics.Vector4d.Multiply(OpenTK.Mathematics.Vector4d, Double)
  name.vb: Multiply(Vector4d, Double)
- uid: OpenTK.Mathematics.Vector4d.Multiply(OpenTK.Mathematics.Vector4d@,System.Double,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.Multiply(OpenTK.Mathematics.Vector4d@,System.Double,OpenTK.Mathematics.Vector4d@)
  id: Multiply(OpenTK.Mathematics.Vector4d@,System.Double,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Multiply(in Vector4d, double, out Vector4d)
  nameWithType: Vector4d.Multiply(in Vector4d, double, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Multiply(in OpenTK.Mathematics.Vector4d, double, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 371
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by a scalar.
  example: []
  syntax:
    content: public static void Multiply(in Vector4d vector, double scale, out Vector4d result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4d
      description: Left operand.
    - id: scale
      type: System.Double
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: Result of the operation.
    content.vb: Public Shared Sub Multiply(vector As Vector4d, scale As Double, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.Multiply*
  nameWithType.vb: Vector4d.Multiply(Vector4d, Double, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.Multiply(OpenTK.Mathematics.Vector4d, Double, OpenTK.Mathematics.Vector4d)
  name.vb: Multiply(Vector4d, Double, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.Multiply(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.Multiply(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  id: Multiply(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Multiply(Vector4d, Vector4d)
  nameWithType: Vector4d.Multiply(Vector4d, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Multiply(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 385
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by the components a vector (scale).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d Multiply(Vector4d vector, Vector4d scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4d
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector4d
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Multiply(vector As Vector4d, scale As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4d.Multiply(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.Multiply(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  id: Multiply(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Multiply(in Vector4d, in Vector4d, out Vector4d)
  nameWithType: Vector4d.Multiply(in Vector4d, in Vector4d, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Multiply(in OpenTK.Mathematics.Vector4d, in OpenTK.Mathematics.Vector4d, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 398
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by the components of a vector (scale).
  example: []
  syntax:
    content: public static void Multiply(in Vector4d vector, in Vector4d scale, out Vector4d result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4d
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector4d
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: Result of the operation.
    content.vb: Public Shared Sub Multiply(vector As Vector4d, scale As Vector4d, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.Multiply*
  nameWithType.vb: Vector4d.Multiply(Vector4d, Vector4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.Multiply(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  name.vb: Multiply(Vector4d, Vector4d, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.Divide(OpenTK.Mathematics.Vector4d,System.Double)
  commentId: M:OpenTK.Mathematics.Vector4d.Divide(OpenTK.Mathematics.Vector4d,System.Double)
  id: Divide(OpenTK.Mathematics.Vector4d,System.Double)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Divide(Vector4d, double)
  nameWithType: Vector4d.Divide(Vector4d, double)
  fullName: OpenTK.Mathematics.Vector4d.Divide(OpenTK.Mathematics.Vector4d, double)
  type: Method
  source:
    id: Divide
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 412
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d Divide(Vector4d vector, double scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4d
      description: Left operand.
    - id: scale
      type: System.Double
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Divide(vector As Vector4d, scale As Double) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Divide*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d.Divide(Vector4d, Double)
  fullName.vb: OpenTK.Mathematics.Vector4d.Divide(OpenTK.Mathematics.Vector4d, Double)
  name.vb: Divide(Vector4d, Double)
- uid: OpenTK.Mathematics.Vector4d.Divide(OpenTK.Mathematics.Vector4d@,System.Double,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.Divide(OpenTK.Mathematics.Vector4d@,System.Double,OpenTK.Mathematics.Vector4d@)
  id: Divide(OpenTK.Mathematics.Vector4d@,System.Double,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Divide(in Vector4d, double, out Vector4d)
  nameWithType: Vector4d.Divide(in Vector4d, double, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Divide(in OpenTK.Mathematics.Vector4d, double, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Divide
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 425
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by a scalar.
  example: []
  syntax:
    content: public static void Divide(in Vector4d vector, double scale, out Vector4d result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4d
      description: Left operand.
    - id: scale
      type: System.Double
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: Result of the operation.
    content.vb: Public Shared Sub Divide(vector As Vector4d, scale As Double, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.Divide*
  nameWithType.vb: Vector4d.Divide(Vector4d, Double, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.Divide(OpenTK.Mathematics.Vector4d, Double, OpenTK.Mathematics.Vector4d)
  name.vb: Divide(Vector4d, Double, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.Divide(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.Divide(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  id: Divide(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Divide(Vector4d, Vector4d)
  nameWithType: Vector4d.Divide(Vector4d, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Divide(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Divide
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 439
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by the components of a vector (scale).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d Divide(Vector4d vector, Vector4d scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4d
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector4d
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Divide(vector As Vector4d, scale As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Divide*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4d.Divide(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.Divide(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  id: Divide(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Divide(in Vector4d, in Vector4d, out Vector4d)
  nameWithType: Vector4d.Divide(in Vector4d, in Vector4d, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Divide(in OpenTK.Mathematics.Vector4d, in OpenTK.Mathematics.Vector4d, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Divide
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 452
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divide a vector by the components of a vector (scale).
  example: []
  syntax:
    content: public static void Divide(in Vector4d vector, in Vector4d scale, out Vector4d result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector4d
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector4d
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: Result of the operation.
    content.vb: Public Shared Sub Divide(vector As Vector4d, scale As Vector4d, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.Divide*
  nameWithType.vb: Vector4d.Divide(Vector4d, Vector4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.Divide(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  name.vb: Divide(Vector4d, Vector4d, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.ComponentMin(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.ComponentMin(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  id: ComponentMin(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: ComponentMin(Vector4d, Vector4d)
  nameWithType: Vector4d.ComponentMin(Vector4d, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.ComponentMin(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: ComponentMin
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 466
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the smallest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d ComponentMin(Vector4d a, Vector4d b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4d
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector4d
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The component-wise minimum.
    content.vb: >-
      <Pure>

      Public Shared Function ComponentMin(a As Vector4d, b As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.ComponentMin*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4d.ComponentMin(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.ComponentMin(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  id: ComponentMin(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: ComponentMin(in Vector4d, in Vector4d, out Vector4d)
  nameWithType: Vector4d.ComponentMin(in Vector4d, in Vector4d, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.ComponentMin(in OpenTK.Mathematics.Vector4d, in OpenTK.Mathematics.Vector4d, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: ComponentMin
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 482
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the smallest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: public static void ComponentMin(in Vector4d a, in Vector4d b, out Vector4d result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4d
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector4d
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: The component-wise minimum.
    content.vb: Public Shared Sub ComponentMin(a As Vector4d, b As Vector4d, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.ComponentMin*
  nameWithType.vb: Vector4d.ComponentMin(Vector4d, Vector4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.ComponentMin(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  name.vb: ComponentMin(Vector4d, Vector4d, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.ComponentMax(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.ComponentMax(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  id: ComponentMax(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: ComponentMax(Vector4d, Vector4d)
  nameWithType: Vector4d.ComponentMax(Vector4d, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.ComponentMax(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: ComponentMax
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 496
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the largest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d ComponentMax(Vector4d a, Vector4d b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4d
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector4d
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The component-wise maximum.
    content.vb: >-
      <Pure>

      Public Shared Function ComponentMax(a As Vector4d, b As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.ComponentMax*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4d.ComponentMax(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.ComponentMax(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  id: ComponentMax(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: ComponentMax(in Vector4d, in Vector4d, out Vector4d)
  nameWithType: Vector4d.ComponentMax(in Vector4d, in Vector4d, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.ComponentMax(in OpenTK.Mathematics.Vector4d, in OpenTK.Mathematics.Vector4d, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: ComponentMax
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 512
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the largest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: public static void ComponentMax(in Vector4d a, in Vector4d b, out Vector4d result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4d
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector4d
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: The component-wise maximum.
    content.vb: Public Shared Sub ComponentMax(a As Vector4d, b As Vector4d, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.ComponentMax*
  nameWithType.vb: Vector4d.ComponentMax(Vector4d, Vector4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.ComponentMax(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  name.vb: ComponentMax(Vector4d, Vector4d, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.MagnitudeMin(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.MagnitudeMin(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  id: MagnitudeMin(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: MagnitudeMin(Vector4d, Vector4d)
  nameWithType: Vector4d.MagnitudeMin(Vector4d, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.MagnitudeMin(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: MagnitudeMin
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 526
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the Vector4d with the minimum magnitude.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d MagnitudeMin(Vector4d left, Vector4d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4d
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector4d
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The minimum Vector4d.
    content.vb: >-
      <Pure>

      Public Shared Function MagnitudeMin(left As Vector4d, right As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.MagnitudeMin*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4d.MagnitudeMin(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.MagnitudeMin(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  id: MagnitudeMin(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: MagnitudeMin(in Vector4d, in Vector4d, out Vector4d)
  nameWithType: Vector4d.MagnitudeMin(in Vector4d, in Vector4d, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.MagnitudeMin(in OpenTK.Mathematics.Vector4d, in OpenTK.Mathematics.Vector4d, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: MagnitudeMin
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 538
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the Vector4d with the minimum magnitude.
  example: []
  syntax:
    content: public static void MagnitudeMin(in Vector4d left, in Vector4d right, out Vector4d result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4d
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector4d
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: The magnitude-wise minimum.
    content.vb: Public Shared Sub MagnitudeMin(left As Vector4d, right As Vector4d, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.MagnitudeMin*
  nameWithType.vb: Vector4d.MagnitudeMin(Vector4d, Vector4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.MagnitudeMin(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  name.vb: MagnitudeMin(Vector4d, Vector4d, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.MagnitudeMax(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.MagnitudeMax(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  id: MagnitudeMax(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: MagnitudeMax(Vector4d, Vector4d)
  nameWithType: Vector4d.MagnitudeMax(Vector4d, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.MagnitudeMax(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: MagnitudeMax
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 549
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the Vector4d with the minimum magnitude.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d MagnitudeMax(Vector4d left, Vector4d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4d
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector4d
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The minimum Vector4d.
    content.vb: >-
      <Pure>

      Public Shared Function MagnitudeMax(left As Vector4d, right As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.MagnitudeMax*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4d.MagnitudeMax(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.MagnitudeMax(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  id: MagnitudeMax(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: MagnitudeMax(in Vector4d, in Vector4d, out Vector4d)
  nameWithType: Vector4d.MagnitudeMax(in Vector4d, in Vector4d, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.MagnitudeMax(in OpenTK.Mathematics.Vector4d, in OpenTK.Mathematics.Vector4d, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: MagnitudeMax
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 561
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the Vector4d with the maximum magnitude.
  example: []
  syntax:
    content: public static void MagnitudeMax(in Vector4d left, in Vector4d right, out Vector4d result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4d
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector4d
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: The magnitude-wise maximum.
    content.vb: Public Shared Sub MagnitudeMax(left As Vector4d, right As Vector4d, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.MagnitudeMax*
  nameWithType.vb: Vector4d.MagnitudeMax(Vector4d, Vector4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.MagnitudeMax(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  name.vb: MagnitudeMax(Vector4d, Vector4d, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.Clamp(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.Clamp(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  id: Clamp(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Clamp(Vector4d, Vector4d, Vector4d)
  nameWithType: Vector4d.Clamp(Vector4d, Vector4d, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Clamp(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Clamp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 573
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Clamp a vector to the given minimum and maximum vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d Clamp(Vector4d vec, Vector4d min, Vector4d max)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: Input vector.
    - id: min
      type: OpenTK.Mathematics.Vector4d
      description: Minimum vector.
    - id: max
      type: OpenTK.Mathematics.Vector4d
      description: Maximum vector.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The clamped vector.
    content.vb: >-
      <Pure>

      Public Shared Function Clamp(vec As Vector4d, min As Vector4d, max As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Clamp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4d.Clamp(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.Clamp(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  id: Clamp(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Clamp(in Vector4d, in Vector4d, in Vector4d, out Vector4d)
  nameWithType: Vector4d.Clamp(in Vector4d, in Vector4d, in Vector4d, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Clamp(in OpenTK.Mathematics.Vector4d, in OpenTK.Mathematics.Vector4d, in OpenTK.Mathematics.Vector4d, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Clamp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 590
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Clamp a vector to the given minimum and maximum vectors.
  example: []
  syntax:
    content: public static void Clamp(in Vector4d vec, in Vector4d min, in Vector4d max, out Vector4d result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: Input vector.
    - id: min
      type: OpenTK.Mathematics.Vector4d
      description: Minimum vector.
    - id: max
      type: OpenTK.Mathematics.Vector4d
      description: Maximum vector.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: The clamped vector.
    content.vb: Public Shared Sub Clamp(vec As Vector4d, min As Vector4d, max As Vector4d, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.Clamp*
  nameWithType.vb: Vector4d.Clamp(Vector4d, Vector4d, Vector4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.Clamp(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  name.vb: Clamp(Vector4d, Vector4d, Vector4d, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.Abs(OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.Abs(OpenTK.Mathematics.Vector4d)
  id: Abs(OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Abs(Vector4d)
  nameWithType: Vector4d.Abs(Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Abs(OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Abs
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 603
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Take the component-wise absolute value of a vector.
  example: []
  syntax:
    content: public static Vector4d Abs(Vector4d vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The vector to apply component-wise absolute value to.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The component-wise absolute value vector.
    content.vb: Public Shared Function Abs(vec As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Abs*
- uid: OpenTK.Mathematics.Vector4d.Abs(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.Abs(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  id: Abs(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Abs(in Vector4d, out Vector4d)
  nameWithType: Vector4d.Abs(in Vector4d, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Abs(in OpenTK.Mathematics.Vector4d, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Abs
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 617
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Take the component-wise absolute value of a vector.
  example: []
  syntax:
    content: public static void Abs(in Vector4d vec, out Vector4d result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The vector to apply component-wise absolute value to.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: The component-wise absolute value vector.
    content.vb: Public Shared Sub Abs(vec As Vector4d, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.Abs*
  nameWithType.vb: Vector4d.Abs(Vector4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.Abs(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  name.vb: Abs(Vector4d, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.Normalize(OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.Normalize(OpenTK.Mathematics.Vector4d)
  id: Normalize(OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Normalize(Vector4d)
  nameWithType: Vector4d.Normalize(Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Normalize(OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Normalize
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 630
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scale a vector to unit length.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d Normalize(Vector4d vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The input vector.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The normalized copy.
    content.vb: >-
      <Pure>

      Public Shared Function Normalize(vec As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Normalize*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4d.Normalize(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.Normalize(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  id: Normalize(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Normalize(in Vector4d, out Vector4d)
  nameWithType: Vector4d.Normalize(in Vector4d, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Normalize(in OpenTK.Mathematics.Vector4d, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Normalize
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 646
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scale a vector to unit length.
  example: []
  syntax:
    content: public static void Normalize(in Vector4d vec, out Vector4d result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The input vector.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: The normalized vector.
    content.vb: Public Shared Sub Normalize(vec As Vector4d, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.Normalize*
  nameWithType.vb: Vector4d.Normalize(Vector4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.Normalize(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  name.vb: Normalize(Vector4d, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.NormalizeFast(OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.NormalizeFast(OpenTK.Mathematics.Vector4d)
  id: NormalizeFast(OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: NormalizeFast(Vector4d)
  nameWithType: Vector4d.NormalizeFast(Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.NormalizeFast(OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: NormalizeFast
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 660
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scale a vector to approximately unit length.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d NormalizeFast(Vector4d vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The input vector.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The normalized copy.
    content.vb: >-
      <Pure>

      Public Shared Function NormalizeFast(vec As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.NormalizeFast*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4d.NormalizeFast(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.NormalizeFast(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  id: NormalizeFast(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: NormalizeFast(in Vector4d, out Vector4d)
  nameWithType: Vector4d.NormalizeFast(in Vector4d, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.NormalizeFast(in OpenTK.Mathematics.Vector4d, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: NormalizeFast
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 676
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scale a vector to approximately unit length.
  example: []
  syntax:
    content: public static void NormalizeFast(in Vector4d vec, out Vector4d result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The input vector.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: The normalized vector.
    content.vb: Public Shared Sub NormalizeFast(vec As Vector4d, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.NormalizeFast*
  nameWithType.vb: Vector4d.NormalizeFast(Vector4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.NormalizeFast(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  name.vb: NormalizeFast(Vector4d, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.Dot(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.Dot(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  id: Dot(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Dot(Vector4d, Vector4d)
  nameWithType: Vector4d.Dot(Vector4d, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Dot(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Dot
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 691
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculate the dot product of two vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static double Dot(Vector4d left, Vector4d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4d
      description: First operand.
    - id: right
      type: OpenTK.Mathematics.Vector4d
      description: Second operand.
    return:
      type: System.Double
      description: The dot product of the two inputs.
    content.vb: >-
      <Pure>

      Public Shared Function Dot(left As Vector4d, right As Vector4d) As Double
  overload: OpenTK.Mathematics.Vector4d.Dot*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4d.Dot(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,System.Double@)
  commentId: M:OpenTK.Mathematics.Vector4d.Dot(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,System.Double@)
  id: Dot(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,System.Double@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Dot(in Vector4d, in Vector4d, out double)
  nameWithType: Vector4d.Dot(in Vector4d, in Vector4d, out double)
  fullName: OpenTK.Mathematics.Vector4d.Dot(in OpenTK.Mathematics.Vector4d, in OpenTK.Mathematics.Vector4d, out double)
  type: Method
  source:
    id: Dot
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 703
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculate the dot product of two vectors.
  example: []
  syntax:
    content: public static void Dot(in Vector4d left, in Vector4d right, out double result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4d
      description: First operand.
    - id: right
      type: OpenTK.Mathematics.Vector4d
      description: Second operand.
    - id: result
      type: System.Double
      description: The dot product of the two inputs.
    content.vb: Public Shared Sub Dot(left As Vector4d, right As Vector4d, result As Double)
  overload: OpenTK.Mathematics.Vector4d.Dot*
  nameWithType.vb: Vector4d.Dot(Vector4d, Vector4d, Double)
  fullName.vb: OpenTK.Mathematics.Vector4d.Dot(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, Double)
  name.vb: Dot(Vector4d, Vector4d, Double)
- uid: OpenTK.Mathematics.Vector4d.Lerp(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,System.Double)
  commentId: M:OpenTK.Mathematics.Vector4d.Lerp(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,System.Double)
  id: Lerp(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,System.Double)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Lerp(Vector4d, Vector4d, double)
  nameWithType: Vector4d.Lerp(Vector4d, Vector4d, double)
  fullName: OpenTK.Mathematics.Vector4d.Lerp(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, double)
  type: Method
  source:
    id: Lerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 715
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the linear blend of the 2 given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d Lerp(Vector4d a, Vector4d b, double blend)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4d
      description: First input vector.
    - id: b
      type: OpenTK.Mathematics.Vector4d
      description: Second input vector.
    - id: blend
      type: System.Double
      description: The blend factor.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: a when blend=0, b when blend=1, and a linear combination otherwise.
    content.vb: >-
      <Pure>

      Public Shared Function Lerp(a As Vector4d, b As Vector4d, blend As Double) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Lerp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d.Lerp(Vector4d, Vector4d, Double)
  fullName.vb: OpenTK.Mathematics.Vector4d.Lerp(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, Double)
  name.vb: Lerp(Vector4d, Vector4d, Double)
- uid: OpenTK.Mathematics.Vector4d.Lerp(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,System.Double,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.Lerp(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,System.Double,OpenTK.Mathematics.Vector4d@)
  id: Lerp(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,System.Double,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Lerp(in Vector4d, in Vector4d, double, out Vector4d)
  nameWithType: Vector4d.Lerp(in Vector4d, in Vector4d, double, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Lerp(in OpenTK.Mathematics.Vector4d, in OpenTK.Mathematics.Vector4d, double, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Lerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 732
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the linear blend of the 2 given vectors.
  example: []
  syntax:
    content: public static void Lerp(in Vector4d a, in Vector4d b, double blend, out Vector4d result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4d
      description: First input vector.
    - id: b
      type: OpenTK.Mathematics.Vector4d
      description: Second input vector.
    - id: blend
      type: System.Double
      description: The blend factor.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: a when blend=0, b when blend=1, and a linear combination otherwise.
    content.vb: Public Shared Sub Lerp(a As Vector4d, b As Vector4d, blend As Double, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.Lerp*
  nameWithType.vb: Vector4d.Lerp(Vector4d, Vector4d, Double, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.Lerp(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, Double, OpenTK.Mathematics.Vector4d)
  name.vb: Lerp(Vector4d, Vector4d, Double, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.Lerp(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.Lerp(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  id: Lerp(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Lerp(Vector4d, Vector4d, Vector4d)
  nameWithType: Vector4d.Lerp(Vector4d, Vector4d, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Lerp(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Lerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 747
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the component-wise linear blend of the 2 given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d Lerp(Vector4d a, Vector4d b, Vector4d blend)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4d
      description: First input vector.
    - id: b
      type: OpenTK.Mathematics.Vector4d
      description: Second input vector.
    - id: blend
      type: OpenTK.Mathematics.Vector4d
      description: The blend factor.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: a when blend=0, b when blend=1, and a component-wise linear combination otherwise.
    content.vb: >-
      <Pure>

      Public Shared Function Lerp(a As Vector4d, b As Vector4d, blend As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Lerp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4d.Lerp(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.Lerp(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d@)
  id: Lerp(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Lerp(in Vector4d, in Vector4d, Vector4d, out Vector4d)
  nameWithType: Vector4d.Lerp(in Vector4d, in Vector4d, Vector4d, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Lerp(in OpenTK.Mathematics.Vector4d, in OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Lerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 764
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the component-wise linear blend of the 2 given vectors.
  example: []
  syntax:
    content: public static void Lerp(in Vector4d a, in Vector4d b, Vector4d blend, out Vector4d result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4d
      description: First input vector.
    - id: b
      type: OpenTK.Mathematics.Vector4d
      description: Second input vector.
    - id: blend
      type: OpenTK.Mathematics.Vector4d
      description: The blend factor.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: a when blend=0, b when blend=1, and a component-wise linear combination otherwise.
    content.vb: Public Shared Sub Lerp(a As Vector4d, b As Vector4d, blend As Vector4d, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.Lerp*
  nameWithType.vb: Vector4d.Lerp(Vector4d, Vector4d, Vector4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.Lerp(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  name.vb: Lerp(Vector4d, Vector4d, Vector4d, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.Slerp(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,System.Double)
  commentId: M:OpenTK.Mathematics.Vector4d.Slerp(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,System.Double)
  id: Slerp(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,System.Double)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Slerp(Vector4d, Vector4d, double)
  nameWithType: Vector4d.Slerp(Vector4d, Vector4d, double)
  fullName: OpenTK.Mathematics.Vector4d.Slerp(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, double)
  type: Method
  source:
    id: Slerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 780
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Returns a new vector that is the spherical interpolation of the two given vectors.

    <code class="paramref">a</code> and <code class="paramref">b</code> need to be normalized for this function to work properly.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d Slerp(Vector4d a, Vector4d b, double t)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4d
      description: Unit vector start point.
    - id: b
      type: OpenTK.Mathematics.Vector4d
      description: Unit vector end point.
    - id: t
      type: System.Double
      description: The blend factor.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: <code class="paramref">a</code> when <code class="paramref">t</code>=0, <code class="paramref">b</code> when <code class="paramref">t</code>=1, and a spherical interpolation between the vectors otherwise.
    content.vb: >-
      <Pure>

      Public Shared Function Slerp(a As Vector4d, b As Vector4d, t As Double) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Slerp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d.Slerp(Vector4d, Vector4d, Double)
  fullName.vb: OpenTK.Mathematics.Vector4d.Slerp(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, Double)
  name.vb: Slerp(Vector4d, Vector4d, Double)
- uid: OpenTK.Mathematics.Vector4d.Slerp(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,System.Double,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.Slerp(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,System.Double,OpenTK.Mathematics.Vector4d@)
  id: Slerp(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,System.Double,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Slerp(in Vector4d, in Vector4d, double, out Vector4d)
  nameWithType: Vector4d.Slerp(in Vector4d, in Vector4d, double, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Slerp(in OpenTK.Mathematics.Vector4d, in OpenTK.Mathematics.Vector4d, double, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Slerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 810
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Returns a new vector that is the spherical interpolation of the two given vectors.

    <code class="paramref">a</code> and <code class="paramref">b</code> need to be normalized for this function to work properly.
  example: []
  syntax:
    content: public static void Slerp(in Vector4d a, in Vector4d b, double t, out Vector4d result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4d
      description: Unit vector start point.
    - id: b
      type: OpenTK.Mathematics.Vector4d
      description: Unit vector end point.
    - id: t
      type: System.Double
      description: The blend factor.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: Is <code class="paramref">a</code> when <code class="paramref">t</code>=0, <code class="paramref">b</code> when <code class="paramref">t</code>=1, and a spherical interpolation between the vectors otherwise.
    content.vb: Public Shared Sub Slerp(a As Vector4d, b As Vector4d, t As Double, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.Slerp*
  nameWithType.vb: Vector4d.Slerp(Vector4d, Vector4d, Double, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.Slerp(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, Double, OpenTK.Mathematics.Vector4d)
  name.vb: Slerp(Vector4d, Vector4d, Double, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.Elerp(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,System.Single)
  commentId: M:OpenTK.Mathematics.Vector4d.Elerp(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,System.Single)
  id: Elerp(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,System.Single)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Elerp(Vector4d, Vector4d, float)
  nameWithType: Vector4d.Elerp(Vector4d, Vector4d, float)
  fullName: OpenTK.Mathematics.Vector4d.Elerp(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, float)
  type: Method
  source:
    id: Elerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 848
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Returns a new vector that is the exponential interpolation of the two vectors.

    Equivalent to <code>a * pow(b/a, t)</code>.
  example: []
  syntax:
    content: public static Vector4d Elerp(Vector4d a, Vector4d b, float t)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4d
      description: The starting value. Must be non-negative.
    - id: b
      type: OpenTK.Mathematics.Vector4d
      description: The end value. Must be non-negative.
    - id: t
      type: System.Single
      description: The blend factor.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The exponential interpolation between <code class="paramref">a</code> and <code class="paramref">b</code>.
    content.vb: Public Shared Function Elerp(a As Vector4d, b As Vector4d, t As Single) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Elerp*
  seealso:
  - linkId: OpenTK.Mathematics.MathHelper.Elerp(System.Double,System.Double,System.Double)
    commentId: M:OpenTK.Mathematics.MathHelper.Elerp(System.Double,System.Double,System.Double)
  nameWithType.vb: Vector4d.Elerp(Vector4d, Vector4d, Single)
  fullName.vb: OpenTK.Mathematics.Vector4d.Elerp(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, Single)
  name.vb: Elerp(Vector4d, Vector4d, Single)
- uid: OpenTK.Mathematics.Vector4d.Elerp(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,System.Single,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.Elerp(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,System.Single,OpenTK.Mathematics.Vector4d@)
  id: Elerp(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,System.Single,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Elerp(in Vector4d, in Vector4d, float, out Vector4d)
  nameWithType: Vector4d.Elerp(in Vector4d, in Vector4d, float, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Elerp(in OpenTK.Mathematics.Vector4d, in OpenTK.Mathematics.Vector4d, float, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Elerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 866
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Returns a new vector that is the exponential interpolation of the two vectors.

    Equivalent to <code>a * pow(b/a, t)</code>.
  example: []
  syntax:
    content: public static void Elerp(in Vector4d a, in Vector4d b, float t, out Vector4d result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4d
      description: The starting value. Must be non-negative.
    - id: b
      type: OpenTK.Mathematics.Vector4d
      description: The end value. Must be non-negative.
    - id: t
      type: System.Single
      description: The blend factor.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: The exponential interpolation between <code class="paramref">a</code> and <code class="paramref">b</code>.
    content.vb: Public Shared Sub Elerp(a As Vector4d, b As Vector4d, t As Single, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.Elerp*
  seealso:
  - linkId: OpenTK.Mathematics.MathHelper.Elerp(System.Double,System.Double,System.Double)
    commentId: M:OpenTK.Mathematics.MathHelper.Elerp(System.Double,System.Double,System.Double)
  nameWithType.vb: Vector4d.Elerp(Vector4d, Vector4d, Single, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.Elerp(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, Single, OpenTK.Mathematics.Vector4d)
  name.vb: Elerp(Vector4d, Vector4d, Single, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.BaryCentric(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,System.Double,System.Double)
  commentId: M:OpenTK.Mathematics.Vector4d.BaryCentric(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,System.Double,System.Double)
  id: BaryCentric(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d,System.Double,System.Double)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: BaryCentric(Vector4d, Vector4d, Vector4d, double, double)
  nameWithType: Vector4d.BaryCentric(Vector4d, Vector4d, Vector4d, double, double)
  fullName: OpenTK.Mathematics.Vector4d.BaryCentric(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, double, double)
  type: Method
  source:
    id: BaryCentric
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 883
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Interpolate 3 Vectors using Barycentric coordinates.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d BaryCentric(Vector4d a, Vector4d b, Vector4d c, double u, double v)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4d
      description: First input Vector.
    - id: b
      type: OpenTK.Mathematics.Vector4d
      description: Second input Vector.
    - id: c
      type: OpenTK.Mathematics.Vector4d
      description: Third input Vector.
    - id: u
      type: System.Double
      description: First Barycentric Coordinate.
    - id: v
      type: System.Double
      description: Second Barycentric Coordinate.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise.
    content.vb: >-
      <Pure>

      Public Shared Function BaryCentric(a As Vector4d, b As Vector4d, c As Vector4d, u As Double, v As Double) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.BaryCentric*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d.BaryCentric(Vector4d, Vector4d, Vector4d, Double, Double)
  fullName.vb: OpenTK.Mathematics.Vector4d.BaryCentric(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, Double, Double)
  name.vb: BaryCentric(Vector4d, Vector4d, Vector4d, Double, Double)
- uid: OpenTK.Mathematics.Vector4d.BaryCentric(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,System.Double,System.Double,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.BaryCentric(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,System.Double,System.Double,OpenTK.Mathematics.Vector4d@)
  id: BaryCentric(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@,System.Double,System.Double,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: BaryCentric(in Vector4d, in Vector4d, in Vector4d, double, double, out Vector4d)
  nameWithType: Vector4d.BaryCentric(in Vector4d, in Vector4d, in Vector4d, double, double, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.BaryCentric(in OpenTK.Mathematics.Vector4d, in OpenTK.Mathematics.Vector4d, in OpenTK.Mathematics.Vector4d, double, double, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: BaryCentric
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 902
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Interpolate 3 Vectors using Barycentric coordinates.
  example: []
  syntax:
    content: public static void BaryCentric(in Vector4d a, in Vector4d b, in Vector4d c, double u, double v, out Vector4d result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector4d
      description: First input Vector.
    - id: b
      type: OpenTK.Mathematics.Vector4d
      description: Second input Vector.
    - id: c
      type: OpenTK.Mathematics.Vector4d
      description: Third input Vector.
    - id: u
      type: System.Double
      description: First Barycentric Coordinate.
    - id: v
      type: System.Double
      description: Second Barycentric Coordinate.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: >-
        Output Vector. a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c

        otherwise.
    content.vb: Public Shared Sub BaryCentric(a As Vector4d, b As Vector4d, c As Vector4d, u As Double, v As Double, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.BaryCentric*
  nameWithType.vb: Vector4d.BaryCentric(Vector4d, Vector4d, Vector4d, Double, Double, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.BaryCentric(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d, Double, Double, OpenTK.Mathematics.Vector4d)
  name.vb: BaryCentric(Vector4d, Vector4d, Vector4d, Double, Double, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.TransformRow(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Matrix4d)
  commentId: M:OpenTK.Mathematics.Vector4d.TransformRow(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Matrix4d)
  id: TransformRow(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Matrix4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: TransformRow(Vector4d, Matrix4d)
  nameWithType: Vector4d.TransformRow(Vector4d, Matrix4d)
  fullName: OpenTK.Mathematics.Vector4d.TransformRow(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Matrix4d)
  type: Method
  source:
    id: TransformRow
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 927
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix using right-handed notation.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d TransformRow(Vector4d vec, Matrix4d mat)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The vector to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4d
      description: The desired transformation.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Function TransformRow(vec As Vector4d, mat As Matrix4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.TransformRow*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4d.TransformRow(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.TransformRow(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector4d@)
  id: TransformRow(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: TransformRow(in Vector4d, in Matrix4d, out Vector4d)
  nameWithType: Vector4d.TransformRow(in Vector4d, in Matrix4d, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.TransformRow(in OpenTK.Mathematics.Vector4d, in OpenTK.Mathematics.Matrix4d, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: TransformRow
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 940
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix.
  example: []
  syntax:
    content: public static void TransformRow(in Vector4d vec, in Matrix4d mat, out Vector4d result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The vector to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4d
      description: The desired transformation.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: The transformed vector.
    content.vb: Public Shared Sub TransformRow(vec As Vector4d, mat As Matrix4d, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.TransformRow*
  nameWithType.vb: Vector4d.TransformRow(Vector4d, Matrix4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.TransformRow(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Matrix4d, OpenTK.Mathematics.Vector4d)
  name.vb: TransformRow(Vector4d, Matrix4d, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.Transform(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Quaterniond)
  commentId: M:OpenTK.Mathematics.Vector4d.Transform(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Quaterniond)
  id: Transform(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Quaterniond)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Transform(Vector4d, Quaterniond)
  nameWithType: Vector4d.Transform(Vector4d, Quaterniond)
  fullName: OpenTK.Mathematics.Vector4d.Transform(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Quaterniond)
  type: Method
  source:
    id: Transform
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 955
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transforms a vector by a quaternion rotation.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d Transform(Vector4d vec, Quaterniond quat)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The vector to transform.
    - id: quat
      type: OpenTK.Mathematics.Quaterniond
      description: The quaternion to rotate the vector by.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Transform(vec As Vector4d, quat As Quaterniond) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Transform*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4d.Transform(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Quaterniond@,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.Transform(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Quaterniond@,OpenTK.Mathematics.Vector4d@)
  id: Transform(OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Quaterniond@,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Transform(in Vector4d, in Quaterniond, out Vector4d)
  nameWithType: Vector4d.Transform(in Vector4d, in Quaterniond, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Transform(in OpenTK.Mathematics.Vector4d, in OpenTK.Mathematics.Quaterniond, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Transform
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 968
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transforms a vector by a quaternion rotation.
  example: []
  syntax:
    content: public static void Transform(in Vector4d vec, in Quaterniond quat, out Vector4d result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The vector to transform.
    - id: quat
      type: OpenTK.Mathematics.Quaterniond
      description: The quaternion to rotate the vector by.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: The result of the operation.
    content.vb: Public Shared Sub Transform(vec As Vector4d, quat As Quaterniond, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.Transform*
  nameWithType.vb: Vector4d.Transform(Vector4d, Quaterniond, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.Transform(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Quaterniond, OpenTK.Mathematics.Vector4d)
  name.vb: Transform(Vector4d, Quaterniond, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.TransformColumn(OpenTK.Mathematics.Matrix4d,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.TransformColumn(OpenTK.Mathematics.Matrix4d,OpenTK.Mathematics.Vector4d)
  id: TransformColumn(OpenTK.Mathematics.Matrix4d,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: TransformColumn(Matrix4d, Vector4d)
  nameWithType: Vector4d.TransformColumn(Matrix4d, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.TransformColumn(OpenTK.Mathematics.Matrix4d, OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: TransformColumn
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 987
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix using right-handed notation.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d TransformColumn(Matrix4d mat, Vector4d vec)
    parameters:
    - id: mat
      type: OpenTK.Mathematics.Matrix4d
      description: The desired transformation.
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The vector to transform.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Function TransformColumn(mat As Matrix4d, vec As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.TransformColumn*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector4d.TransformColumn(OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  commentId: M:OpenTK.Mathematics.Vector4d.TransformColumn(OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  id: TransformColumn(OpenTK.Mathematics.Matrix4d@,OpenTK.Mathematics.Vector4d@,OpenTK.Mathematics.Vector4d@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: TransformColumn(in Matrix4d, in Vector4d, out Vector4d)
  nameWithType: Vector4d.TransformColumn(in Matrix4d, in Vector4d, out Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.TransformColumn(in OpenTK.Mathematics.Matrix4d, in OpenTK.Mathematics.Vector4d, out OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: TransformColumn
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1000
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix using right-handed notation.
  example: []
  syntax:
    content: public static void TransformColumn(in Matrix4d mat, in Vector4d vec, out Vector4d result)
    parameters:
    - id: mat
      type: OpenTK.Mathematics.Matrix4d
      description: The desired transformation.
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The vector to transform.
    - id: result
      type: OpenTK.Mathematics.Vector4d
      description: The transformed vector.
    content.vb: Public Shared Sub TransformColumn(mat As Matrix4d, vec As Vector4d, result As Vector4d)
  overload: OpenTK.Mathematics.Vector4d.TransformColumn*
  nameWithType.vb: Vector4d.TransformColumn(Matrix4d, Vector4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.TransformColumn(OpenTK.Mathematics.Matrix4d, OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  name.vb: TransformColumn(Matrix4d, Vector4d, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.Xy
  commentId: P:OpenTK.Mathematics.Vector4d.Xy
  id: Xy
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Xy
  nameWithType: Vector4d.Xy
  fullName: OpenTK.Mathematics.Vector4d.Xy
  type: Property
  source:
    id: Xy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1012
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2d with the X and Y components of this instance.
  example: []
  syntax:
    content: public Vector2d Xy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Property Xy As Vector2d
  overload: OpenTK.Mathematics.Vector4d.Xy*
- uid: OpenTK.Mathematics.Vector4d.Xz
  commentId: P:OpenTK.Mathematics.Vector4d.Xz
  id: Xz
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Xz
  nameWithType: Vector4d.Xz
  fullName: OpenTK.Mathematics.Vector4d.Xz
  type: Property
  source:
    id: Xz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1026
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2d with the X and Z components of this instance.
  example: []
  syntax:
    content: public Vector2d Xz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Property Xz As Vector2d
  overload: OpenTK.Mathematics.Vector4d.Xz*
- uid: OpenTK.Mathematics.Vector4d.Xw
  commentId: P:OpenTK.Mathematics.Vector4d.Xw
  id: Xw
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Xw
  nameWithType: Vector4d.Xw
  fullName: OpenTK.Mathematics.Vector4d.Xw
  type: Property
  source:
    id: Xw
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1040
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2d with the X and W components of this instance.
  example: []
  syntax:
    content: public Vector2d Xw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Property Xw As Vector2d
  overload: OpenTK.Mathematics.Vector4d.Xw*
- uid: OpenTK.Mathematics.Vector4d.Yx
  commentId: P:OpenTK.Mathematics.Vector4d.Yx
  id: Yx
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Yx
  nameWithType: Vector4d.Yx
  fullName: OpenTK.Mathematics.Vector4d.Yx
  type: Property
  source:
    id: Yx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1054
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2d with the Y and X components of this instance.
  example: []
  syntax:
    content: public Vector2d Yx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Property Yx As Vector2d
  overload: OpenTK.Mathematics.Vector4d.Yx*
- uid: OpenTK.Mathematics.Vector4d.Yz
  commentId: P:OpenTK.Mathematics.Vector4d.Yz
  id: Yz
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Yz
  nameWithType: Vector4d.Yz
  fullName: OpenTK.Mathematics.Vector4d.Yz
  type: Property
  source:
    id: Yz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1068
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2d with the Y and Z components of this instance.
  example: []
  syntax:
    content: public Vector2d Yz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Property Yz As Vector2d
  overload: OpenTK.Mathematics.Vector4d.Yz*
- uid: OpenTK.Mathematics.Vector4d.Yw
  commentId: P:OpenTK.Mathematics.Vector4d.Yw
  id: Yw
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Yw
  nameWithType: Vector4d.Yw
  fullName: OpenTK.Mathematics.Vector4d.Yw
  type: Property
  source:
    id: Yw
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1082
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2d with the Y and W components of this instance.
  example: []
  syntax:
    content: public Vector2d Yw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Property Yw As Vector2d
  overload: OpenTK.Mathematics.Vector4d.Yw*
- uid: OpenTK.Mathematics.Vector4d.Zx
  commentId: P:OpenTK.Mathematics.Vector4d.Zx
  id: Zx
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Zx
  nameWithType: Vector4d.Zx
  fullName: OpenTK.Mathematics.Vector4d.Zx
  type: Property
  source:
    id: Zx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1096
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2d with the Z and X components of this instance.
  example: []
  syntax:
    content: public Vector2d Zx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Property Zx As Vector2d
  overload: OpenTK.Mathematics.Vector4d.Zx*
- uid: OpenTK.Mathematics.Vector4d.Zy
  commentId: P:OpenTK.Mathematics.Vector4d.Zy
  id: Zy
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Zy
  nameWithType: Vector4d.Zy
  fullName: OpenTK.Mathematics.Vector4d.Zy
  type: Property
  source:
    id: Zy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1110
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2d with the Z and Y components of this instance.
  example: []
  syntax:
    content: public Vector2d Zy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Property Zy As Vector2d
  overload: OpenTK.Mathematics.Vector4d.Zy*
- uid: OpenTK.Mathematics.Vector4d.Zw
  commentId: P:OpenTK.Mathematics.Vector4d.Zw
  id: Zw
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Zw
  nameWithType: Vector4d.Zw
  fullName: OpenTK.Mathematics.Vector4d.Zw
  type: Property
  source:
    id: Zw
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1124
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2d with the Z and W components of this instance.
  example: []
  syntax:
    content: public Vector2d Zw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Property Zw As Vector2d
  overload: OpenTK.Mathematics.Vector4d.Zw*
- uid: OpenTK.Mathematics.Vector4d.Wx
  commentId: P:OpenTK.Mathematics.Vector4d.Wx
  id: Wx
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Wx
  nameWithType: Vector4d.Wx
  fullName: OpenTK.Mathematics.Vector4d.Wx
  type: Property
  source:
    id: Wx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1138
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2d with the W and X components of this instance.
  example: []
  syntax:
    content: public Vector2d Wx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Property Wx As Vector2d
  overload: OpenTK.Mathematics.Vector4d.Wx*
- uid: OpenTK.Mathematics.Vector4d.Wy
  commentId: P:OpenTK.Mathematics.Vector4d.Wy
  id: Wy
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Wy
  nameWithType: Vector4d.Wy
  fullName: OpenTK.Mathematics.Vector4d.Wy
  type: Property
  source:
    id: Wy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1152
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2d with the W and Y components of this instance.
  example: []
  syntax:
    content: public Vector2d Wy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Property Wy As Vector2d
  overload: OpenTK.Mathematics.Vector4d.Wy*
- uid: OpenTK.Mathematics.Vector4d.Wz
  commentId: P:OpenTK.Mathematics.Vector4d.Wz
  id: Wz
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Wz
  nameWithType: Vector4d.Wz
  fullName: OpenTK.Mathematics.Vector4d.Wz
  type: Property
  source:
    id: Wz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1166
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2d with the W and Z components of this instance.
  example: []
  syntax:
    content: public Vector2d Wz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Property Wz As Vector2d
  overload: OpenTK.Mathematics.Vector4d.Wz*
- uid: OpenTK.Mathematics.Vector4d.Xyz
  commentId: P:OpenTK.Mathematics.Vector4d.Xyz
  id: Xyz
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Xyz
  nameWithType: Vector4d.Xyz
  fullName: OpenTK.Mathematics.Vector4d.Xyz
  type: Property
  source:
    id: Xyz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1180
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the X, Y, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3d Xyz { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Xyz As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Xyz*
- uid: OpenTK.Mathematics.Vector4d.Xyw
  commentId: P:OpenTK.Mathematics.Vector4d.Xyw
  id: Xyw
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Xyw
  nameWithType: Vector4d.Xyw
  fullName: OpenTK.Mathematics.Vector4d.Xyw
  type: Property
  source:
    id: Xyw
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1195
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the X, Y, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3d Xyw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Xyw As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Xyw*
- uid: OpenTK.Mathematics.Vector4d.Xzy
  commentId: P:OpenTK.Mathematics.Vector4d.Xzy
  id: Xzy
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Xzy
  nameWithType: Vector4d.Xzy
  fullName: OpenTK.Mathematics.Vector4d.Xzy
  type: Property
  source:
    id: Xzy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1210
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the X, Z, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3d Xzy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Xzy As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Xzy*
- uid: OpenTK.Mathematics.Vector4d.Xzw
  commentId: P:OpenTK.Mathematics.Vector4d.Xzw
  id: Xzw
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Xzw
  nameWithType: Vector4d.Xzw
  fullName: OpenTK.Mathematics.Vector4d.Xzw
  type: Property
  source:
    id: Xzw
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1225
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the X, Z, and W components of this instance.
  example: []
  syntax:
    content: public Vector3d Xzw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Xzw As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Xzw*
- uid: OpenTK.Mathematics.Vector4d.Xwy
  commentId: P:OpenTK.Mathematics.Vector4d.Xwy
  id: Xwy
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Xwy
  nameWithType: Vector4d.Xwy
  fullName: OpenTK.Mathematics.Vector4d.Xwy
  type: Property
  source:
    id: Xwy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1240
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the X, W, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3d Xwy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Xwy As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Xwy*
- uid: OpenTK.Mathematics.Vector4d.Xwz
  commentId: P:OpenTK.Mathematics.Vector4d.Xwz
  id: Xwz
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Xwz
  nameWithType: Vector4d.Xwz
  fullName: OpenTK.Mathematics.Vector4d.Xwz
  type: Property
  source:
    id: Xwz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1255
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the X, W, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3d Xwz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Xwz As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Xwz*
- uid: OpenTK.Mathematics.Vector4d.Yxz
  commentId: P:OpenTK.Mathematics.Vector4d.Yxz
  id: Yxz
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Yxz
  nameWithType: Vector4d.Yxz
  fullName: OpenTK.Mathematics.Vector4d.Yxz
  type: Property
  source:
    id: Yxz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1270
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the Y, X, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3d Yxz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Yxz As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Yxz*
- uid: OpenTK.Mathematics.Vector4d.Yxw
  commentId: P:OpenTK.Mathematics.Vector4d.Yxw
  id: Yxw
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Yxw
  nameWithType: Vector4d.Yxw
  fullName: OpenTK.Mathematics.Vector4d.Yxw
  type: Property
  source:
    id: Yxw
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1285
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the Y, X, and W components of this instance.
  example: []
  syntax:
    content: public Vector3d Yxw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Yxw As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Yxw*
- uid: OpenTK.Mathematics.Vector4d.Yzx
  commentId: P:OpenTK.Mathematics.Vector4d.Yzx
  id: Yzx
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Yzx
  nameWithType: Vector4d.Yzx
  fullName: OpenTK.Mathematics.Vector4d.Yzx
  type: Property
  source:
    id: Yzx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1300
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the Y, Z, and X components of this instance.
  example: []
  syntax:
    content: public Vector3d Yzx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Yzx As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Yzx*
- uid: OpenTK.Mathematics.Vector4d.Yzw
  commentId: P:OpenTK.Mathematics.Vector4d.Yzw
  id: Yzw
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Yzw
  nameWithType: Vector4d.Yzw
  fullName: OpenTK.Mathematics.Vector4d.Yzw
  type: Property
  source:
    id: Yzw
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1315
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the Y, Z, and W components of this instance.
  example: []
  syntax:
    content: public Vector3d Yzw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Yzw As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Yzw*
- uid: OpenTK.Mathematics.Vector4d.Ywx
  commentId: P:OpenTK.Mathematics.Vector4d.Ywx
  id: Ywx
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Ywx
  nameWithType: Vector4d.Ywx
  fullName: OpenTK.Mathematics.Vector4d.Ywx
  type: Property
  source:
    id: Ywx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1330
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the Y, W, and X components of this instance.
  example: []
  syntax:
    content: public Vector3d Ywx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Ywx As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Ywx*
- uid: OpenTK.Mathematics.Vector4d.Ywz
  commentId: P:OpenTK.Mathematics.Vector4d.Ywz
  id: Ywz
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Ywz
  nameWithType: Vector4d.Ywz
  fullName: OpenTK.Mathematics.Vector4d.Ywz
  type: Property
  source:
    id: Ywz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1345
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the Y, W, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3d Ywz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Ywz As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Ywz*
- uid: OpenTK.Mathematics.Vector4d.Zxy
  commentId: P:OpenTK.Mathematics.Vector4d.Zxy
  id: Zxy
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Zxy
  nameWithType: Vector4d.Zxy
  fullName: OpenTK.Mathematics.Vector4d.Zxy
  type: Property
  source:
    id: Zxy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1360
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the Z, X, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3d Zxy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Zxy As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Zxy*
- uid: OpenTK.Mathematics.Vector4d.Zxw
  commentId: P:OpenTK.Mathematics.Vector4d.Zxw
  id: Zxw
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Zxw
  nameWithType: Vector4d.Zxw
  fullName: OpenTK.Mathematics.Vector4d.Zxw
  type: Property
  source:
    id: Zxw
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1375
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the Z, X, and W components of this instance.
  example: []
  syntax:
    content: public Vector3d Zxw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Zxw As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Zxw*
- uid: OpenTK.Mathematics.Vector4d.Zyx
  commentId: P:OpenTK.Mathematics.Vector4d.Zyx
  id: Zyx
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Zyx
  nameWithType: Vector4d.Zyx
  fullName: OpenTK.Mathematics.Vector4d.Zyx
  type: Property
  source:
    id: Zyx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1390
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the Z, Y, and X components of this instance.
  example: []
  syntax:
    content: public Vector3d Zyx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Zyx As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Zyx*
- uid: OpenTK.Mathematics.Vector4d.Zyw
  commentId: P:OpenTK.Mathematics.Vector4d.Zyw
  id: Zyw
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Zyw
  nameWithType: Vector4d.Zyw
  fullName: OpenTK.Mathematics.Vector4d.Zyw
  type: Property
  source:
    id: Zyw
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1405
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the Z, Y, and W components of this instance.
  example: []
  syntax:
    content: public Vector3d Zyw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Zyw As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Zyw*
- uid: OpenTK.Mathematics.Vector4d.Zwx
  commentId: P:OpenTK.Mathematics.Vector4d.Zwx
  id: Zwx
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Zwx
  nameWithType: Vector4d.Zwx
  fullName: OpenTK.Mathematics.Vector4d.Zwx
  type: Property
  source:
    id: Zwx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1420
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the Z, W, and X components of this instance.
  example: []
  syntax:
    content: public Vector3d Zwx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Zwx As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Zwx*
- uid: OpenTK.Mathematics.Vector4d.Zwy
  commentId: P:OpenTK.Mathematics.Vector4d.Zwy
  id: Zwy
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Zwy
  nameWithType: Vector4d.Zwy
  fullName: OpenTK.Mathematics.Vector4d.Zwy
  type: Property
  source:
    id: Zwy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1435
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the Z, W, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3d Zwy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Zwy As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Zwy*
- uid: OpenTK.Mathematics.Vector4d.Wxy
  commentId: P:OpenTK.Mathematics.Vector4d.Wxy
  id: Wxy
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Wxy
  nameWithType: Vector4d.Wxy
  fullName: OpenTK.Mathematics.Vector4d.Wxy
  type: Property
  source:
    id: Wxy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1450
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the W, X, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3d Wxy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Wxy As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Wxy*
- uid: OpenTK.Mathematics.Vector4d.Wxz
  commentId: P:OpenTK.Mathematics.Vector4d.Wxz
  id: Wxz
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Wxz
  nameWithType: Vector4d.Wxz
  fullName: OpenTK.Mathematics.Vector4d.Wxz
  type: Property
  source:
    id: Wxz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1465
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the W, X, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3d Wxz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Wxz As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Wxz*
- uid: OpenTK.Mathematics.Vector4d.Wyx
  commentId: P:OpenTK.Mathematics.Vector4d.Wyx
  id: Wyx
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Wyx
  nameWithType: Vector4d.Wyx
  fullName: OpenTK.Mathematics.Vector4d.Wyx
  type: Property
  source:
    id: Wyx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1480
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the W, Y, and X components of this instance.
  example: []
  syntax:
    content: public Vector3d Wyx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Wyx As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Wyx*
- uid: OpenTK.Mathematics.Vector4d.Wyz
  commentId: P:OpenTK.Mathematics.Vector4d.Wyz
  id: Wyz
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Wyz
  nameWithType: Vector4d.Wyz
  fullName: OpenTK.Mathematics.Vector4d.Wyz
  type: Property
  source:
    id: Wyz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1495
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the W, Y, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3d Wyz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Wyz As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Wyz*
- uid: OpenTK.Mathematics.Vector4d.Wzx
  commentId: P:OpenTK.Mathematics.Vector4d.Wzx
  id: Wzx
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Wzx
  nameWithType: Vector4d.Wzx
  fullName: OpenTK.Mathematics.Vector4d.Wzx
  type: Property
  source:
    id: Wzx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1510
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the W, Z, and X components of this instance.
  example: []
  syntax:
    content: public Vector3d Wzx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Wzx As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Wzx*
- uid: OpenTK.Mathematics.Vector4d.Wzy
  commentId: P:OpenTK.Mathematics.Vector4d.Wzy
  id: Wzy
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Wzy
  nameWithType: Vector4d.Wzy
  fullName: OpenTK.Mathematics.Vector4d.Wzy
  type: Property
  source:
    id: Wzy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1525
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3d with the W, Z, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3d Wzy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Wzy As Vector3d
  overload: OpenTK.Mathematics.Vector4d.Wzy*
- uid: OpenTK.Mathematics.Vector4d.Xywz
  commentId: P:OpenTK.Mathematics.Vector4d.Xywz
  id: Xywz
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Xywz
  nameWithType: Vector4d.Xywz
  fullName: OpenTK.Mathematics.Vector4d.Xywz
  type: Property
  source:
    id: Xywz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1540
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the X, Y, W, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4d Xywz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Xywz As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Xywz*
- uid: OpenTK.Mathematics.Vector4d.Xzyw
  commentId: P:OpenTK.Mathematics.Vector4d.Xzyw
  id: Xzyw
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Xzyw
  nameWithType: Vector4d.Xzyw
  fullName: OpenTK.Mathematics.Vector4d.Xzyw
  type: Property
  source:
    id: Xzyw
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1556
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the X, Z, Y, and W components of this instance.
  example: []
  syntax:
    content: public Vector4d Xzyw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Xzyw As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Xzyw*
- uid: OpenTK.Mathematics.Vector4d.Xzwy
  commentId: P:OpenTK.Mathematics.Vector4d.Xzwy
  id: Xzwy
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Xzwy
  nameWithType: Vector4d.Xzwy
  fullName: OpenTK.Mathematics.Vector4d.Xzwy
  type: Property
  source:
    id: Xzwy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1572
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the X, Z, W, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4d Xzwy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Xzwy As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Xzwy*
- uid: OpenTK.Mathematics.Vector4d.Xwyz
  commentId: P:OpenTK.Mathematics.Vector4d.Xwyz
  id: Xwyz
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Xwyz
  nameWithType: Vector4d.Xwyz
  fullName: OpenTK.Mathematics.Vector4d.Xwyz
  type: Property
  source:
    id: Xwyz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1588
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the X, W, Y, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4d Xwyz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Xwyz As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Xwyz*
- uid: OpenTK.Mathematics.Vector4d.Xwzy
  commentId: P:OpenTK.Mathematics.Vector4d.Xwzy
  id: Xwzy
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Xwzy
  nameWithType: Vector4d.Xwzy
  fullName: OpenTK.Mathematics.Vector4d.Xwzy
  type: Property
  source:
    id: Xwzy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1604
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the X, W, Z, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4d Xwzy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Xwzy As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Xwzy*
- uid: OpenTK.Mathematics.Vector4d.Yxzw
  commentId: P:OpenTK.Mathematics.Vector4d.Yxzw
  id: Yxzw
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Yxzw
  nameWithType: Vector4d.Yxzw
  fullName: OpenTK.Mathematics.Vector4d.Yxzw
  type: Property
  source:
    id: Yxzw
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1620
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the Y, X, Z, and W components of this instance.
  example: []
  syntax:
    content: public Vector4d Yxzw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Yxzw As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Yxzw*
- uid: OpenTK.Mathematics.Vector4d.Yxwz
  commentId: P:OpenTK.Mathematics.Vector4d.Yxwz
  id: Yxwz
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Yxwz
  nameWithType: Vector4d.Yxwz
  fullName: OpenTK.Mathematics.Vector4d.Yxwz
  type: Property
  source:
    id: Yxwz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1636
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the Y, X, W, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4d Yxwz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Yxwz As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Yxwz*
- uid: OpenTK.Mathematics.Vector4d.Yyzw
  commentId: P:OpenTK.Mathematics.Vector4d.Yyzw
  id: Yyzw
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Yyzw
  nameWithType: Vector4d.Yyzw
  fullName: OpenTK.Mathematics.Vector4d.Yyzw
  type: Property
  source:
    id: Yyzw
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1652
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the Y, Y, Z, and W components of this instance.
  example: []
  syntax:
    content: public Vector4d Yyzw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Yyzw As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Yyzw*
- uid: OpenTK.Mathematics.Vector4d.Yywz
  commentId: P:OpenTK.Mathematics.Vector4d.Yywz
  id: Yywz
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Yywz
  nameWithType: Vector4d.Yywz
  fullName: OpenTK.Mathematics.Vector4d.Yywz
  type: Property
  source:
    id: Yywz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1668
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the Y, Y, W, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4d Yywz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Yywz As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Yywz*
- uid: OpenTK.Mathematics.Vector4d.Yzxw
  commentId: P:OpenTK.Mathematics.Vector4d.Yzxw
  id: Yzxw
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Yzxw
  nameWithType: Vector4d.Yzxw
  fullName: OpenTK.Mathematics.Vector4d.Yzxw
  type: Property
  source:
    id: Yzxw
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1684
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the Y, Z, X, and W components of this instance.
  example: []
  syntax:
    content: public Vector4d Yzxw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Yzxw As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Yzxw*
- uid: OpenTK.Mathematics.Vector4d.Yzwx
  commentId: P:OpenTK.Mathematics.Vector4d.Yzwx
  id: Yzwx
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Yzwx
  nameWithType: Vector4d.Yzwx
  fullName: OpenTK.Mathematics.Vector4d.Yzwx
  type: Property
  source:
    id: Yzwx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1700
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the Y, Z, W, and X components of this instance.
  example: []
  syntax:
    content: public Vector4d Yzwx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Yzwx As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Yzwx*
- uid: OpenTK.Mathematics.Vector4d.Ywxz
  commentId: P:OpenTK.Mathematics.Vector4d.Ywxz
  id: Ywxz
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Ywxz
  nameWithType: Vector4d.Ywxz
  fullName: OpenTK.Mathematics.Vector4d.Ywxz
  type: Property
  source:
    id: Ywxz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1716
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the Y, W, X, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4d Ywxz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Ywxz As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Ywxz*
- uid: OpenTK.Mathematics.Vector4d.Ywzx
  commentId: P:OpenTK.Mathematics.Vector4d.Ywzx
  id: Ywzx
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Ywzx
  nameWithType: Vector4d.Ywzx
  fullName: OpenTK.Mathematics.Vector4d.Ywzx
  type: Property
  source:
    id: Ywzx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1732
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the Y, W, Z, and X components of this instance.
  example: []
  syntax:
    content: public Vector4d Ywzx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Ywzx As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Ywzx*
- uid: OpenTK.Mathematics.Vector4d.Zxyw
  commentId: P:OpenTK.Mathematics.Vector4d.Zxyw
  id: Zxyw
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Zxyw
  nameWithType: Vector4d.Zxyw
  fullName: OpenTK.Mathematics.Vector4d.Zxyw
  type: Property
  source:
    id: Zxyw
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1748
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the Z, X, Y, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4d Zxyw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Zxyw As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Zxyw*
- uid: OpenTK.Mathematics.Vector4d.Zxwy
  commentId: P:OpenTK.Mathematics.Vector4d.Zxwy
  id: Zxwy
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Zxwy
  nameWithType: Vector4d.Zxwy
  fullName: OpenTK.Mathematics.Vector4d.Zxwy
  type: Property
  source:
    id: Zxwy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1764
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the Z, X, W, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4d Zxwy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Zxwy As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Zxwy*
- uid: OpenTK.Mathematics.Vector4d.Zyxw
  commentId: P:OpenTK.Mathematics.Vector4d.Zyxw
  id: Zyxw
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Zyxw
  nameWithType: Vector4d.Zyxw
  fullName: OpenTK.Mathematics.Vector4d.Zyxw
  type: Property
  source:
    id: Zyxw
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1780
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the Z, Y, X, and W components of this instance.
  example: []
  syntax:
    content: public Vector4d Zyxw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Zyxw As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Zyxw*
- uid: OpenTK.Mathematics.Vector4d.Zywx
  commentId: P:OpenTK.Mathematics.Vector4d.Zywx
  id: Zywx
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Zywx
  nameWithType: Vector4d.Zywx
  fullName: OpenTK.Mathematics.Vector4d.Zywx
  type: Property
  source:
    id: Zywx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1796
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the Z, Y, W, and X components of this instance.
  example: []
  syntax:
    content: public Vector4d Zywx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Zywx As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Zywx*
- uid: OpenTK.Mathematics.Vector4d.Zwxy
  commentId: P:OpenTK.Mathematics.Vector4d.Zwxy
  id: Zwxy
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Zwxy
  nameWithType: Vector4d.Zwxy
  fullName: OpenTK.Mathematics.Vector4d.Zwxy
  type: Property
  source:
    id: Zwxy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1812
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the Z, W, X, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4d Zwxy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Zwxy As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Zwxy*
- uid: OpenTK.Mathematics.Vector4d.Zwyx
  commentId: P:OpenTK.Mathematics.Vector4d.Zwyx
  id: Zwyx
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Zwyx
  nameWithType: Vector4d.Zwyx
  fullName: OpenTK.Mathematics.Vector4d.Zwyx
  type: Property
  source:
    id: Zwyx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1828
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the Z, W, Y, and X components of this instance.
  example: []
  syntax:
    content: public Vector4d Zwyx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Zwyx As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Zwyx*
- uid: OpenTK.Mathematics.Vector4d.Zwzy
  commentId: P:OpenTK.Mathematics.Vector4d.Zwzy
  id: Zwzy
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Zwzy
  nameWithType: Vector4d.Zwzy
  fullName: OpenTK.Mathematics.Vector4d.Zwzy
  type: Property
  source:
    id: Zwzy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1844
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the Z, W, Z, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4d Zwzy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Zwzy As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Zwzy*
- uid: OpenTK.Mathematics.Vector4d.Wxyz
  commentId: P:OpenTK.Mathematics.Vector4d.Wxyz
  id: Wxyz
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Wxyz
  nameWithType: Vector4d.Wxyz
  fullName: OpenTK.Mathematics.Vector4d.Wxyz
  type: Property
  source:
    id: Wxyz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1860
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the W, X, Y, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4d Wxyz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Wxyz As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Wxyz*
- uid: OpenTK.Mathematics.Vector4d.Wxzy
  commentId: P:OpenTK.Mathematics.Vector4d.Wxzy
  id: Wxzy
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Wxzy
  nameWithType: Vector4d.Wxzy
  fullName: OpenTK.Mathematics.Vector4d.Wxzy
  type: Property
  source:
    id: Wxzy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1876
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the W, X, Z, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4d Wxzy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Wxzy As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Wxzy*
- uid: OpenTK.Mathematics.Vector4d.Wyxz
  commentId: P:OpenTK.Mathematics.Vector4d.Wyxz
  id: Wyxz
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Wyxz
  nameWithType: Vector4d.Wyxz
  fullName: OpenTK.Mathematics.Vector4d.Wyxz
  type: Property
  source:
    id: Wyxz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1892
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the W, Y, X, and Z components of this instance.
  example: []
  syntax:
    content: public Vector4d Wyxz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Wyxz As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Wyxz*
- uid: OpenTK.Mathematics.Vector4d.Wyzx
  commentId: P:OpenTK.Mathematics.Vector4d.Wyzx
  id: Wyzx
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Wyzx
  nameWithType: Vector4d.Wyzx
  fullName: OpenTK.Mathematics.Vector4d.Wyzx
  type: Property
  source:
    id: Wyzx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1908
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the W, Y, Z, and X components of this instance.
  example: []
  syntax:
    content: public Vector4d Wyzx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Wyzx As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Wyzx*
- uid: OpenTK.Mathematics.Vector4d.Wzxy
  commentId: P:OpenTK.Mathematics.Vector4d.Wzxy
  id: Wzxy
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Wzxy
  nameWithType: Vector4d.Wzxy
  fullName: OpenTK.Mathematics.Vector4d.Wzxy
  type: Property
  source:
    id: Wzxy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1924
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the W, Z, X, and Y components of this instance.
  example: []
  syntax:
    content: public Vector4d Wzxy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Wzxy As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Wzxy*
- uid: OpenTK.Mathematics.Vector4d.Wzyx
  commentId: P:OpenTK.Mathematics.Vector4d.Wzyx
  id: Wzyx
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Wzyx
  nameWithType: Vector4d.Wzyx
  fullName: OpenTK.Mathematics.Vector4d.Wzyx
  type: Property
  source:
    id: Wzyx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1940
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the W, Z, Y, and X components of this instance.
  example: []
  syntax:
    content: public Vector4d Wzyx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Wzyx As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Wzyx*
- uid: OpenTK.Mathematics.Vector4d.Wzyw
  commentId: P:OpenTK.Mathematics.Vector4d.Wzyw
  id: Wzyw
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Wzyw
  nameWithType: Vector4d.Wzyw
  fullName: OpenTK.Mathematics.Vector4d.Wzyw
  type: Property
  source:
    id: Wzyw
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1956
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector4d with the W, Z, Y, and W components of this instance.
  example: []
  syntax:
    content: public Vector4d Wzyw { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector4d
    content.vb: Public Property Wzyw As Vector4d
  overload: OpenTK.Mathematics.Vector4d.Wzyw*
- uid: OpenTK.Mathematics.Vector4d.op_Addition(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.op_Addition(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  id: op_Addition(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: operator +(Vector4d, Vector4d)
  nameWithType: Vector4d.operator +(Vector4d, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.operator +(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  type: Operator
  source:
    id: op_Addition
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1975
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d operator +(Vector4d left, Vector4d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4d
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector4d
      description: The second instance.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator +(left As Vector4d, right As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.op_Addition*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d.+(Vector4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.+(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  name.vb: +(Vector4d, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.op_Subtraction(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.op_Subtraction(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  id: op_Subtraction(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: operator -(Vector4d, Vector4d)
  nameWithType: Vector4d.operator -(Vector4d, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.operator -(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  type: Operator
  source:
    id: op_Subtraction
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 1991
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtracts two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d operator -(Vector4d left, Vector4d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4d
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector4d
      description: The second instance.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator -(left As Vector4d, right As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.op_Subtraction*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d.-(Vector4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.-(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  name.vb: -(Vector4d, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.op_UnaryNegation(OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.op_UnaryNegation(OpenTK.Mathematics.Vector4d)
  id: op_UnaryNegation(OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: operator -(Vector4d)
  nameWithType: Vector4d.operator -(Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.operator -(OpenTK.Mathematics.Vector4d)
  type: Operator
  source:
    id: op_UnaryNegation
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2006
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Negates an instance.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d operator -(Vector4d vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The instance.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator -(vec As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.op_UnaryNegation*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d.-(Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.-(OpenTK.Mathematics.Vector4d)
  name.vb: -(Vector4d)
- uid: OpenTK.Mathematics.Vector4d.op_Multiply(OpenTK.Mathematics.Vector4d,System.Double)
  commentId: M:OpenTK.Mathematics.Vector4d.op_Multiply(OpenTK.Mathematics.Vector4d,System.Double)
  id: op_Multiply(OpenTK.Mathematics.Vector4d,System.Double)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: operator *(Vector4d, double)
  nameWithType: Vector4d.operator *(Vector4d, double)
  fullName: OpenTK.Mathematics.Vector4d.operator *(OpenTK.Mathematics.Vector4d, double)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2022
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies an instance by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d operator *(Vector4d vec, double scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The instance.
    - id: scale
      type: System.Double
      description: The scalar.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator *(vec As Vector4d, scale As Double) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d.*(Vector4d, Double)
  fullName.vb: OpenTK.Mathematics.Vector4d.*(OpenTK.Mathematics.Vector4d, Double)
  name.vb: '*(Vector4d, Double)'
- uid: OpenTK.Mathematics.Vector4d.op_Multiply(System.Double,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.op_Multiply(System.Double,OpenTK.Mathematics.Vector4d)
  id: op_Multiply(System.Double,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: operator *(double, Vector4d)
  nameWithType: Vector4d.operator *(double, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.operator *(double, OpenTK.Mathematics.Vector4d)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2038
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies an instance by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d operator *(double scale, Vector4d vec)
    parameters:
    - id: scale
      type: System.Double
      description: The scalar.
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The instance.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator *(scale As Double, vec As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d.*(Double, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.*(Double, OpenTK.Mathematics.Vector4d)
  name.vb: '*(Double, Vector4d)'
- uid: OpenTK.Mathematics.Vector4d.op_Multiply(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.op_Multiply(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  id: op_Multiply(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: operator *(Vector4d, Vector4d)
  nameWithType: Vector4d.operator *(Vector4d, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.operator *(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2054
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Component-wise multiplication between the specified instance by a scale vector.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d operator *(Vector4d vec, Vector4d scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: Right operand.
    - id: scale
      type: OpenTK.Mathematics.Vector4d
      description: Left operand.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: Result of multiplication.
    content.vb: >-
      <Pure>

      Public Shared Operator *(vec As Vector4d, scale As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d.*(Vector4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.*(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  name.vb: '*(Vector4d, Vector4d)'
- uid: OpenTK.Mathematics.Vector4d.op_Multiply(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Matrix4d)
  commentId: M:OpenTK.Mathematics.Vector4d.op_Multiply(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Matrix4d)
  id: op_Multiply(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Matrix4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: operator *(Vector4d, Matrix4d)
  nameWithType: Vector4d.operator *(Vector4d, Matrix4d)
  fullName: OpenTK.Mathematics.Vector4d.operator *(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Matrix4d)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2070
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d operator *(Vector4d vec, Matrix4d mat)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The vector to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4d
      description: The desired transformation.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Operator *(vec As Vector4d, mat As Matrix4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d.*(Vector4d, Matrix4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.*(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Matrix4d)
  name.vb: '*(Vector4d, Matrix4d)'
- uid: OpenTK.Mathematics.Vector4d.op_Multiply(OpenTK.Mathematics.Matrix4d,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.op_Multiply(OpenTK.Mathematics.Matrix4d,OpenTK.Mathematics.Vector4d)
  id: op_Multiply(OpenTK.Mathematics.Matrix4d,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: operator *(Matrix4d, Vector4d)
  nameWithType: Vector4d.operator *(Matrix4d, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.operator *(OpenTK.Mathematics.Matrix4d, OpenTK.Mathematics.Vector4d)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2083
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix using right-handed notation.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d operator *(Matrix4d mat, Vector4d vec)
    parameters:
    - id: mat
      type: OpenTK.Mathematics.Matrix4d
      description: The desired transformation.
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The vector to transform.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Operator *(mat As Matrix4d, vec As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d.*(Matrix4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.*(OpenTK.Mathematics.Matrix4d, OpenTK.Mathematics.Vector4d)
  name.vb: '*(Matrix4d, Vector4d)'
- uid: OpenTK.Mathematics.Vector4d.op_Multiply(OpenTK.Mathematics.Quaterniond,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.op_Multiply(OpenTK.Mathematics.Quaterniond,OpenTK.Mathematics.Vector4d)
  id: op_Multiply(OpenTK.Mathematics.Quaterniond,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: operator *(Quaterniond, Vector4d)
  nameWithType: Vector4d.operator *(Quaterniond, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.operator *(OpenTK.Mathematics.Quaterniond, OpenTK.Mathematics.Vector4d)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2096
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transforms a vector by a quaternion rotation.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d operator *(Quaterniond quat, Vector4d vec)
    parameters:
    - id: quat
      type: OpenTK.Mathematics.Quaterniond
      description: The quaternion to rotate the vector by.
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The vector to transform.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Operator *(quat As Quaterniond, vec As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d.*(Quaterniond, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.*(OpenTK.Mathematics.Quaterniond, OpenTK.Mathematics.Vector4d)
  name.vb: '*(Quaterniond, Vector4d)'
- uid: OpenTK.Mathematics.Vector4d.op_Division(OpenTK.Mathematics.Vector4d,System.Double)
  commentId: M:OpenTK.Mathematics.Vector4d.op_Division(OpenTK.Mathematics.Vector4d,System.Double)
  id: op_Division(OpenTK.Mathematics.Vector4d,System.Double)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: operator /(Vector4d, double)
  nameWithType: Vector4d.operator /(Vector4d, double)
  fullName: OpenTK.Mathematics.Vector4d.operator /(OpenTK.Mathematics.Vector4d, double)
  type: Operator
  source:
    id: op_Division
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2109
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides an instance by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d operator /(Vector4d vec, double scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The instance.
    - id: scale
      type: System.Double
      description: The scalar.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator /(vec As Vector4d, scale As Double) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.op_Division*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d./(Vector4d, Double)
  fullName.vb: OpenTK.Mathematics.Vector4d./(OpenTK.Mathematics.Vector4d, Double)
  name.vb: /(Vector4d, Double)
- uid: OpenTK.Mathematics.Vector4d.op_Division(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.op_Division(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  id: op_Division(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: operator /(Vector4d, Vector4d)
  nameWithType: Vector4d.operator /(Vector4d, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.operator /(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  type: Operator
  source:
    id: op_Division
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2125
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Component-wise division between the specified instance by a scale vector.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector4d operator /(Vector4d vec, Vector4d scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector4d
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: Result of the division.
    content.vb: >-
      <Pure>

      Public Shared Operator /(vec As Vector4d, scale As Vector4d) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.op_Division*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d./(Vector4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d./(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  name.vb: /(Vector4d, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.op_Equality(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.op_Equality(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  id: op_Equality(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: operator ==(Vector4d, Vector4d)
  nameWithType: Vector4d.operator ==(Vector4d, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.operator ==(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  type: Operator
  source:
    id: op_Equality
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2141
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compares two instances for equality.
  example: []
  syntax:
    content: public static bool operator ==(Vector4d left, Vector4d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4d
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector4d
      description: The second instance.
    return:
      type: System.Boolean
      description: True, if left equals right; false otherwise.
    content.vb: Public Shared Operator =(left As Vector4d, right As Vector4d) As Boolean
  overload: OpenTK.Mathematics.Vector4d.op_Equality*
  nameWithType.vb: Vector4d.=(Vector4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.=(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  name.vb: =(Vector4d, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.op_Inequality(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.op_Inequality(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  id: op_Inequality(OpenTK.Mathematics.Vector4d,OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: operator !=(Vector4d, Vector4d)
  nameWithType: Vector4d.operator !=(Vector4d, Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.operator !=(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  type: Operator
  source:
    id: op_Inequality
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2152
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compares two instances for inequality.
  example: []
  syntax:
    content: public static bool operator !=(Vector4d left, Vector4d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector4d
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector4d
      description: The second instance.
    return:
      type: System.Boolean
      description: True, if left does not equa lright; false otherwise.
    content.vb: Public Shared Operator <>(left As Vector4d, right As Vector4d) As Boolean
  overload: OpenTK.Mathematics.Vector4d.op_Inequality*
  nameWithType.vb: Vector4d.<>(Vector4d, Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.<>(OpenTK.Mathematics.Vector4d, OpenTK.Mathematics.Vector4d)
  name.vb: <>(Vector4d, Vector4d)
- uid: OpenTK.Mathematics.Vector4d.op_Explicit(OpenTK.Mathematics.Vector4d)~OpenTK.Mathematics.Vector4
  commentId: M:OpenTK.Mathematics.Vector4d.op_Explicit(OpenTK.Mathematics.Vector4d)~OpenTK.Mathematics.Vector4
  id: op_Explicit(OpenTK.Mathematics.Vector4d)~OpenTK.Mathematics.Vector4
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: explicit operator Vector4(Vector4d)
  nameWithType: Vector4d.explicit operator Vector4(Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.explicit operator OpenTK.Mathematics.Vector4(OpenTK.Mathematics.Vector4d)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2162
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector4d to OpenTK.Vector4.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator Vector4(Vector4d vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The Vector4d to convert.
    return:
      type: OpenTK.Mathematics.Vector4
      description: The resulting Vector4.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(vec As Vector4d) As Vector4
  overload: OpenTK.Mathematics.Vector4d.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d.CType(Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.CType(OpenTK.Mathematics.Vector4d)
  name.vb: CType(Vector4d)
- uid: OpenTK.Mathematics.Vector4d.op_Explicit(OpenTK.Mathematics.Vector4d)~OpenTK.Mathematics.Vector4h
  commentId: M:OpenTK.Mathematics.Vector4d.op_Explicit(OpenTK.Mathematics.Vector4d)~OpenTK.Mathematics.Vector4h
  id: op_Explicit(OpenTK.Mathematics.Vector4d)~OpenTK.Mathematics.Vector4h
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: explicit operator Vector4h(Vector4d)
  nameWithType: Vector4d.explicit operator Vector4h(Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.explicit operator OpenTK.Mathematics.Vector4h(OpenTK.Mathematics.Vector4d)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2173
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector4d to OpenTK.Vector4h.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator Vector4h(Vector4d vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The Vector4d to convert.
    return:
      type: OpenTK.Mathematics.Vector4h
      description: The resulting Vector4h.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(vec As Vector4d) As Vector4h
  overload: OpenTK.Mathematics.Vector4d.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d.CType(Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.CType(OpenTK.Mathematics.Vector4d)
  name.vb: CType(Vector4d)
- uid: OpenTK.Mathematics.Vector4d.op_Explicit(OpenTK.Mathematics.Vector4d)~OpenTK.Mathematics.Vector4i
  commentId: M:OpenTK.Mathematics.Vector4d.op_Explicit(OpenTK.Mathematics.Vector4d)~OpenTK.Mathematics.Vector4i
  id: op_Explicit(OpenTK.Mathematics.Vector4d)~OpenTK.Mathematics.Vector4i
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: explicit operator Vector4i(Vector4d)
  nameWithType: Vector4d.explicit operator Vector4i(Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.explicit operator OpenTK.Mathematics.Vector4i(OpenTK.Mathematics.Vector4d)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2184
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector4d to OpenTK.Vector4i.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator Vector4i(Vector4d vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector4d
      description: The Vector4d to convert.
    return:
      type: OpenTK.Mathematics.Vector4i
      description: The resulting Vector4i.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(vec As Vector4d) As Vector4i
  overload: OpenTK.Mathematics.Vector4d.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d.CType(Vector4d)
  fullName.vb: OpenTK.Mathematics.Vector4d.CType(OpenTK.Mathematics.Vector4d)
  name.vb: CType(Vector4d)
- uid: OpenTK.Mathematics.Vector4d.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})~OpenTK.Mathematics.Vector4d
  commentId: M:OpenTK.Mathematics.Vector4d.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})~OpenTK.Mathematics.Vector4d
  id: op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})~OpenTK.Mathematics.Vector4d
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: implicit operator Vector4d((double X, double Y, double Z, double W))
  nameWithType: Vector4d.implicit operator Vector4d((double X, double Y, double Z, double W))
  fullName: OpenTK.Mathematics.Vector4d.implicit operator OpenTK.Mathematics.Vector4d((double X, double Y, double Z, double W))
  type: Operator
  source:
    id: op_Implicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2196
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector4d" data-throw-if-not-resolved="false"></xref> struct using a tuple containing the component

    values.
  example: []
  syntax:
    content: >-
      [Pure]

      public static implicit operator Vector4d((double X, double Y, double Z, double W) values)
    parameters:
    - id: values
      type: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}
      description: A tuple containing the component values.
    return:
      type: OpenTK.Mathematics.Vector4d
      description: A new instance of the <xref href="OpenTK.Mathematics.Vector4d" data-throw-if-not-resolved="false"></xref> struct with the given component values.
    content.vb: >-
      <Pure>

      Public Shared Widening Operator CType(values As (X As Double, Y As Double, Z As Double, W As Double)) As Vector4d
  overload: OpenTK.Mathematics.Vector4d.op_Implicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d.CType((X As Double, Y As Double, Z As Double, W As Double))
  fullName.vb: OpenTK.Mathematics.Vector4d.CType((X As Double, Y As Double, Z As Double, W As Double))
  name.vb: CType((X As Double, Y As Double, Z As Double, W As Double))
- uid: OpenTK.Mathematics.Vector4d.ToString
  commentId: M:OpenTK.Mathematics.Vector4d.ToString
  id: ToString
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector4d.ToString()
  fullName: OpenTK.Mathematics.Vector4d.ToString()
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2203
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: OpenTK.Mathematics.Vector4d.ToString*
- uid: OpenTK.Mathematics.Vector4d.ToString(System.String)
  commentId: M:OpenTK.Mathematics.Vector4d.ToString(System.String)
  id: ToString(System.String)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Vector4d.ToString(string)
  fullName: OpenTK.Mathematics.Vector4d.ToString(string)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2209
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public string ToString(string format)
    parameters:
    - id: format
      type: System.String
      description: >-
        The format to use.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to use the default format defined for the type of the <xref href="System.IFormattable" data-throw-if-not-resolved="false"></xref> implementation.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(format As String) As String
  overload: OpenTK.Mathematics.Vector4d.ToString*
  nameWithType.vb: Vector4d.ToString(String)
  fullName.vb: OpenTK.Mathematics.Vector4d.ToString(String)
  name.vb: ToString(String)
- uid: OpenTK.Mathematics.Vector4d.ToString(System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Vector4d.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: Vector4d.ToString(IFormatProvider)
  fullName: OpenTK.Mathematics.Vector4d.ToString(System.IFormatProvider)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2215
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public string ToString(IFormatProvider formatProvider)
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
      description: >-
        The provider to use to format the value.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Vector4d.ToString*
- uid: OpenTK.Mathematics.Vector4d.ToString(System.String,System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Vector4d.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: ToString(string, IFormatProvider)
  nameWithType: Vector4d.ToString(string, IFormatProvider)
  fullName: OpenTK.Mathematics.Vector4d.ToString(string, System.IFormatProvider)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2221
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public readonly string ToString(string format, IFormatProvider formatProvider)
    parameters:
    - id: format
      type: System.String
      description: >-
        The format to use.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to use the default format defined for the type of the <xref href="System.IFormattable" data-throw-if-not-resolved="false"></xref> implementation.
    - id: formatProvider
      type: System.IFormatProvider
      description: >-
        The provider to use to format the value.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Vector4d.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: Vector4d.ToString(String, IFormatProvider)
  fullName.vb: OpenTK.Mathematics.Vector4d.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
- uid: OpenTK.Mathematics.Vector4d.Equals(System.Object)
  commentId: M:OpenTK.Mathematics.Vector4d.Equals(System.Object)
  id: Equals(System.Object)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Vector4d.Equals(object)
  fullName: OpenTK.Mathematics.Vector4d.Equals(object)
  type: Method
  source:
    id: Equals
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2233
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: OpenTK.Mathematics.Vector4d.Equals*
  nameWithType.vb: Vector4d.Equals(Object)
  fullName.vb: OpenTK.Mathematics.Vector4d.Equals(Object)
  name.vb: Equals(Object)
- uid: OpenTK.Mathematics.Vector4d.Equals(OpenTK.Mathematics.Vector4d)
  commentId: M:OpenTK.Mathematics.Vector4d.Equals(OpenTK.Mathematics.Vector4d)
  id: Equals(OpenTK.Mathematics.Vector4d)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Equals(Vector4d)
  nameWithType: Vector4d.Equals(Vector4d)
  fullName: OpenTK.Mathematics.Vector4d.Equals(OpenTK.Mathematics.Vector4d)
  type: Method
  source:
    id: Equals
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2239
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public readonly bool Equals(Vector4d other)
    parameters:
    - id: other
      type: OpenTK.Mathematics.Vector4d
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As Vector4d) As Boolean
  overload: OpenTK.Mathematics.Vector4d.Equals*
  implements:
  - System.IEquatable{OpenTK.Mathematics.Vector4d}.Equals(OpenTK.Mathematics.Vector4d)
- uid: OpenTK.Mathematics.Vector4d.GetHashCode
  commentId: M:OpenTK.Mathematics.Vector4d.GetHashCode
  id: GetHashCode
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Vector4d.GetHashCode()
  fullName: OpenTK.Mathematics.Vector4d.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2248
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override readonly int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: OpenTK.Mathematics.Vector4d.GetHashCode*
- uid: OpenTK.Mathematics.Vector4d.Deconstruct(System.Double@,System.Double@,System.Double@,System.Double@)
  commentId: M:OpenTK.Mathematics.Vector4d.Deconstruct(System.Double@,System.Double@,System.Double@,System.Double@)
  id: Deconstruct(System.Double@,System.Double@,System.Double@,System.Double@)
  parent: OpenTK.Mathematics.Vector4d
  langs:
  - csharp
  - vb
  name: Deconstruct(out double, out double, out double, out double)
  nameWithType: Vector4d.Deconstruct(out double, out double, out double, out double)
  fullName: OpenTK.Mathematics.Vector4d.Deconstruct(out double, out double, out double, out double)
  type: Method
  source:
    id: Deconstruct
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector4d.cs
    startLine: 2260
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Deconstructs the vector into it's individual components.
  example: []
  syntax:
    content: >-
      [Pure]

      public readonly void Deconstruct(out double x, out double y, out double z, out double w)
    parameters:
    - id: x
      type: System.Double
      description: The X component of the vector.
    - id: y
      type: System.Double
      description: The Y component of the vector.
    - id: z
      type: System.Double
      description: The Z component of the vector.
    - id: w
      type: System.Double
      description: The W component of the vector.
    content.vb: >-
      <Pure>

      Public Sub Deconstruct(x As Double, y As Double, z As Double, w As Double)
  overload: OpenTK.Mathematics.Vector4d.Deconstruct*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector4d.Deconstruct(Double, Double, Double, Double)
  fullName.vb: OpenTK.Mathematics.Vector4d.Deconstruct(Double, Double, Double, Double)
  name.vb: Deconstruct(Double, Double, Double, Double)
references:
- uid: OpenTK.Mathematics
  commentId: N:OpenTK.Mathematics
  href: OpenTK.html
  name: OpenTK.Mathematics
  nameWithType: OpenTK.Mathematics
  fullName: OpenTK.Mathematics
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
- uid: System.IEquatable{OpenTK.Mathematics.Vector4d}
  commentId: T:System.IEquatable{OpenTK.Mathematics.Vector4d}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Vector4d>
  nameWithType: IEquatable<Vector4d>
  fullName: System.IEquatable<OpenTK.Mathematics.Vector4d>
  nameWithType.vb: IEquatable(Of Vector4d)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Vector4d)
  name.vb: IEquatable(Of Vector4d)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: OpenTK.Mathematics.Vector4d
    name: Vector4d
    href: OpenTK.Mathematics.Vector4d.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Mathematics.Vector4d
    name: Vector4d
    href: OpenTK.Mathematics.Vector4d.html
  - name: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: OpenTK.Mathematics.Vector4d
  commentId: T:OpenTK.Mathematics.Vector4d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector4d.html
  name: Vector4d
  nameWithType: Vector4d
  fullName: OpenTK.Mathematics.Vector4d
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: OpenTK.Mathematics.Vector4d.#ctor*
  commentId: Overload:OpenTK.Mathematics.Vector4d.#ctor
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d__ctor_System_Double_
  name: Vector4d
  nameWithType: Vector4d.Vector4d
  fullName: OpenTK.Mathematics.Vector4d.Vector4d
  nameWithType.vb: Vector4d.New
  fullName.vb: OpenTK.Mathematics.Vector4d.New
  name.vb: New
- uid: OpenTK.Mathematics.Vector2d
  commentId: T:OpenTK.Mathematics.Vector2d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector2d.html
  name: Vector2d
  nameWithType: Vector2d
  fullName: OpenTK.Mathematics.Vector2d
- uid: OpenTK.Mathematics.Vector3d
  commentId: T:OpenTK.Mathematics.Vector3d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector3d.html
  name: Vector3d
  nameWithType: Vector3d
  fullName: OpenTK.Mathematics.Vector3d
- uid: System.IndexOutOfRangeException
  commentId: T:System.IndexOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.indexoutofrangeexception
  name: IndexOutOfRangeException
  nameWithType: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
- uid: OpenTK.Mathematics.Vector4d.Item*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Item
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Item_System_Int32_
  name: this
  nameWithType: Vector4d.this
  fullName: OpenTK.Mathematics.Vector4d.this
  nameWithType.vb: Vector4d.this[]
  fullName.vb: OpenTK.Mathematics.Vector4d.this[]
  name.vb: this[]
- uid: OpenTK.Mathematics.Vector4d.LengthSquared
  commentId: P:OpenTK.Mathematics.Vector4d.LengthSquared
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_LengthSquared
  name: LengthSquared
  nameWithType: Vector4d.LengthSquared
  fullName: OpenTK.Mathematics.Vector4d.LengthSquared
- uid: OpenTK.Mathematics.Vector4d.LengthFast
  commentId: P:OpenTK.Mathematics.Vector4d.LengthFast
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_LengthFast
  name: LengthFast
  nameWithType: Vector4d.LengthFast
  fullName: OpenTK.Mathematics.Vector4d.LengthFast
- uid: OpenTK.Mathematics.Vector4d.Length*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Length
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Length
  name: Length
  nameWithType: Vector4d.Length
  fullName: OpenTK.Mathematics.Vector4d.Length
- uid: OpenTK.Mathematics.Vector4d.ReciprocalLengthFast*
  commentId: Overload:OpenTK.Mathematics.Vector4d.ReciprocalLengthFast
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_ReciprocalLengthFast
  name: ReciprocalLengthFast
  nameWithType: Vector4d.ReciprocalLengthFast
  fullName: OpenTK.Mathematics.Vector4d.ReciprocalLengthFast
- uid: OpenTK.Mathematics.Vector4d.Length
  commentId: P:OpenTK.Mathematics.Vector4d.Length
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Length
  name: Length
  nameWithType: Vector4d.Length
  fullName: OpenTK.Mathematics.Vector4d.Length
- uid: OpenTK.Mathematics.Vector4d.LengthFast*
  commentId: Overload:OpenTK.Mathematics.Vector4d.LengthFast
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_LengthFast
  name: LengthFast
  nameWithType: Vector4d.LengthFast
  fullName: OpenTK.Mathematics.Vector4d.LengthFast
- uid: OpenTK.Mathematics.Vector4d.LengthSquared*
  commentId: Overload:OpenTK.Mathematics.Vector4d.LengthSquared
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_LengthSquared
  name: LengthSquared
  nameWithType: Vector4d.LengthSquared
  fullName: OpenTK.Mathematics.Vector4d.LengthSquared
- uid: OpenTK.Mathematics.Vector4d.Normalized*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Normalized
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Normalized
  name: Normalized
  nameWithType: Vector4d.Normalized
  fullName: OpenTK.Mathematics.Vector4d.Normalized
- uid: OpenTK.Mathematics.Vector4d.Normalize*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Normalize
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Normalize
  name: Normalize
  nameWithType: Vector4d.Normalize
  fullName: OpenTK.Mathematics.Vector4d.Normalize
- uid: OpenTK.Mathematics.Vector4d.NormalizeFast*
  commentId: Overload:OpenTK.Mathematics.Vector4d.NormalizeFast
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_NormalizeFast
  name: NormalizeFast
  nameWithType: Vector4d.NormalizeFast
  fullName: OpenTK.Mathematics.Vector4d.NormalizeFast
- uid: OpenTK.Mathematics.Vector4d.Abs*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Abs
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Abs
  name: Abs
  nameWithType: Vector4d.Abs
  fullName: OpenTK.Mathematics.Vector4d.Abs
- uid: OpenTK.Mathematics.Vector4d.Add*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Add
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Add_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_
  name: Add
  nameWithType: Vector4d.Add
  fullName: OpenTK.Mathematics.Vector4d.Add
- uid: OpenTK.Mathematics.Vector4d.Subtract*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Subtract
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Subtract_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_
  name: Subtract
  nameWithType: Vector4d.Subtract
  fullName: OpenTK.Mathematics.Vector4d.Subtract
- uid: OpenTK.Mathematics.Vector4d.Multiply*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Multiply
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Multiply_OpenTK_Mathematics_Vector4d_System_Double_
  name: Multiply
  nameWithType: Vector4d.Multiply
  fullName: OpenTK.Mathematics.Vector4d.Multiply
- uid: OpenTK.Mathematics.Vector4d.Divide*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Divide
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Divide_OpenTK_Mathematics_Vector4d_System_Double_
  name: Divide
  nameWithType: Vector4d.Divide
  fullName: OpenTK.Mathematics.Vector4d.Divide
- uid: OpenTK.Mathematics.Vector4d.ComponentMin*
  commentId: Overload:OpenTK.Mathematics.Vector4d.ComponentMin
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_ComponentMin_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_
  name: ComponentMin
  nameWithType: Vector4d.ComponentMin
  fullName: OpenTK.Mathematics.Vector4d.ComponentMin
- uid: OpenTK.Mathematics.Vector4d.ComponentMax*
  commentId: Overload:OpenTK.Mathematics.Vector4d.ComponentMax
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_ComponentMax_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_
  name: ComponentMax
  nameWithType: Vector4d.ComponentMax
  fullName: OpenTK.Mathematics.Vector4d.ComponentMax
- uid: OpenTK.Mathematics.Vector4d.MagnitudeMin*
  commentId: Overload:OpenTK.Mathematics.Vector4d.MagnitudeMin
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_MagnitudeMin_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_
  name: MagnitudeMin
  nameWithType: Vector4d.MagnitudeMin
  fullName: OpenTK.Mathematics.Vector4d.MagnitudeMin
- uid: OpenTK.Mathematics.Vector4d.MagnitudeMax*
  commentId: Overload:OpenTK.Mathematics.Vector4d.MagnitudeMax
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_MagnitudeMax_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_
  name: MagnitudeMax
  nameWithType: Vector4d.MagnitudeMax
  fullName: OpenTK.Mathematics.Vector4d.MagnitudeMax
- uid: OpenTK.Mathematics.Vector4d.Clamp*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Clamp
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Clamp_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_
  name: Clamp
  nameWithType: Vector4d.Clamp
  fullName: OpenTK.Mathematics.Vector4d.Clamp
- uid: OpenTK.Mathematics.Vector4d.Dot*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Dot
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Dot_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_
  name: Dot
  nameWithType: Vector4d.Dot
  fullName: OpenTK.Mathematics.Vector4d.Dot
- uid: OpenTK.Mathematics.Vector4d.Lerp*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Lerp
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Lerp_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_System_Double_
  name: Lerp
  nameWithType: Vector4d.Lerp
  fullName: OpenTK.Mathematics.Vector4d.Lerp
- uid: OpenTK.Mathematics.Vector4d.Slerp*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Slerp
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Slerp_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_System_Double_
  name: Slerp
  nameWithType: Vector4d.Slerp
  fullName: OpenTK.Mathematics.Vector4d.Slerp
- uid: OpenTK.Mathematics.MathHelper.Elerp(System.Double,System.Double,System.Double)
  commentId: M:OpenTK.Mathematics.MathHelper.Elerp(System.Double,System.Double,System.Double)
  isExternal: true
  href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_Elerp_System_Double_System_Double_System_Double_
  name: Elerp(double, double, double)
  nameWithType: MathHelper.Elerp(double, double, double)
  fullName: OpenTK.Mathematics.MathHelper.Elerp(double, double, double)
  nameWithType.vb: MathHelper.Elerp(Double, Double, Double)
  fullName.vb: OpenTK.Mathematics.MathHelper.Elerp(Double, Double, Double)
  name.vb: Elerp(Double, Double, Double)
  spec.csharp:
  - uid: OpenTK.Mathematics.MathHelper.Elerp(System.Double,System.Double,System.Double)
    name: Elerp
    href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_Elerp_System_Double_System_Double_System_Double_
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: OpenTK.Mathematics.MathHelper.Elerp(System.Double,System.Double,System.Double)
    name: Elerp
    href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_Elerp_System_Double_System_Double_System_Double_
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: OpenTK.Mathematics.Vector4d.Elerp*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Elerp
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Elerp_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_System_Single_
  name: Elerp
  nameWithType: Vector4d.Elerp
  fullName: OpenTK.Mathematics.Vector4d.Elerp
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: OpenTK.Mathematics.Vector4d.BaryCentric*
  commentId: Overload:OpenTK.Mathematics.Vector4d.BaryCentric
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_BaryCentric_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_System_Double_System_Double_
  name: BaryCentric
  nameWithType: Vector4d.BaryCentric
  fullName: OpenTK.Mathematics.Vector4d.BaryCentric
- uid: OpenTK.Mathematics.Vector4d.TransformRow*
  commentId: Overload:OpenTK.Mathematics.Vector4d.TransformRow
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_TransformRow_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Matrix4d_
  name: TransformRow
  nameWithType: Vector4d.TransformRow
  fullName: OpenTK.Mathematics.Vector4d.TransformRow
- uid: OpenTK.Mathematics.Matrix4d
  commentId: T:OpenTK.Mathematics.Matrix4d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Matrix4d.html
  name: Matrix4d
  nameWithType: Matrix4d
  fullName: OpenTK.Mathematics.Matrix4d
- uid: OpenTK.Mathematics.Vector4d.Transform*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Transform
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Transform_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Quaterniond_
  name: Transform
  nameWithType: Vector4d.Transform
  fullName: OpenTK.Mathematics.Vector4d.Transform
- uid: OpenTK.Mathematics.Quaterniond
  commentId: T:OpenTK.Mathematics.Quaterniond
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Quaterniond.html
  name: Quaterniond
  nameWithType: Quaterniond
  fullName: OpenTK.Mathematics.Quaterniond
- uid: OpenTK.Mathematics.Vector4d.TransformColumn*
  commentId: Overload:OpenTK.Mathematics.Vector4d.TransformColumn
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_TransformColumn_OpenTK_Mathematics_Matrix4d_OpenTK_Mathematics_Vector4d_
  name: TransformColumn
  nameWithType: Vector4d.TransformColumn
  fullName: OpenTK.Mathematics.Vector4d.TransformColumn
- uid: OpenTK.Mathematics.Vector4d.Xy*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Xy
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Xy
  name: Xy
  nameWithType: Vector4d.Xy
  fullName: OpenTK.Mathematics.Vector4d.Xy
- uid: OpenTK.Mathematics.Vector4d.Xz*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Xz
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Xz
  name: Xz
  nameWithType: Vector4d.Xz
  fullName: OpenTK.Mathematics.Vector4d.Xz
- uid: OpenTK.Mathematics.Vector4d.Xw*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Xw
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Xw
  name: Xw
  nameWithType: Vector4d.Xw
  fullName: OpenTK.Mathematics.Vector4d.Xw
- uid: OpenTK.Mathematics.Vector4d.Yx*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Yx
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Yx
  name: Yx
  nameWithType: Vector4d.Yx
  fullName: OpenTK.Mathematics.Vector4d.Yx
- uid: OpenTK.Mathematics.Vector4d.Yz*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Yz
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Yz
  name: Yz
  nameWithType: Vector4d.Yz
  fullName: OpenTK.Mathematics.Vector4d.Yz
- uid: OpenTK.Mathematics.Vector4d.Yw*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Yw
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Yw
  name: Yw
  nameWithType: Vector4d.Yw
  fullName: OpenTK.Mathematics.Vector4d.Yw
- uid: OpenTK.Mathematics.Vector4d.Zx*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Zx
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Zx
  name: Zx
  nameWithType: Vector4d.Zx
  fullName: OpenTK.Mathematics.Vector4d.Zx
- uid: OpenTK.Mathematics.Vector4d.Zy*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Zy
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Zy
  name: Zy
  nameWithType: Vector4d.Zy
  fullName: OpenTK.Mathematics.Vector4d.Zy
- uid: OpenTK.Mathematics.Vector4d.Zw*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Zw
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Zw
  name: Zw
  nameWithType: Vector4d.Zw
  fullName: OpenTK.Mathematics.Vector4d.Zw
- uid: OpenTK.Mathematics.Vector4d.Wx*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Wx
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Wx
  name: Wx
  nameWithType: Vector4d.Wx
  fullName: OpenTK.Mathematics.Vector4d.Wx
- uid: OpenTK.Mathematics.Vector4d.Wy*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Wy
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Wy
  name: Wy
  nameWithType: Vector4d.Wy
  fullName: OpenTK.Mathematics.Vector4d.Wy
- uid: OpenTK.Mathematics.Vector4d.Wz*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Wz
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Wz
  name: Wz
  nameWithType: Vector4d.Wz
  fullName: OpenTK.Mathematics.Vector4d.Wz
- uid: OpenTK.Mathematics.Vector4d.Xyz*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Xyz
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Xyz
  name: Xyz
  nameWithType: Vector4d.Xyz
  fullName: OpenTK.Mathematics.Vector4d.Xyz
- uid: OpenTK.Mathematics.Vector4d.Xyw*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Xyw
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Xyw
  name: Xyw
  nameWithType: Vector4d.Xyw
  fullName: OpenTK.Mathematics.Vector4d.Xyw
- uid: OpenTK.Mathematics.Vector4d.Xzy*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Xzy
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Xzy
  name: Xzy
  nameWithType: Vector4d.Xzy
  fullName: OpenTK.Mathematics.Vector4d.Xzy
- uid: OpenTK.Mathematics.Vector4d.Xzw*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Xzw
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Xzw
  name: Xzw
  nameWithType: Vector4d.Xzw
  fullName: OpenTK.Mathematics.Vector4d.Xzw
- uid: OpenTK.Mathematics.Vector4d.Xwy*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Xwy
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Xwy
  name: Xwy
  nameWithType: Vector4d.Xwy
  fullName: OpenTK.Mathematics.Vector4d.Xwy
- uid: OpenTK.Mathematics.Vector4d.Xwz*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Xwz
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Xwz
  name: Xwz
  nameWithType: Vector4d.Xwz
  fullName: OpenTK.Mathematics.Vector4d.Xwz
- uid: OpenTK.Mathematics.Vector4d.Yxz*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Yxz
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Yxz
  name: Yxz
  nameWithType: Vector4d.Yxz
  fullName: OpenTK.Mathematics.Vector4d.Yxz
- uid: OpenTK.Mathematics.Vector4d.Yxw*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Yxw
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Yxw
  name: Yxw
  nameWithType: Vector4d.Yxw
  fullName: OpenTK.Mathematics.Vector4d.Yxw
- uid: OpenTK.Mathematics.Vector4d.Yzx*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Yzx
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Yzx
  name: Yzx
  nameWithType: Vector4d.Yzx
  fullName: OpenTK.Mathematics.Vector4d.Yzx
- uid: OpenTK.Mathematics.Vector4d.Yzw*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Yzw
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Yzw
  name: Yzw
  nameWithType: Vector4d.Yzw
  fullName: OpenTK.Mathematics.Vector4d.Yzw
- uid: OpenTK.Mathematics.Vector4d.Ywx*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Ywx
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Ywx
  name: Ywx
  nameWithType: Vector4d.Ywx
  fullName: OpenTK.Mathematics.Vector4d.Ywx
- uid: OpenTK.Mathematics.Vector4d.Ywz*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Ywz
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Ywz
  name: Ywz
  nameWithType: Vector4d.Ywz
  fullName: OpenTK.Mathematics.Vector4d.Ywz
- uid: OpenTK.Mathematics.Vector4d.Zxy*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Zxy
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Zxy
  name: Zxy
  nameWithType: Vector4d.Zxy
  fullName: OpenTK.Mathematics.Vector4d.Zxy
- uid: OpenTK.Mathematics.Vector4d.Zxw*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Zxw
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Zxw
  name: Zxw
  nameWithType: Vector4d.Zxw
  fullName: OpenTK.Mathematics.Vector4d.Zxw
- uid: OpenTK.Mathematics.Vector4d.Zyx*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Zyx
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Zyx
  name: Zyx
  nameWithType: Vector4d.Zyx
  fullName: OpenTK.Mathematics.Vector4d.Zyx
- uid: OpenTK.Mathematics.Vector4d.Zyw*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Zyw
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Zyw
  name: Zyw
  nameWithType: Vector4d.Zyw
  fullName: OpenTK.Mathematics.Vector4d.Zyw
- uid: OpenTK.Mathematics.Vector4d.Zwx*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Zwx
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Zwx
  name: Zwx
  nameWithType: Vector4d.Zwx
  fullName: OpenTK.Mathematics.Vector4d.Zwx
- uid: OpenTK.Mathematics.Vector4d.Zwy*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Zwy
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Zwy
  name: Zwy
  nameWithType: Vector4d.Zwy
  fullName: OpenTK.Mathematics.Vector4d.Zwy
- uid: OpenTK.Mathematics.Vector4d.Wxy*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Wxy
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Wxy
  name: Wxy
  nameWithType: Vector4d.Wxy
  fullName: OpenTK.Mathematics.Vector4d.Wxy
- uid: OpenTK.Mathematics.Vector4d.Wxz*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Wxz
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Wxz
  name: Wxz
  nameWithType: Vector4d.Wxz
  fullName: OpenTK.Mathematics.Vector4d.Wxz
- uid: OpenTK.Mathematics.Vector4d.Wyx*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Wyx
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Wyx
  name: Wyx
  nameWithType: Vector4d.Wyx
  fullName: OpenTK.Mathematics.Vector4d.Wyx
- uid: OpenTK.Mathematics.Vector4d.Wyz*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Wyz
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Wyz
  name: Wyz
  nameWithType: Vector4d.Wyz
  fullName: OpenTK.Mathematics.Vector4d.Wyz
- uid: OpenTK.Mathematics.Vector4d.Wzx*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Wzx
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Wzx
  name: Wzx
  nameWithType: Vector4d.Wzx
  fullName: OpenTK.Mathematics.Vector4d.Wzx
- uid: OpenTK.Mathematics.Vector4d.Wzy*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Wzy
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Wzy
  name: Wzy
  nameWithType: Vector4d.Wzy
  fullName: OpenTK.Mathematics.Vector4d.Wzy
- uid: OpenTK.Mathematics.Vector4d.Xywz*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Xywz
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Xywz
  name: Xywz
  nameWithType: Vector4d.Xywz
  fullName: OpenTK.Mathematics.Vector4d.Xywz
- uid: OpenTK.Mathematics.Vector4d.Xzyw*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Xzyw
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Xzyw
  name: Xzyw
  nameWithType: Vector4d.Xzyw
  fullName: OpenTK.Mathematics.Vector4d.Xzyw
- uid: OpenTK.Mathematics.Vector4d.Xzwy*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Xzwy
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Xzwy
  name: Xzwy
  nameWithType: Vector4d.Xzwy
  fullName: OpenTK.Mathematics.Vector4d.Xzwy
- uid: OpenTK.Mathematics.Vector4d.Xwyz*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Xwyz
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Xwyz
  name: Xwyz
  nameWithType: Vector4d.Xwyz
  fullName: OpenTK.Mathematics.Vector4d.Xwyz
- uid: OpenTK.Mathematics.Vector4d.Xwzy*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Xwzy
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Xwzy
  name: Xwzy
  nameWithType: Vector4d.Xwzy
  fullName: OpenTK.Mathematics.Vector4d.Xwzy
- uid: OpenTK.Mathematics.Vector4d.Yxzw*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Yxzw
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Yxzw
  name: Yxzw
  nameWithType: Vector4d.Yxzw
  fullName: OpenTK.Mathematics.Vector4d.Yxzw
- uid: OpenTK.Mathematics.Vector4d.Yxwz*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Yxwz
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Yxwz
  name: Yxwz
  nameWithType: Vector4d.Yxwz
  fullName: OpenTK.Mathematics.Vector4d.Yxwz
- uid: OpenTK.Mathematics.Vector4d.Yyzw*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Yyzw
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Yyzw
  name: Yyzw
  nameWithType: Vector4d.Yyzw
  fullName: OpenTK.Mathematics.Vector4d.Yyzw
- uid: OpenTK.Mathematics.Vector4d.Yywz*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Yywz
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Yywz
  name: Yywz
  nameWithType: Vector4d.Yywz
  fullName: OpenTK.Mathematics.Vector4d.Yywz
- uid: OpenTK.Mathematics.Vector4d.Yzxw*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Yzxw
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Yzxw
  name: Yzxw
  nameWithType: Vector4d.Yzxw
  fullName: OpenTK.Mathematics.Vector4d.Yzxw
- uid: OpenTK.Mathematics.Vector4d.Yzwx*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Yzwx
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Yzwx
  name: Yzwx
  nameWithType: Vector4d.Yzwx
  fullName: OpenTK.Mathematics.Vector4d.Yzwx
- uid: OpenTK.Mathematics.Vector4d.Ywxz*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Ywxz
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Ywxz
  name: Ywxz
  nameWithType: Vector4d.Ywxz
  fullName: OpenTK.Mathematics.Vector4d.Ywxz
- uid: OpenTK.Mathematics.Vector4d.Ywzx*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Ywzx
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Ywzx
  name: Ywzx
  nameWithType: Vector4d.Ywzx
  fullName: OpenTK.Mathematics.Vector4d.Ywzx
- uid: OpenTK.Mathematics.Vector4d.Zxyw*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Zxyw
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Zxyw
  name: Zxyw
  nameWithType: Vector4d.Zxyw
  fullName: OpenTK.Mathematics.Vector4d.Zxyw
- uid: OpenTK.Mathematics.Vector4d.Zxwy*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Zxwy
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Zxwy
  name: Zxwy
  nameWithType: Vector4d.Zxwy
  fullName: OpenTK.Mathematics.Vector4d.Zxwy
- uid: OpenTK.Mathematics.Vector4d.Zyxw*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Zyxw
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Zyxw
  name: Zyxw
  nameWithType: Vector4d.Zyxw
  fullName: OpenTK.Mathematics.Vector4d.Zyxw
- uid: OpenTK.Mathematics.Vector4d.Zywx*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Zywx
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Zywx
  name: Zywx
  nameWithType: Vector4d.Zywx
  fullName: OpenTK.Mathematics.Vector4d.Zywx
- uid: OpenTK.Mathematics.Vector4d.Zwxy*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Zwxy
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Zwxy
  name: Zwxy
  nameWithType: Vector4d.Zwxy
  fullName: OpenTK.Mathematics.Vector4d.Zwxy
- uid: OpenTK.Mathematics.Vector4d.Zwyx*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Zwyx
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Zwyx
  name: Zwyx
  nameWithType: Vector4d.Zwyx
  fullName: OpenTK.Mathematics.Vector4d.Zwyx
- uid: OpenTK.Mathematics.Vector4d.Zwzy*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Zwzy
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Zwzy
  name: Zwzy
  nameWithType: Vector4d.Zwzy
  fullName: OpenTK.Mathematics.Vector4d.Zwzy
- uid: OpenTK.Mathematics.Vector4d.Wxyz*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Wxyz
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Wxyz
  name: Wxyz
  nameWithType: Vector4d.Wxyz
  fullName: OpenTK.Mathematics.Vector4d.Wxyz
- uid: OpenTK.Mathematics.Vector4d.Wxzy*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Wxzy
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Wxzy
  name: Wxzy
  nameWithType: Vector4d.Wxzy
  fullName: OpenTK.Mathematics.Vector4d.Wxzy
- uid: OpenTK.Mathematics.Vector4d.Wyxz*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Wyxz
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Wyxz
  name: Wyxz
  nameWithType: Vector4d.Wyxz
  fullName: OpenTK.Mathematics.Vector4d.Wyxz
- uid: OpenTK.Mathematics.Vector4d.Wyzx*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Wyzx
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Wyzx
  name: Wyzx
  nameWithType: Vector4d.Wyzx
  fullName: OpenTK.Mathematics.Vector4d.Wyzx
- uid: OpenTK.Mathematics.Vector4d.Wzxy*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Wzxy
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Wzxy
  name: Wzxy
  nameWithType: Vector4d.Wzxy
  fullName: OpenTK.Mathematics.Vector4d.Wzxy
- uid: OpenTK.Mathematics.Vector4d.Wzyx*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Wzyx
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Wzyx
  name: Wzyx
  nameWithType: Vector4d.Wzyx
  fullName: OpenTK.Mathematics.Vector4d.Wzyx
- uid: OpenTK.Mathematics.Vector4d.Wzyw*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Wzyw
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Wzyw
  name: Wzyw
  nameWithType: Vector4d.Wzyw
  fullName: OpenTK.Mathematics.Vector4d.Wzyw
- uid: OpenTK.Mathematics.Vector4d.op_Addition*
  commentId: Overload:OpenTK.Mathematics.Vector4d.op_Addition
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_op_Addition_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_
  name: operator +
  nameWithType: Vector4d.operator +
  fullName: OpenTK.Mathematics.Vector4d.operator +
  nameWithType.vb: Vector4d.+
  fullName.vb: OpenTK.Mathematics.Vector4d.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4d.op_Addition*
    name: +
    href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_op_Addition_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_
- uid: OpenTK.Mathematics.Vector4d.op_Subtraction*
  commentId: Overload:OpenTK.Mathematics.Vector4d.op_Subtraction
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_op_Subtraction_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_
  name: operator -
  nameWithType: Vector4d.operator -
  fullName: OpenTK.Mathematics.Vector4d.operator -
  nameWithType.vb: Vector4d.-
  fullName.vb: OpenTK.Mathematics.Vector4d.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4d.op_Subtraction*
    name: '-'
    href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_op_Subtraction_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_
- uid: OpenTK.Mathematics.Vector4d.op_UnaryNegation*
  commentId: Overload:OpenTK.Mathematics.Vector4d.op_UnaryNegation
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_op_UnaryNegation_OpenTK_Mathematics_Vector4d_
  name: operator -
  nameWithType: Vector4d.operator -
  fullName: OpenTK.Mathematics.Vector4d.operator -
  nameWithType.vb: Vector4d.-
  fullName.vb: OpenTK.Mathematics.Vector4d.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4d.op_UnaryNegation*
    name: '-'
    href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_op_UnaryNegation_OpenTK_Mathematics_Vector4d_
- uid: OpenTK.Mathematics.Vector4d.op_Multiply*
  commentId: Overload:OpenTK.Mathematics.Vector4d.op_Multiply
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_op_Multiply_OpenTK_Mathematics_Vector4d_System_Double_
  name: operator *
  nameWithType: Vector4d.operator *
  fullName: OpenTK.Mathematics.Vector4d.operator *
  nameWithType.vb: Vector4d.*
  fullName.vb: OpenTK.Mathematics.Vector4d.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4d.op_Multiply*
    name: '*'
    href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_op_Multiply_OpenTK_Mathematics_Vector4d_System_Double_
- uid: OpenTK.Mathematics.Vector4d.op_Division*
  commentId: Overload:OpenTK.Mathematics.Vector4d.op_Division
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_op_Division_OpenTK_Mathematics_Vector4d_System_Double_
  name: operator /
  nameWithType: Vector4d.operator /
  fullName: OpenTK.Mathematics.Vector4d.operator /
  nameWithType.vb: Vector4d./
  fullName.vb: OpenTK.Mathematics.Vector4d./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4d.op_Division*
    name: /
    href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_op_Division_OpenTK_Mathematics_Vector4d_System_Double_
- uid: OpenTK.Mathematics.Vector4d.op_Equality*
  commentId: Overload:OpenTK.Mathematics.Vector4d.op_Equality
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_op_Equality_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_
  name: operator ==
  nameWithType: Vector4d.operator ==
  fullName: OpenTK.Mathematics.Vector4d.operator ==
  nameWithType.vb: Vector4d.=
  fullName.vb: OpenTK.Mathematics.Vector4d.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4d.op_Equality*
    name: ==
    href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_op_Equality_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenTK.Mathematics.Vector4d.op_Inequality*
  commentId: Overload:OpenTK.Mathematics.Vector4d.op_Inequality
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_op_Inequality_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_
  name: operator !=
  nameWithType: Vector4d.operator !=
  fullName: OpenTK.Mathematics.Vector4d.operator !=
  nameWithType.vb: Vector4d.<>
  fullName.vb: OpenTK.Mathematics.Vector4d.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector4d.op_Inequality*
    name: '!='
    href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_op_Inequality_OpenTK_Mathematics_Vector4d_OpenTK_Mathematics_Vector4d_
- uid: OpenTK.Mathematics.Vector4d.op_Explicit*
  commentId: Overload:OpenTK.Mathematics.Vector4d.op_Explicit
  name: explicit operator
  nameWithType: Vector4d.explicit operator
  fullName: OpenTK.Mathematics.Vector4d.explicit operator
  nameWithType.vb: Vector4d.CType
  fullName.vb: OpenTK.Mathematics.Vector4d.CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: OpenTK.Mathematics.Vector4
  commentId: T:OpenTK.Mathematics.Vector4
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector4.html
  name: Vector4
  nameWithType: Vector4
  fullName: OpenTK.Mathematics.Vector4
- uid: OpenTK.Mathematics.Vector4h
  commentId: T:OpenTK.Mathematics.Vector4h
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector4h.html
  name: Vector4h
  nameWithType: Vector4h
  fullName: OpenTK.Mathematics.Vector4h
- uid: OpenTK.Mathematics.Vector4i
  commentId: T:OpenTK.Mathematics.Vector4i
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector4i.html
  name: Vector4i
  nameWithType: Vector4i
  fullName: OpenTK.Mathematics.Vector4i
- uid: OpenTK.Mathematics.Vector4d.op_Implicit*
  commentId: Overload:OpenTK.Mathematics.Vector4d.op_Implicit
  name: implicit operator
  nameWithType: Vector4d.implicit operator
  fullName: OpenTK.Mathematics.Vector4d.implicit operator
  nameWithType.vb: Vector4d.CType
  fullName.vb: OpenTK.Mathematics.Vector4d.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}
  commentId: T:System.ValueTuple{System.Double,System.Double,System.Double,System.Double}
  parent: System
  definition: System.ValueTuple`4
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: (double X, double Y, double Z, double W)
  nameWithType: (double X, double Y, double Z, double W)
  fullName: (double X, double Y, double Z, double W)
  nameWithType.vb: (X As Double, Y As Double, Z As Double, W As Double)
  fullName.vb: (X As Double, Y As Double, Z As Double, W As Double)
  name.vb: (X As Double, Y As Double, Z As Double, W As Double)
  spec.csharp:
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}.X
    name: X
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double,system.double-.x
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}.Y
    name: Y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double,system.double-.y
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}.Z
    name: Z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double,system.double-.z
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}.W
    name: W
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double,system.double-.w
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}.X
    name: X
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double,system.double-.x
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}.Y
    name: Y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double,system.double-.y
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}.Z
    name: Z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double,system.double-.z
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}.W
    name: W
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.double,system.double,system.double,system.double-.w
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: System.ValueTuple`4
  commentId: T:System.ValueTuple`4
  name: (T1, T2, T3, T4)
  nameWithType: (T1, T2, T3, T4)
  fullName: (T1, T2, T3, T4)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: T4
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Vector4d.ToString*
  commentId: Overload:OpenTK.Mathematics.Vector4d.ToString
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_ToString
  name: ToString
  nameWithType: Vector4d.ToString
  fullName: OpenTK.Mathematics.Vector4d.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: OpenTK.Mathematics.Vector4d.Equals*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Equals
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Equals_System_Object_
  name: Equals
  nameWithType: Vector4d.Equals
  fullName: OpenTK.Mathematics.Vector4d.Equals
- uid: System.IEquatable{OpenTK.Mathematics.Vector4d}.Equals(OpenTK.Mathematics.Vector4d)
  commentId: M:System.IEquatable{OpenTK.Mathematics.Vector4d}.Equals(OpenTK.Mathematics.Vector4d)
  parent: System.IEquatable{OpenTK.Mathematics.Vector4d}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Vector4d)
  nameWithType: IEquatable<Vector4d>.Equals(Vector4d)
  fullName: System.IEquatable<OpenTK.Mathematics.Vector4d>.Equals(OpenTK.Mathematics.Vector4d)
  nameWithType.vb: IEquatable(Of Vector4d).Equals(Vector4d)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Vector4d).Equals(OpenTK.Mathematics.Vector4d)
  spec.csharp:
  - uid: System.IEquatable{OpenTK.Mathematics.Vector4d}.Equals(OpenTK.Mathematics.Vector4d)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: OpenTK.Mathematics.Vector4d
    name: Vector4d
    href: OpenTK.Mathematics.Vector4d.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{OpenTK.Mathematics.Vector4d}.Equals(OpenTK.Mathematics.Vector4d)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: OpenTK.Mathematics.Vector4d
    name: Vector4d
    href: OpenTK.Mathematics.Vector4d.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Vector4d.GetHashCode*
  commentId: Overload:OpenTK.Mathematics.Vector4d.GetHashCode
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_GetHashCode
  name: GetHashCode
  nameWithType: Vector4d.GetHashCode
  fullName: OpenTK.Mathematics.Vector4d.GetHashCode
- uid: OpenTK.Mathematics.Vector4d.Deconstruct*
  commentId: Overload:OpenTK.Mathematics.Vector4d.Deconstruct
  href: OpenTK.Mathematics.Vector4d.html#OpenTK_Mathematics_Vector4d_Deconstruct_System_Double__System_Double__System_Double__System_Double__
  name: Deconstruct
  nameWithType: Vector4d.Deconstruct
  fullName: OpenTK.Mathematics.Vector4d.Deconstruct
