### YamlMime:ManagedReference
items:
- uid: OpenTK.Compute.OpenCL.CLGL
  commentId: T:OpenTK.Compute.OpenCL.CLGL
  id: CLGL
  parent: OpenTK.Compute.OpenCL
  children:
  - OpenTK.Compute.OpenCL.CLGL.CreateEventFromGLsyncKHR(OpenTK.Compute.OpenCL.CLContext,System.IntPtr,OpenTK.Compute.OpenCL.CLResultCode@)
  - OpenTK.Compute.OpenCL.CLGL.CreateFromGLBuffer(OpenTK.Compute.OpenCL.CLContext,OpenTK.Compute.OpenCL.MemoryFlags,System.Int32,OpenTK.Compute.OpenCL.CLResultCode@)
  - OpenTK.Compute.OpenCL.CLGL.CreateFromGLRenderbuffer(OpenTK.Compute.OpenCL.CLContext,OpenTK.Compute.OpenCL.MemoryFlags,System.Int32,OpenTK.Compute.OpenCL.CLResultCode@)
  - OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture(OpenTK.Compute.OpenCL.CLContext,OpenTK.Compute.OpenCL.MemoryFlags,System.Int32,System.Int32,System.Int32,OpenTK.Compute.OpenCL.CLResultCode@)
  - OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture2D(OpenTK.Compute.OpenCL.CLContext,OpenTK.Compute.OpenCL.MemoryFlags,System.Int32,System.Int32,System.Int32,OpenTK.Compute.OpenCL.CLResultCode@)
  - OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture3D(OpenTK.Compute.OpenCL.CLContext,OpenTK.Compute.OpenCL.MemoryFlags,System.Int32,System.Int32,System.Int32,OpenTK.Compute.OpenCL.CLResultCode@)
  - OpenTK.Compute.OpenCL.CLGL.EnqueueAcquireGLObjects(OpenTK.Compute.OpenCL.CLCommandQueue,System.UInt32,OpenTK.Compute.OpenCL.CLBuffer[],System.UInt32,OpenTK.Compute.OpenCL.CLEvent[],OpenTK.Compute.OpenCL.CLEvent@)
  - OpenTK.Compute.OpenCL.CLGL.EnqueueReleaseGLObjects(OpenTK.Compute.OpenCL.CLCommandQueue,System.UInt32,OpenTK.Compute.OpenCL.CLBuffer[],System.UInt32,OpenTK.Compute.OpenCL.CLEvent[],OpenTK.Compute.OpenCL.CLEvent@)
  - OpenTK.Compute.OpenCL.CLGL.GetGLContextInfoKHR(System.IntPtr[],OpenTK.Compute.OpenCL.CLGL.ContextInfo,System.UIntPtr,System.Byte[],System.UIntPtr@)
  - OpenTK.Compute.OpenCL.CLGL.GetGLObjectInfo(OpenTK.Compute.OpenCL.CLBuffer,OpenTK.Compute.OpenCL.CLGL.ObjectType@,System.Int32@)
  - OpenTK.Compute.OpenCL.CLGL.GetGLTextureInfo(OpenTK.Compute.OpenCL.CLBuffer,OpenTK.Compute.OpenCL.CLGL.TextureInfo,System.UIntPtr,System.Byte[],System.UIntPtr@)
  langs:
  - csharp
  - vb
  name: CLGL
  nameWithType: CLGL
  fullName: OpenTK.Compute.OpenCL.CLGL
  type: Class
  source:
    id: CLGL
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Compute\OpenCL\CLGL.cs
    startLine: 8
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  syntax:
    content: 'public class CLGL : CLBase'
    content.vb: Public Class CLGL Inherits CLBase
  inheritance:
  - System.Object
  - OpenTK.Compute.Native.CLBase
  inheritedMembers:
  - OpenTK.Compute.Native.CLBase.RegisterOpenCLResolver
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OpenTK.Compute.OpenCL.CLGL.CreateFromGLBuffer(OpenTK.Compute.OpenCL.CLContext,OpenTK.Compute.OpenCL.MemoryFlags,System.Int32,OpenTK.Compute.OpenCL.CLResultCode@)
  commentId: M:OpenTK.Compute.OpenCL.CLGL.CreateFromGLBuffer(OpenTK.Compute.OpenCL.CLContext,OpenTK.Compute.OpenCL.MemoryFlags,System.Int32,OpenTK.Compute.OpenCL.CLResultCode@)
  id: CreateFromGLBuffer(OpenTK.Compute.OpenCL.CLContext,OpenTK.Compute.OpenCL.MemoryFlags,System.Int32,OpenTK.Compute.OpenCL.CLResultCode@)
  parent: OpenTK.Compute.OpenCL.CLGL
  langs:
  - csharp
  - vb
  name: CreateFromGLBuffer(CLContext, MemoryFlags, int, out CLResultCode)
  nameWithType: CLGL.CreateFromGLBuffer(CLContext, MemoryFlags, int, out CLResultCode)
  fullName: OpenTK.Compute.OpenCL.CLGL.CreateFromGLBuffer(OpenTK.Compute.OpenCL.CLContext, OpenTK.Compute.OpenCL.MemoryFlags, int, out OpenTK.Compute.OpenCL.CLResultCode)
  type: Method
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  summary: Introduced in OpenCL 1.0.
  example: []
  syntax:
    content: public static extern CLBuffer CreateFromGLBuffer(CLContext context, MemoryFlags flags, int glBuffer, out CLResultCode error)
    parameters:
    - id: context
      type: OpenTK.Compute.OpenCL.CLContext
    - id: flags
      type: OpenTK.Compute.OpenCL.MemoryFlags
    - id: glBuffer
      type: System.Int32
    - id: error
      type: OpenTK.Compute.OpenCL.CLResultCode
    return:
      type: OpenTK.Compute.OpenCL.CLBuffer
    content.vb: Public Shared Function CreateFromGLBuffer(context As CLContext, flags As MemoryFlags, glBuffer As Integer, [error] As CLResultCode) As CLBuffer
  overload: OpenTK.Compute.OpenCL.CLGL.CreateFromGLBuffer*
  nameWithType.vb: CLGL.CreateFromGLBuffer(CLContext, MemoryFlags, Integer, CLResultCode)
  fullName.vb: OpenTK.Compute.OpenCL.CLGL.CreateFromGLBuffer(OpenTK.Compute.OpenCL.CLContext, OpenTK.Compute.OpenCL.MemoryFlags, Integer, OpenTK.Compute.OpenCL.CLResultCode)
  name.vb: CreateFromGLBuffer(CLContext, MemoryFlags, Integer, CLResultCode)
- uid: OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture(OpenTK.Compute.OpenCL.CLContext,OpenTK.Compute.OpenCL.MemoryFlags,System.Int32,System.Int32,System.Int32,OpenTK.Compute.OpenCL.CLResultCode@)
  commentId: M:OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture(OpenTK.Compute.OpenCL.CLContext,OpenTK.Compute.OpenCL.MemoryFlags,System.Int32,System.Int32,System.Int32,OpenTK.Compute.OpenCL.CLResultCode@)
  id: CreateFromGLTexture(OpenTK.Compute.OpenCL.CLContext,OpenTK.Compute.OpenCL.MemoryFlags,System.Int32,System.Int32,System.Int32,OpenTK.Compute.OpenCL.CLResultCode@)
  parent: OpenTK.Compute.OpenCL.CLGL
  langs:
  - csharp
  - vb
  name: CreateFromGLTexture(CLContext, MemoryFlags, int, int, int, out CLResultCode)
  nameWithType: CLGL.CreateFromGLTexture(CLContext, MemoryFlags, int, int, int, out CLResultCode)
  fullName: OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture(OpenTK.Compute.OpenCL.CLContext, OpenTK.Compute.OpenCL.MemoryFlags, int, int, int, out OpenTK.Compute.OpenCL.CLResultCode)
  type: Method
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  summary: Introduced in OpenCL 1.2.
  example: []
  syntax:
    content: public static extern CLBuffer CreateFromGLTexture(CLContext context, MemoryFlags flags, int target, int mipLevel, int texture, out CLResultCode error)
    parameters:
    - id: context
      type: OpenTK.Compute.OpenCL.CLContext
      description: ''
    - id: flags
      type: OpenTK.Compute.OpenCL.MemoryFlags
      description: ''
    - id: target
      type: System.Int32
      description: This corresponds to the texture target used in OpenGL; e.g. (int)TextureTarget.Texture2D.
    - id: mipLevel
      type: System.Int32
      description: ''
    - id: texture
      type: System.Int32
      description: ''
    - id: error
      type: OpenTK.Compute.OpenCL.CLResultCode
      description: ''
    return:
      type: OpenTK.Compute.OpenCL.CLBuffer
    content.vb: Public Shared Function CreateFromGLTexture(context As CLContext, flags As MemoryFlags, target As Integer, mipLevel As Integer, texture As Integer, [error] As CLResultCode) As CLBuffer
  overload: OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture*
  nameWithType.vb: CLGL.CreateFromGLTexture(CLContext, MemoryFlags, Integer, Integer, Integer, CLResultCode)
  fullName.vb: OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture(OpenTK.Compute.OpenCL.CLContext, OpenTK.Compute.OpenCL.MemoryFlags, Integer, Integer, Integer, OpenTK.Compute.OpenCL.CLResultCode)
  name.vb: CreateFromGLTexture(CLContext, MemoryFlags, Integer, Integer, Integer, CLResultCode)
- uid: OpenTK.Compute.OpenCL.CLGL.CreateFromGLRenderbuffer(OpenTK.Compute.OpenCL.CLContext,OpenTK.Compute.OpenCL.MemoryFlags,System.Int32,OpenTK.Compute.OpenCL.CLResultCode@)
  commentId: M:OpenTK.Compute.OpenCL.CLGL.CreateFromGLRenderbuffer(OpenTK.Compute.OpenCL.CLContext,OpenTK.Compute.OpenCL.MemoryFlags,System.Int32,OpenTK.Compute.OpenCL.CLResultCode@)
  id: CreateFromGLRenderbuffer(OpenTK.Compute.OpenCL.CLContext,OpenTK.Compute.OpenCL.MemoryFlags,System.Int32,OpenTK.Compute.OpenCL.CLResultCode@)
  parent: OpenTK.Compute.OpenCL.CLGL
  langs:
  - csharp
  - vb
  name: CreateFromGLRenderbuffer(CLContext, MemoryFlags, int, out CLResultCode)
  nameWithType: CLGL.CreateFromGLRenderbuffer(CLContext, MemoryFlags, int, out CLResultCode)
  fullName: OpenTK.Compute.OpenCL.CLGL.CreateFromGLRenderbuffer(OpenTK.Compute.OpenCL.CLContext, OpenTK.Compute.OpenCL.MemoryFlags, int, out OpenTK.Compute.OpenCL.CLResultCode)
  type: Method
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  summary: Introduced in Opencl 1.0.
  example: []
  syntax:
    content: public static extern CLBuffer CreateFromGLRenderbuffer(CLContext context, MemoryFlags flags, int renderBuffer, out CLResultCode error)
    parameters:
    - id: context
      type: OpenTK.Compute.OpenCL.CLContext
    - id: flags
      type: OpenTK.Compute.OpenCL.MemoryFlags
    - id: renderBuffer
      type: System.Int32
    - id: error
      type: OpenTK.Compute.OpenCL.CLResultCode
    return:
      type: OpenTK.Compute.OpenCL.CLBuffer
    content.vb: Public Shared Function CreateFromGLRenderbuffer(context As CLContext, flags As MemoryFlags, renderBuffer As Integer, [error] As CLResultCode) As CLBuffer
  overload: OpenTK.Compute.OpenCL.CLGL.CreateFromGLRenderbuffer*
  nameWithType.vb: CLGL.CreateFromGLRenderbuffer(CLContext, MemoryFlags, Integer, CLResultCode)
  fullName.vb: OpenTK.Compute.OpenCL.CLGL.CreateFromGLRenderbuffer(OpenTK.Compute.OpenCL.CLContext, OpenTK.Compute.OpenCL.MemoryFlags, Integer, OpenTK.Compute.OpenCL.CLResultCode)
  name.vb: CreateFromGLRenderbuffer(CLContext, MemoryFlags, Integer, CLResultCode)
- uid: OpenTK.Compute.OpenCL.CLGL.GetGLObjectInfo(OpenTK.Compute.OpenCL.CLBuffer,OpenTK.Compute.OpenCL.CLGL.ObjectType@,System.Int32@)
  commentId: M:OpenTK.Compute.OpenCL.CLGL.GetGLObjectInfo(OpenTK.Compute.OpenCL.CLBuffer,OpenTK.Compute.OpenCL.CLGL.ObjectType@,System.Int32@)
  id: GetGLObjectInfo(OpenTK.Compute.OpenCL.CLBuffer,OpenTK.Compute.OpenCL.CLGL.ObjectType@,System.Int32@)
  parent: OpenTK.Compute.OpenCL.CLGL
  langs:
  - csharp
  - vb
  name: GetGLObjectInfo(CLBuffer, out ObjectType, out int)
  nameWithType: CLGL.GetGLObjectInfo(CLBuffer, out CLGL.ObjectType, out int)
  fullName: OpenTK.Compute.OpenCL.CLGL.GetGLObjectInfo(OpenTK.Compute.OpenCL.CLBuffer, out OpenTK.Compute.OpenCL.CLGL.ObjectType, out int)
  type: Method
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  summary: Introduced in Opencl 1.0.
  example: []
  syntax:
    content: public static extern CLResultCode GetGLObjectInfo(CLBuffer memObject, out CLGL.ObjectType glObjectType, out int glObjectName)
    parameters:
    - id: memObject
      type: OpenTK.Compute.OpenCL.CLBuffer
    - id: glObjectType
      type: OpenTK.Compute.OpenCL.CLGL.ObjectType
    - id: glObjectName
      type: System.Int32
    return:
      type: OpenTK.Compute.OpenCL.CLResultCode
    content.vb: Public Shared Function GetGLObjectInfo(memObject As CLBuffer, glObjectType As CLGL.ObjectType, glObjectName As Integer) As CLResultCode
  overload: OpenTK.Compute.OpenCL.CLGL.GetGLObjectInfo*
  nameWithType.vb: CLGL.GetGLObjectInfo(CLBuffer, CLGL.ObjectType, Integer)
  fullName.vb: OpenTK.Compute.OpenCL.CLGL.GetGLObjectInfo(OpenTK.Compute.OpenCL.CLBuffer, OpenTK.Compute.OpenCL.CLGL.ObjectType, Integer)
  name.vb: GetGLObjectInfo(CLBuffer, ObjectType, Integer)
- uid: OpenTK.Compute.OpenCL.CLGL.GetGLTextureInfo(OpenTK.Compute.OpenCL.CLBuffer,OpenTK.Compute.OpenCL.CLGL.TextureInfo,System.UIntPtr,System.Byte[],System.UIntPtr@)
  commentId: M:OpenTK.Compute.OpenCL.CLGL.GetGLTextureInfo(OpenTK.Compute.OpenCL.CLBuffer,OpenTK.Compute.OpenCL.CLGL.TextureInfo,System.UIntPtr,System.Byte[],System.UIntPtr@)
  id: GetGLTextureInfo(OpenTK.Compute.OpenCL.CLBuffer,OpenTK.Compute.OpenCL.CLGL.TextureInfo,System.UIntPtr,System.Byte[],System.UIntPtr@)
  parent: OpenTK.Compute.OpenCL.CLGL
  langs:
  - csharp
  - vb
  name: GetGLTextureInfo(CLBuffer, TextureInfo, nuint, byte[], out nuint)
  nameWithType: CLGL.GetGLTextureInfo(CLBuffer, CLGL.TextureInfo, nuint, byte[], out nuint)
  fullName: OpenTK.Compute.OpenCL.CLGL.GetGLTextureInfo(OpenTK.Compute.OpenCL.CLBuffer, OpenTK.Compute.OpenCL.CLGL.TextureInfo, nuint, byte[], out nuint)
  type: Method
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  summary: Introduced in Opencl 1.0.
  example: []
  syntax:
    content: public static extern CLResultCode GetGLTextureInfo(CLBuffer memObject, CLGL.TextureInfo paramName, nuint paramValueSize, byte[] paramValue, out nuint paramValueSizeReturned)
    parameters:
    - id: memObject
      type: OpenTK.Compute.OpenCL.CLBuffer
    - id: paramName
      type: OpenTK.Compute.OpenCL.CLGL.TextureInfo
    - id: paramValueSize
      type: System.UIntPtr
    - id: paramValue
      type: System.Byte[]
    - id: paramValueSizeReturned
      type: System.UIntPtr
    return:
      type: OpenTK.Compute.OpenCL.CLResultCode
    content.vb: Public Shared Function GetGLTextureInfo(memObject As CLBuffer, paramName As CLGL.TextureInfo, paramValueSize As UIntPtr, paramValue As Byte(), paramValueSizeReturned As UIntPtr) As CLResultCode
  overload: OpenTK.Compute.OpenCL.CLGL.GetGLTextureInfo*
  nameWithType.vb: CLGL.GetGLTextureInfo(CLBuffer, CLGL.TextureInfo, UIntPtr, Byte(), UIntPtr)
  fullName.vb: OpenTK.Compute.OpenCL.CLGL.GetGLTextureInfo(OpenTK.Compute.OpenCL.CLBuffer, OpenTK.Compute.OpenCL.CLGL.TextureInfo, System.UIntPtr, Byte(), System.UIntPtr)
  name.vb: GetGLTextureInfo(CLBuffer, TextureInfo, UIntPtr, Byte(), UIntPtr)
- uid: OpenTK.Compute.OpenCL.CLGL.EnqueueAcquireGLObjects(OpenTK.Compute.OpenCL.CLCommandQueue,System.UInt32,OpenTK.Compute.OpenCL.CLBuffer[],System.UInt32,OpenTK.Compute.OpenCL.CLEvent[],OpenTK.Compute.OpenCL.CLEvent@)
  commentId: M:OpenTK.Compute.OpenCL.CLGL.EnqueueAcquireGLObjects(OpenTK.Compute.OpenCL.CLCommandQueue,System.UInt32,OpenTK.Compute.OpenCL.CLBuffer[],System.UInt32,OpenTK.Compute.OpenCL.CLEvent[],OpenTK.Compute.OpenCL.CLEvent@)
  id: EnqueueAcquireGLObjects(OpenTK.Compute.OpenCL.CLCommandQueue,System.UInt32,OpenTK.Compute.OpenCL.CLBuffer[],System.UInt32,OpenTK.Compute.OpenCL.CLEvent[],OpenTK.Compute.OpenCL.CLEvent@)
  parent: OpenTK.Compute.OpenCL.CLGL
  langs:
  - csharp
  - vb
  name: EnqueueAcquireGLObjects(CLCommandQueue, uint, CLBuffer[], uint, CLEvent[], out CLEvent)
  nameWithType: CLGL.EnqueueAcquireGLObjects(CLCommandQueue, uint, CLBuffer[], uint, CLEvent[], out CLEvent)
  fullName: OpenTK.Compute.OpenCL.CLGL.EnqueueAcquireGLObjects(OpenTK.Compute.OpenCL.CLCommandQueue, uint, OpenTK.Compute.OpenCL.CLBuffer[], uint, OpenTK.Compute.OpenCL.CLEvent[], out OpenTK.Compute.OpenCL.CLEvent)
  type: Method
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  summary: Introduced in Opencl 1.0.
  example: []
  syntax:
    content: public static extern CLResultCode EnqueueAcquireGLObjects(CLCommandQueue commandQueue, uint numberOfObjects, CLBuffer[] memoryObjects, uint numEventsInWaitList, CLEvent[] eventWaitList, out CLEvent @event)
    parameters:
    - id: commandQueue
      type: OpenTK.Compute.OpenCL.CLCommandQueue
    - id: numberOfObjects
      type: System.UInt32
    - id: memoryObjects
      type: OpenTK.Compute.OpenCL.CLBuffer[]
    - id: numEventsInWaitList
      type: System.UInt32
    - id: eventWaitList
      type: OpenTK.Compute.OpenCL.CLEvent[]
    - id: event
      type: OpenTK.Compute.OpenCL.CLEvent
    return:
      type: OpenTK.Compute.OpenCL.CLResultCode
    content.vb: Public Shared Function EnqueueAcquireGLObjects(commandQueue As CLCommandQueue, numberOfObjects As UInteger, memoryObjects As CLBuffer(), numEventsInWaitList As UInteger, eventWaitList As CLEvent(), [event] As CLEvent) As CLResultCode
  overload: OpenTK.Compute.OpenCL.CLGL.EnqueueAcquireGLObjects*
  nameWithType.vb: CLGL.EnqueueAcquireGLObjects(CLCommandQueue, UInteger, CLBuffer(), UInteger, CLEvent(), CLEvent)
  fullName.vb: OpenTK.Compute.OpenCL.CLGL.EnqueueAcquireGLObjects(OpenTK.Compute.OpenCL.CLCommandQueue, UInteger, OpenTK.Compute.OpenCL.CLBuffer(), UInteger, OpenTK.Compute.OpenCL.CLEvent(), OpenTK.Compute.OpenCL.CLEvent)
  name.vb: EnqueueAcquireGLObjects(CLCommandQueue, UInteger, CLBuffer(), UInteger, CLEvent(), CLEvent)
- uid: OpenTK.Compute.OpenCL.CLGL.EnqueueReleaseGLObjects(OpenTK.Compute.OpenCL.CLCommandQueue,System.UInt32,OpenTK.Compute.OpenCL.CLBuffer[],System.UInt32,OpenTK.Compute.OpenCL.CLEvent[],OpenTK.Compute.OpenCL.CLEvent@)
  commentId: M:OpenTK.Compute.OpenCL.CLGL.EnqueueReleaseGLObjects(OpenTK.Compute.OpenCL.CLCommandQueue,System.UInt32,OpenTK.Compute.OpenCL.CLBuffer[],System.UInt32,OpenTK.Compute.OpenCL.CLEvent[],OpenTK.Compute.OpenCL.CLEvent@)
  id: EnqueueReleaseGLObjects(OpenTK.Compute.OpenCL.CLCommandQueue,System.UInt32,OpenTK.Compute.OpenCL.CLBuffer[],System.UInt32,OpenTK.Compute.OpenCL.CLEvent[],OpenTK.Compute.OpenCL.CLEvent@)
  parent: OpenTK.Compute.OpenCL.CLGL
  langs:
  - csharp
  - vb
  name: EnqueueReleaseGLObjects(CLCommandQueue, uint, CLBuffer[], uint, CLEvent[], out CLEvent)
  nameWithType: CLGL.EnqueueReleaseGLObjects(CLCommandQueue, uint, CLBuffer[], uint, CLEvent[], out CLEvent)
  fullName: OpenTK.Compute.OpenCL.CLGL.EnqueueReleaseGLObjects(OpenTK.Compute.OpenCL.CLCommandQueue, uint, OpenTK.Compute.OpenCL.CLBuffer[], uint, OpenTK.Compute.OpenCL.CLEvent[], out OpenTK.Compute.OpenCL.CLEvent)
  type: Method
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  summary: Introduced in Opencl 1.0.
  example: []
  syntax:
    content: public static extern CLResultCode EnqueueReleaseGLObjects(CLCommandQueue commandQueue, uint numberOfObjects, CLBuffer[] memoryObjects, uint numEventsInWaitList, CLEvent[] eventWaitList, out CLEvent @event)
    parameters:
    - id: commandQueue
      type: OpenTK.Compute.OpenCL.CLCommandQueue
    - id: numberOfObjects
      type: System.UInt32
    - id: memoryObjects
      type: OpenTK.Compute.OpenCL.CLBuffer[]
    - id: numEventsInWaitList
      type: System.UInt32
    - id: eventWaitList
      type: OpenTK.Compute.OpenCL.CLEvent[]
    - id: event
      type: OpenTK.Compute.OpenCL.CLEvent
    return:
      type: OpenTK.Compute.OpenCL.CLResultCode
    content.vb: Public Shared Function EnqueueReleaseGLObjects(commandQueue As CLCommandQueue, numberOfObjects As UInteger, memoryObjects As CLBuffer(), numEventsInWaitList As UInteger, eventWaitList As CLEvent(), [event] As CLEvent) As CLResultCode
  overload: OpenTK.Compute.OpenCL.CLGL.EnqueueReleaseGLObjects*
  nameWithType.vb: CLGL.EnqueueReleaseGLObjects(CLCommandQueue, UInteger, CLBuffer(), UInteger, CLEvent(), CLEvent)
  fullName.vb: OpenTK.Compute.OpenCL.CLGL.EnqueueReleaseGLObjects(OpenTK.Compute.OpenCL.CLCommandQueue, UInteger, OpenTK.Compute.OpenCL.CLBuffer(), UInteger, OpenTK.Compute.OpenCL.CLEvent(), OpenTK.Compute.OpenCL.CLEvent)
  name.vb: EnqueueReleaseGLObjects(CLCommandQueue, UInteger, CLBuffer(), UInteger, CLEvent(), CLEvent)
- uid: OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture2D(OpenTK.Compute.OpenCL.CLContext,OpenTK.Compute.OpenCL.MemoryFlags,System.Int32,System.Int32,System.Int32,OpenTK.Compute.OpenCL.CLResultCode@)
  commentId: M:OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture2D(OpenTK.Compute.OpenCL.CLContext,OpenTK.Compute.OpenCL.MemoryFlags,System.Int32,System.Int32,System.Int32,OpenTK.Compute.OpenCL.CLResultCode@)
  id: CreateFromGLTexture2D(OpenTK.Compute.OpenCL.CLContext,OpenTK.Compute.OpenCL.MemoryFlags,System.Int32,System.Int32,System.Int32,OpenTK.Compute.OpenCL.CLResultCode@)
  parent: OpenTK.Compute.OpenCL.CLGL
  langs:
  - csharp
  - vb
  name: CreateFromGLTexture2D(CLContext, MemoryFlags, int, int, int, out CLResultCode)
  nameWithType: CLGL.CreateFromGLTexture2D(CLContext, MemoryFlags, int, int, int, out CLResultCode)
  fullName: OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture2D(OpenTK.Compute.OpenCL.CLContext, OpenTK.Compute.OpenCL.MemoryFlags, int, int, int, out OpenTK.Compute.OpenCL.CLResultCode)
  type: Method
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  summary: '[DEPRECATED] Introduced in Opencl 1.1.'
  example: []
  syntax:
    content: >-
      [Obsolete]

      public static extern CLBuffer CreateFromGLTexture2D(CLContext context, MemoryFlags flags, int target, int mipLevel, int texture, out CLResultCode error)
    parameters:
    - id: context
      type: OpenTK.Compute.OpenCL.CLContext
    - id: flags
      type: OpenTK.Compute.OpenCL.MemoryFlags
    - id: target
      type: System.Int32
    - id: mipLevel
      type: System.Int32
    - id: texture
      type: System.Int32
    - id: error
      type: OpenTK.Compute.OpenCL.CLResultCode
    return:
      type: OpenTK.Compute.OpenCL.CLBuffer
    content.vb: >-
      <Obsolete>

      Public Shared Function CreateFromGLTexture2D(context As CLContext, flags As MemoryFlags, target As Integer, mipLevel As Integer, texture As Integer, [error] As CLResultCode) As CLBuffer
  overload: OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture2D*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
  nameWithType.vb: CLGL.CreateFromGLTexture2D(CLContext, MemoryFlags, Integer, Integer, Integer, CLResultCode)
  fullName.vb: OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture2D(OpenTK.Compute.OpenCL.CLContext, OpenTK.Compute.OpenCL.MemoryFlags, Integer, Integer, Integer, OpenTK.Compute.OpenCL.CLResultCode)
  name.vb: CreateFromGLTexture2D(CLContext, MemoryFlags, Integer, Integer, Integer, CLResultCode)
- uid: OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture3D(OpenTK.Compute.OpenCL.CLContext,OpenTK.Compute.OpenCL.MemoryFlags,System.Int32,System.Int32,System.Int32,OpenTK.Compute.OpenCL.CLResultCode@)
  commentId: M:OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture3D(OpenTK.Compute.OpenCL.CLContext,OpenTK.Compute.OpenCL.MemoryFlags,System.Int32,System.Int32,System.Int32,OpenTK.Compute.OpenCL.CLResultCode@)
  id: CreateFromGLTexture3D(OpenTK.Compute.OpenCL.CLContext,OpenTK.Compute.OpenCL.MemoryFlags,System.Int32,System.Int32,System.Int32,OpenTK.Compute.OpenCL.CLResultCode@)
  parent: OpenTK.Compute.OpenCL.CLGL
  langs:
  - csharp
  - vb
  name: CreateFromGLTexture3D(CLContext, MemoryFlags, int, int, int, out CLResultCode)
  nameWithType: CLGL.CreateFromGLTexture3D(CLContext, MemoryFlags, int, int, int, out CLResultCode)
  fullName: OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture3D(OpenTK.Compute.OpenCL.CLContext, OpenTK.Compute.OpenCL.MemoryFlags, int, int, int, out OpenTK.Compute.OpenCL.CLResultCode)
  type: Method
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  summary: '[DEPRECATED] Introduced in Opencl 1.1.'
  example: []
  syntax:
    content: >-
      [Obsolete]

      public static extern CLBuffer CreateFromGLTexture3D(CLContext context, MemoryFlags flags, int target, int mipLevel, int texture, out CLResultCode error)
    parameters:
    - id: context
      type: OpenTK.Compute.OpenCL.CLContext
    - id: flags
      type: OpenTK.Compute.OpenCL.MemoryFlags
    - id: target
      type: System.Int32
    - id: mipLevel
      type: System.Int32
    - id: texture
      type: System.Int32
    - id: error
      type: OpenTK.Compute.OpenCL.CLResultCode
    return:
      type: OpenTK.Compute.OpenCL.CLBuffer
    content.vb: >-
      <Obsolete>

      Public Shared Function CreateFromGLTexture3D(context As CLContext, flags As MemoryFlags, target As Integer, mipLevel As Integer, texture As Integer, [error] As CLResultCode) As CLBuffer
  overload: OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture3D*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor
    arguments: []
  nameWithType.vb: CLGL.CreateFromGLTexture3D(CLContext, MemoryFlags, Integer, Integer, Integer, CLResultCode)
  fullName.vb: OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture3D(OpenTK.Compute.OpenCL.CLContext, OpenTK.Compute.OpenCL.MemoryFlags, Integer, Integer, Integer, OpenTK.Compute.OpenCL.CLResultCode)
  name.vb: CreateFromGLTexture3D(CLContext, MemoryFlags, Integer, Integer, Integer, CLResultCode)
- uid: OpenTK.Compute.OpenCL.CLGL.GetGLContextInfoKHR(System.IntPtr[],OpenTK.Compute.OpenCL.CLGL.ContextInfo,System.UIntPtr,System.Byte[],System.UIntPtr@)
  commentId: M:OpenTK.Compute.OpenCL.CLGL.GetGLContextInfoKHR(System.IntPtr[],OpenTK.Compute.OpenCL.CLGL.ContextInfo,System.UIntPtr,System.Byte[],System.UIntPtr@)
  id: GetGLContextInfoKHR(System.IntPtr[],OpenTK.Compute.OpenCL.CLGL.ContextInfo,System.UIntPtr,System.Byte[],System.UIntPtr@)
  parent: OpenTK.Compute.OpenCL.CLGL
  langs:
  - csharp
  - vb
  name: GetGLContextInfoKHR(nint[], ContextInfo, nuint, byte[], out nuint)
  nameWithType: CLGL.GetGLContextInfoKHR(nint[], CLGL.ContextInfo, nuint, byte[], out nuint)
  fullName: OpenTK.Compute.OpenCL.CLGL.GetGLContextInfoKHR(nint[], OpenTK.Compute.OpenCL.CLGL.ContextInfo, nuint, byte[], out nuint)
  type: Method
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  summary: Introduced in Opencl 1.0.
  example: []
  syntax:
    content: public static extern CLResultCode GetGLContextInfoKHR(nint[] properties, CLGL.ContextInfo paramName, nuint paramValueSize, byte[] paramValue, out nuint paramValueSizeReturned)
    parameters:
    - id: properties
      type: System.IntPtr[]
    - id: paramName
      type: OpenTK.Compute.OpenCL.CLGL.ContextInfo
    - id: paramValueSize
      type: System.UIntPtr
    - id: paramValue
      type: System.Byte[]
    - id: paramValueSizeReturned
      type: System.UIntPtr
    return:
      type: OpenTK.Compute.OpenCL.CLResultCode
    content.vb: Public Shared Function GetGLContextInfoKHR(properties As IntPtr(), paramName As CLGL.ContextInfo, paramValueSize As UIntPtr, paramValue As Byte(), paramValueSizeReturned As UIntPtr) As CLResultCode
  overload: OpenTK.Compute.OpenCL.CLGL.GetGLContextInfoKHR*
  nameWithType.vb: CLGL.GetGLContextInfoKHR(IntPtr(), CLGL.ContextInfo, UIntPtr, Byte(), UIntPtr)
  fullName.vb: OpenTK.Compute.OpenCL.CLGL.GetGLContextInfoKHR(System.IntPtr(), OpenTK.Compute.OpenCL.CLGL.ContextInfo, System.UIntPtr, Byte(), System.UIntPtr)
  name.vb: GetGLContextInfoKHR(IntPtr(), ContextInfo, UIntPtr, Byte(), UIntPtr)
- uid: OpenTK.Compute.OpenCL.CLGL.CreateEventFromGLsyncKHR(OpenTK.Compute.OpenCL.CLContext,System.IntPtr,OpenTK.Compute.OpenCL.CLResultCode@)
  commentId: M:OpenTK.Compute.OpenCL.CLGL.CreateEventFromGLsyncKHR(OpenTK.Compute.OpenCL.CLContext,System.IntPtr,OpenTK.Compute.OpenCL.CLResultCode@)
  id: CreateEventFromGLsyncKHR(OpenTK.Compute.OpenCL.CLContext,System.IntPtr,OpenTK.Compute.OpenCL.CLResultCode@)
  parent: OpenTK.Compute.OpenCL.CLGL
  langs:
  - csharp
  - vb
  name: CreateEventFromGLsyncKHR(CLContext, nint, out CLResultCode)
  nameWithType: CLGL.CreateEventFromGLsyncKHR(CLContext, nint, out CLResultCode)
  fullName: OpenTK.Compute.OpenCL.CLGL.CreateEventFromGLsyncKHR(OpenTK.Compute.OpenCL.CLContext, nint, out OpenTK.Compute.OpenCL.CLResultCode)
  type: Method
  assemblies:
  - OpenTK.Compute
  namespace: OpenTK.Compute.OpenCL
  summary: Introduced in Opencl 1.1.
  example: []
  syntax:
    content: public static extern CLEvent CreateEventFromGLsyncKHR(CLContext context, nint sync, out CLResultCode error)
    parameters:
    - id: context
      type: OpenTK.Compute.OpenCL.CLContext
    - id: sync
      type: System.IntPtr
    - id: error
      type: OpenTK.Compute.OpenCL.CLResultCode
    return:
      type: OpenTK.Compute.OpenCL.CLEvent
    content.vb: Public Shared Function CreateEventFromGLsyncKHR(context As CLContext, sync As IntPtr, [error] As CLResultCode) As CLEvent
  overload: OpenTK.Compute.OpenCL.CLGL.CreateEventFromGLsyncKHR*
  nameWithType.vb: CLGL.CreateEventFromGLsyncKHR(CLContext, IntPtr, CLResultCode)
  fullName.vb: OpenTK.Compute.OpenCL.CLGL.CreateEventFromGLsyncKHR(OpenTK.Compute.OpenCL.CLContext, System.IntPtr, OpenTK.Compute.OpenCL.CLResultCode)
  name.vb: CreateEventFromGLsyncKHR(CLContext, IntPtr, CLResultCode)
references:
- uid: OpenTK.Compute.OpenCL
  commentId: N:OpenTK.Compute.OpenCL
  href: OpenTK.html
  name: OpenTK.Compute.OpenCL
  nameWithType: OpenTK.Compute.OpenCL
  fullName: OpenTK.Compute.OpenCL
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Compute
    name: Compute
    href: OpenTK.Compute.html
  - name: .
  - uid: OpenTK.Compute.OpenCL
    name: OpenCL
    href: OpenTK.Compute.OpenCL.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Compute
    name: Compute
    href: OpenTK.Compute.html
  - name: .
  - uid: OpenTK.Compute.OpenCL
    name: OpenCL
    href: OpenTK.Compute.OpenCL.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: OpenTK.Compute.Native.CLBase
  commentId: T:OpenTK.Compute.Native.CLBase
  parent: OpenTK.Compute.Native
  href: OpenTK.Compute.Native.CLBase.html
  name: CLBase
  nameWithType: CLBase
  fullName: OpenTK.Compute.Native.CLBase
- uid: OpenTK.Compute.Native.CLBase.RegisterOpenCLResolver
  commentId: M:OpenTK.Compute.Native.CLBase.RegisterOpenCLResolver
  parent: OpenTK.Compute.Native.CLBase
  href: OpenTK.Compute.Native.CLBase.html#OpenTK_Compute_Native_CLBase_RegisterOpenCLResolver
  name: RegisterOpenCLResolver()
  nameWithType: CLBase.RegisterOpenCLResolver()
  fullName: OpenTK.Compute.Native.CLBase.RegisterOpenCLResolver()
  spec.csharp:
  - uid: OpenTK.Compute.Native.CLBase.RegisterOpenCLResolver
    name: RegisterOpenCLResolver
    href: OpenTK.Compute.Native.CLBase.html#OpenTK_Compute_Native_CLBase_RegisterOpenCLResolver
  - name: (
  - name: )
  spec.vb:
  - uid: OpenTK.Compute.Native.CLBase.RegisterOpenCLResolver
    name: RegisterOpenCLResolver
    href: OpenTK.Compute.Native.CLBase.html#OpenTK_Compute_Native_CLBase_RegisterOpenCLResolver
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTK.Compute.Native
  commentId: N:OpenTK.Compute.Native
  href: OpenTK.html
  name: OpenTK.Compute.Native
  nameWithType: OpenTK.Compute.Native
  fullName: OpenTK.Compute.Native
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Compute
    name: Compute
    href: OpenTK.Compute.html
  - name: .
  - uid: OpenTK.Compute.Native
    name: Native
    href: OpenTK.Compute.Native.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Compute
    name: Compute
    href: OpenTK.Compute.html
  - name: .
  - uid: OpenTK.Compute.Native
    name: Native
    href: OpenTK.Compute.Native.html
- uid: OpenTK.Compute.OpenCL.CLGL.CreateFromGLBuffer*
  commentId: Overload:OpenTK.Compute.OpenCL.CLGL.CreateFromGLBuffer
  isExternal: true
  href: OpenTK.Compute.OpenCL.CLGL.html#OpenTK_Compute_OpenCL_CLGL_CreateFromGLBuffer_OpenTK_Compute_OpenCL_CLContext_OpenTK_Compute_OpenCL_MemoryFlags_System_Int32_OpenTK_Compute_OpenCL_CLResultCode__
  name: CreateFromGLBuffer
  nameWithType: CLGL.CreateFromGLBuffer
  fullName: OpenTK.Compute.OpenCL.CLGL.CreateFromGLBuffer
- uid: OpenTK.Compute.OpenCL.CLContext
  commentId: T:OpenTK.Compute.OpenCL.CLContext
  parent: OpenTK.Compute.OpenCL
  href: OpenTK.Compute.OpenCL.CLContext.html
  name: CLContext
  nameWithType: CLContext
  fullName: OpenTK.Compute.OpenCL.CLContext
- uid: OpenTK.Compute.OpenCL.MemoryFlags
  commentId: T:OpenTK.Compute.OpenCL.MemoryFlags
  parent: OpenTK.Compute.OpenCL
  href: OpenTK.Compute.OpenCL.MemoryFlags.html
  name: MemoryFlags
  nameWithType: MemoryFlags
  fullName: OpenTK.Compute.OpenCL.MemoryFlags
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: OpenTK.Compute.OpenCL.CLResultCode
  commentId: T:OpenTK.Compute.OpenCL.CLResultCode
  parent: OpenTK.Compute.OpenCL
  href: OpenTK.Compute.OpenCL.CLResultCode.html
  name: CLResultCode
  nameWithType: CLResultCode
  fullName: OpenTK.Compute.OpenCL.CLResultCode
- uid: OpenTK.Compute.OpenCL.CLBuffer
  commentId: T:OpenTK.Compute.OpenCL.CLBuffer
  parent: OpenTK.Compute.OpenCL
  href: OpenTK.Compute.OpenCL.CLBuffer.html
  name: CLBuffer
  nameWithType: CLBuffer
  fullName: OpenTK.Compute.OpenCL.CLBuffer
- uid: OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture*
  commentId: Overload:OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture
  isExternal: true
  href: OpenTK.Compute.OpenCL.CLGL.html#OpenTK_Compute_OpenCL_CLGL_CreateFromGLTexture_OpenTK_Compute_OpenCL_CLContext_OpenTK_Compute_OpenCL_MemoryFlags_System_Int32_System_Int32_System_Int32_OpenTK_Compute_OpenCL_CLResultCode__
  name: CreateFromGLTexture
  nameWithType: CLGL.CreateFromGLTexture
  fullName: OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture
- uid: OpenTK.Compute.OpenCL.CLGL.CreateFromGLRenderbuffer*
  commentId: Overload:OpenTK.Compute.OpenCL.CLGL.CreateFromGLRenderbuffer
  isExternal: true
  href: OpenTK.Compute.OpenCL.CLGL.html#OpenTK_Compute_OpenCL_CLGL_CreateFromGLRenderbuffer_OpenTK_Compute_OpenCL_CLContext_OpenTK_Compute_OpenCL_MemoryFlags_System_Int32_OpenTK_Compute_OpenCL_CLResultCode__
  name: CreateFromGLRenderbuffer
  nameWithType: CLGL.CreateFromGLRenderbuffer
  fullName: OpenTK.Compute.OpenCL.CLGL.CreateFromGLRenderbuffer
- uid: OpenTK.Compute.OpenCL.CLGL.GetGLObjectInfo*
  commentId: Overload:OpenTK.Compute.OpenCL.CLGL.GetGLObjectInfo
  isExternal: true
  href: OpenTK.Compute.OpenCL.CLGL.html#OpenTK_Compute_OpenCL_CLGL_GetGLObjectInfo_OpenTK_Compute_OpenCL_CLBuffer_OpenTK_Compute_OpenCL_CLGL_ObjectType__System_Int32__
  name: GetGLObjectInfo
  nameWithType: CLGL.GetGLObjectInfo
  fullName: OpenTK.Compute.OpenCL.CLGL.GetGLObjectInfo
- uid: OpenTK.Compute.OpenCL.CLGL.ObjectType
  commentId: T:OpenTK.Compute.OpenCL.CLGL.ObjectType
  parent: OpenTK.Compute.OpenCL
  href: OpenTK.Compute.OpenCL.CLGL.html
  name: CLGL.ObjectType
  nameWithType: CLGL.ObjectType
  fullName: OpenTK.Compute.OpenCL.CLGL.ObjectType
  spec.csharp:
  - uid: OpenTK.Compute.OpenCL.CLGL
    name: CLGL
    href: OpenTK.Compute.OpenCL.CLGL.html
  - name: .
  - uid: OpenTK.Compute.OpenCL.CLGL.ObjectType
    name: ObjectType
    href: OpenTK.Compute.OpenCL.CLGL.ObjectType.html
  spec.vb:
  - uid: OpenTK.Compute.OpenCL.CLGL
    name: CLGL
    href: OpenTK.Compute.OpenCL.CLGL.html
  - name: .
  - uid: OpenTK.Compute.OpenCL.CLGL.ObjectType
    name: ObjectType
    href: OpenTK.Compute.OpenCL.CLGL.ObjectType.html
- uid: OpenTK.Compute.OpenCL.CLGL.GetGLTextureInfo*
  commentId: Overload:OpenTK.Compute.OpenCL.CLGL.GetGLTextureInfo
  isExternal: true
  href: OpenTK.Compute.OpenCL.CLGL.html#OpenTK_Compute_OpenCL_CLGL_GetGLTextureInfo_OpenTK_Compute_OpenCL_CLBuffer_OpenTK_Compute_OpenCL_CLGL_TextureInfo_System_UIntPtr_System_Byte___System_UIntPtr__
  name: GetGLTextureInfo
  nameWithType: CLGL.GetGLTextureInfo
  fullName: OpenTK.Compute.OpenCL.CLGL.GetGLTextureInfo
- uid: OpenTK.Compute.OpenCL.CLGL.TextureInfo
  commentId: T:OpenTK.Compute.OpenCL.CLGL.TextureInfo
  parent: OpenTK.Compute.OpenCL
  href: OpenTK.Compute.OpenCL.CLGL.html
  name: CLGL.TextureInfo
  nameWithType: CLGL.TextureInfo
  fullName: OpenTK.Compute.OpenCL.CLGL.TextureInfo
  spec.csharp:
  - uid: OpenTK.Compute.OpenCL.CLGL
    name: CLGL
    href: OpenTK.Compute.OpenCL.CLGL.html
  - name: .
  - uid: OpenTK.Compute.OpenCL.CLGL.TextureInfo
    name: TextureInfo
    href: OpenTK.Compute.OpenCL.CLGL.TextureInfo.html
  spec.vb:
  - uid: OpenTK.Compute.OpenCL.CLGL
    name: CLGL
    href: OpenTK.Compute.OpenCL.CLGL.html
  - name: .
  - uid: OpenTK.Compute.OpenCL.CLGL.TextureInfo
    name: TextureInfo
    href: OpenTK.Compute.OpenCL.CLGL.TextureInfo.html
- uid: System.UIntPtr
  commentId: T:System.UIntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uintptr
  name: nuint
  nameWithType: nuint
  fullName: nuint
  nameWithType.vb: UIntPtr
  fullName.vb: System.UIntPtr
  name.vb: UIntPtr
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: OpenTK.Compute.OpenCL.CLGL.EnqueueAcquireGLObjects*
  commentId: Overload:OpenTK.Compute.OpenCL.CLGL.EnqueueAcquireGLObjects
  isExternal: true
  href: OpenTK.Compute.OpenCL.CLGL.html#OpenTK_Compute_OpenCL_CLGL_EnqueueAcquireGLObjects_OpenTK_Compute_OpenCL_CLCommandQueue_System_UInt32_OpenTK_Compute_OpenCL_CLBuffer___System_UInt32_OpenTK_Compute_OpenCL_CLEvent___OpenTK_Compute_OpenCL_CLEvent__
  name: EnqueueAcquireGLObjects
  nameWithType: CLGL.EnqueueAcquireGLObjects
  fullName: OpenTK.Compute.OpenCL.CLGL.EnqueueAcquireGLObjects
- uid: OpenTK.Compute.OpenCL.CLCommandQueue
  commentId: T:OpenTK.Compute.OpenCL.CLCommandQueue
  parent: OpenTK.Compute.OpenCL
  href: OpenTK.Compute.OpenCL.CLCommandQueue.html
  name: CLCommandQueue
  nameWithType: CLCommandQueue
  fullName: OpenTK.Compute.OpenCL.CLCommandQueue
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: OpenTK.Compute.OpenCL.CLBuffer[]
  isExternal: true
  href: OpenTK.Compute.OpenCL.CLBuffer.html
  name: CLBuffer[]
  nameWithType: CLBuffer[]
  fullName: OpenTK.Compute.OpenCL.CLBuffer[]
  nameWithType.vb: CLBuffer()
  fullName.vb: OpenTK.Compute.OpenCL.CLBuffer()
  name.vb: CLBuffer()
  spec.csharp:
  - uid: OpenTK.Compute.OpenCL.CLBuffer
    name: CLBuffer
    href: OpenTK.Compute.OpenCL.CLBuffer.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: OpenTK.Compute.OpenCL.CLBuffer
    name: CLBuffer
    href: OpenTK.Compute.OpenCL.CLBuffer.html
  - name: (
  - name: )
- uid: OpenTK.Compute.OpenCL.CLEvent[]
  isExternal: true
  href: OpenTK.Compute.OpenCL.CLEvent.html
  name: CLEvent[]
  nameWithType: CLEvent[]
  fullName: OpenTK.Compute.OpenCL.CLEvent[]
  nameWithType.vb: CLEvent()
  fullName.vb: OpenTK.Compute.OpenCL.CLEvent()
  name.vb: CLEvent()
  spec.csharp:
  - uid: OpenTK.Compute.OpenCL.CLEvent
    name: CLEvent
    href: OpenTK.Compute.OpenCL.CLEvent.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: OpenTK.Compute.OpenCL.CLEvent
    name: CLEvent
    href: OpenTK.Compute.OpenCL.CLEvent.html
  - name: (
  - name: )
- uid: OpenTK.Compute.OpenCL.CLEvent
  commentId: T:OpenTK.Compute.OpenCL.CLEvent
  parent: OpenTK.Compute.OpenCL
  href: OpenTK.Compute.OpenCL.CLEvent.html
  name: CLEvent
  nameWithType: CLEvent
  fullName: OpenTK.Compute.OpenCL.CLEvent
- uid: OpenTK.Compute.OpenCL.CLGL.EnqueueReleaseGLObjects*
  commentId: Overload:OpenTK.Compute.OpenCL.CLGL.EnqueueReleaseGLObjects
  isExternal: true
  href: OpenTK.Compute.OpenCL.CLGL.html#OpenTK_Compute_OpenCL_CLGL_EnqueueReleaseGLObjects_OpenTK_Compute_OpenCL_CLCommandQueue_System_UInt32_OpenTK_Compute_OpenCL_CLBuffer___System_UInt32_OpenTK_Compute_OpenCL_CLEvent___OpenTK_Compute_OpenCL_CLEvent__
  name: EnqueueReleaseGLObjects
  nameWithType: CLGL.EnqueueReleaseGLObjects
  fullName: OpenTK.Compute.OpenCL.CLGL.EnqueueReleaseGLObjects
- uid: OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture2D*
  commentId: Overload:OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture2D
  isExternal: true
  href: OpenTK.Compute.OpenCL.CLGL.html#OpenTK_Compute_OpenCL_CLGL_CreateFromGLTexture2D_OpenTK_Compute_OpenCL_CLContext_OpenTK_Compute_OpenCL_MemoryFlags_System_Int32_System_Int32_System_Int32_OpenTK_Compute_OpenCL_CLResultCode__
  name: CreateFromGLTexture2D
  nameWithType: CLGL.CreateFromGLTexture2D
  fullName: OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture2D
- uid: OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture3D*
  commentId: Overload:OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture3D
  isExternal: true
  href: OpenTK.Compute.OpenCL.CLGL.html#OpenTK_Compute_OpenCL_CLGL_CreateFromGLTexture3D_OpenTK_Compute_OpenCL_CLContext_OpenTK_Compute_OpenCL_MemoryFlags_System_Int32_System_Int32_System_Int32_OpenTK_Compute_OpenCL_CLResultCode__
  name: CreateFromGLTexture3D
  nameWithType: CLGL.CreateFromGLTexture3D
  fullName: OpenTK.Compute.OpenCL.CLGL.CreateFromGLTexture3D
- uid: OpenTK.Compute.OpenCL.CLGL.GetGLContextInfoKHR*
  commentId: Overload:OpenTK.Compute.OpenCL.CLGL.GetGLContextInfoKHR
  isExternal: true
  href: OpenTK.Compute.OpenCL.CLGL.html#OpenTK_Compute_OpenCL_CLGL_GetGLContextInfoKHR_System_IntPtr___OpenTK_Compute_OpenCL_CLGL_ContextInfo_System_UIntPtr_System_Byte___System_UIntPtr__
  name: GetGLContextInfoKHR
  nameWithType: CLGL.GetGLContextInfoKHR
  fullName: OpenTK.Compute.OpenCL.CLGL.GetGLContextInfoKHR
- uid: System.IntPtr[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: nint[]
  nameWithType: nint[]
  fullName: nint[]
  nameWithType.vb: IntPtr()
  fullName.vb: System.IntPtr()
  name.vb: IntPtr()
  spec.csharp:
  - uid: System.IntPtr
    name: nint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.IntPtr
    name: IntPtr
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.intptr
  - name: (
  - name: )
- uid: OpenTK.Compute.OpenCL.CLGL.ContextInfo
  commentId: T:OpenTK.Compute.OpenCL.CLGL.ContextInfo
  parent: OpenTK.Compute.OpenCL
  href: OpenTK.Compute.OpenCL.CLGL.html
  name: CLGL.ContextInfo
  nameWithType: CLGL.ContextInfo
  fullName: OpenTK.Compute.OpenCL.CLGL.ContextInfo
  spec.csharp:
  - uid: OpenTK.Compute.OpenCL.CLGL
    name: CLGL
    href: OpenTK.Compute.OpenCL.CLGL.html
  - name: .
  - uid: OpenTK.Compute.OpenCL.CLGL.ContextInfo
    name: ContextInfo
    href: OpenTK.Compute.OpenCL.CLGL.ContextInfo.html
  spec.vb:
  - uid: OpenTK.Compute.OpenCL.CLGL
    name: CLGL
    href: OpenTK.Compute.OpenCL.CLGL.html
  - name: .
  - uid: OpenTK.Compute.OpenCL.CLGL.ContextInfo
    name: ContextInfo
    href: OpenTK.Compute.OpenCL.CLGL.ContextInfo.html
- uid: OpenTK.Compute.OpenCL.CLGL.CreateEventFromGLsyncKHR*
  commentId: Overload:OpenTK.Compute.OpenCL.CLGL.CreateEventFromGLsyncKHR
  isExternal: true
  href: OpenTK.Compute.OpenCL.CLGL.html#OpenTK_Compute_OpenCL_CLGL_CreateEventFromGLsyncKHR_OpenTK_Compute_OpenCL_CLContext_System_IntPtr_OpenTK_Compute_OpenCL_CLResultCode__
  name: CreateEventFromGLsyncKHR
  nameWithType: CLGL.CreateEventFromGLsyncKHR
  fullName: OpenTK.Compute.OpenCL.CLGL.CreateEventFromGLsyncKHR
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: nint
  nameWithType: nint
  fullName: nint
  nameWithType.vb: IntPtr
  fullName.vb: System.IntPtr
  name.vb: IntPtr
