### YamlMime:ManagedReference
items:
- uid: OpenTK.Audio.OpenAL.EFXListenerFloat
  commentId: T:OpenTK.Audio.OpenAL.EFXListenerFloat
  id: EFXListenerFloat
  parent: OpenTK.Audio.OpenAL
  children:
  - OpenTK.Audio.OpenAL.EFXListenerFloat.EfxMetersPerUnit
  langs:
  - csharp
  - vb
  name: EFXListenerFloat
  nameWithType: EFXListenerFloat
  fullName: OpenTK.Audio.OpenAL.EFXListenerFloat
  type: Enum
  source:
    id: EFXListenerFloat
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EFXListenerFloat.cs
    startLine: 14
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: A list of valid <xref href="System.Single" data-throw-if-not-resolved="false"></xref><xref href="OpenTK.Audio.OpenAL.ALC.EFX.Listener(System.Int32%2cOpenTK.Audio.OpenAL.EFXListenerFloat%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>/<xref href="OpenTK.Audio.OpenAL.ALC.EFX.GetListener(System.Int32%2cOpenTK.Audio.OpenAL.EFXListenerFloat)" data-throw-if-not-resolved="false"></xref> parameters.
  example: []
  syntax:
    content: public enum EFXListenerFloat
    content.vb: Public Enum EFXListenerFloat
- uid: OpenTK.Audio.OpenAL.EFXListenerFloat.EfxMetersPerUnit
  commentId: F:OpenTK.Audio.OpenAL.EFXListenerFloat.EfxMetersPerUnit
  id: EfxMetersPerUnit
  parent: OpenTK.Audio.OpenAL.EFXListenerFloat
  langs:
  - csharp
  - vb
  name: EfxMetersPerUnit
  nameWithType: EFXListenerFloat.EfxMetersPerUnit
  fullName: OpenTK.Audio.OpenAL.EFXListenerFloat.EfxMetersPerUnit
  type: Field
  source:
    id: EfxMetersPerUnit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EFXListenerFloat.cs
    startLine: 26
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: >-
    centimeters 0.01f

    meters 1.0f

    kilometers 1000.0f

    Range [float.MinValue .. float.MaxValue]

    Default: 1.0f.


    This setting is critical if Air Absorption effects are enabled because the amount of Air

    Absorption applied is directly related to the real-world distance between the Source and the Listener.
  example: []
  syntax:
    content: EfxMetersPerUnit = 131076
    return:
      type: OpenTK.Audio.OpenAL.EFXListenerFloat
references:
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: OpenTK.Audio.OpenAL.ALC.EFX.Listener(System.Int32,OpenTK.Audio.OpenAL.EFXListenerFloat,System.Single)
  commentId: M:OpenTK.Audio.OpenAL.ALC.EFX.Listener(System.Int32,OpenTK.Audio.OpenAL.EFXListenerFloat,System.Single)
  isExternal: true
  href: OpenTK.Audio.OpenAL.ALC.EFX.html#OpenTK_Audio_OpenAL_ALC_EFX_Listener_System_Int32_OpenTK_Audio_OpenAL_EFXListenerFloat_System_Single_
  name: Listener(int, EFXListenerFloat, float)
  nameWithType: ALC.EFX.Listener(int, EFXListenerFloat, float)
  fullName: OpenTK.Audio.OpenAL.ALC.EFX.Listener(int, OpenTK.Audio.OpenAL.EFXListenerFloat, float)
  nameWithType.vb: ALC.EFX.Listener(Integer, EFXListenerFloat, Single)
  fullName.vb: OpenTK.Audio.OpenAL.ALC.EFX.Listener(Integer, OpenTK.Audio.OpenAL.EFXListenerFloat, Single)
  name.vb: Listener(Integer, EFXListenerFloat, Single)
  spec.csharp:
  - uid: OpenTK.Audio.OpenAL.ALC.EFX.Listener(System.Int32,OpenTK.Audio.OpenAL.EFXListenerFloat,System.Single)
    name: Listener
    href: OpenTK.Audio.OpenAL.ALC.EFX.html#OpenTK_Audio_OpenAL_ALC_EFX_Listener_System_Int32_OpenTK_Audio_OpenAL_EFXListenerFloat_System_Single_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: OpenTK.Audio.OpenAL.EFXListenerFloat
    name: EFXListenerFloat
    href: OpenTK.Audio.OpenAL.EFXListenerFloat.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: OpenTK.Audio.OpenAL.ALC.EFX.Listener(System.Int32,OpenTK.Audio.OpenAL.EFXListenerFloat,System.Single)
    name: Listener
    href: OpenTK.Audio.OpenAL.ALC.EFX.html#OpenTK_Audio_OpenAL_ALC_EFX_Listener_System_Int32_OpenTK_Audio_OpenAL_EFXListenerFloat_System_Single_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: OpenTK.Audio.OpenAL.EFXListenerFloat
    name: EFXListenerFloat
    href: OpenTK.Audio.OpenAL.EFXListenerFloat.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: OpenTK.Audio.OpenAL.ALC.EFX.GetListener(System.Int32,OpenTK.Audio.OpenAL.EFXListenerFloat)
  commentId: M:OpenTK.Audio.OpenAL.ALC.EFX.GetListener(System.Int32,OpenTK.Audio.OpenAL.EFXListenerFloat)
  isExternal: true
  href: OpenTK.Audio.OpenAL.ALC.EFX.html#OpenTK_Audio_OpenAL_ALC_EFX_GetListener_System_Int32_OpenTK_Audio_OpenAL_EFXListenerFloat_
  name: GetListener(int, EFXListenerFloat)
  nameWithType: ALC.EFX.GetListener(int, EFXListenerFloat)
  fullName: OpenTK.Audio.OpenAL.ALC.EFX.GetListener(int, OpenTK.Audio.OpenAL.EFXListenerFloat)
  nameWithType.vb: ALC.EFX.GetListener(Integer, EFXListenerFloat)
  fullName.vb: OpenTK.Audio.OpenAL.ALC.EFX.GetListener(Integer, OpenTK.Audio.OpenAL.EFXListenerFloat)
  name.vb: GetListener(Integer, EFXListenerFloat)
  spec.csharp:
  - uid: OpenTK.Audio.OpenAL.ALC.EFX.GetListener(System.Int32,OpenTK.Audio.OpenAL.EFXListenerFloat)
    name: GetListener
    href: OpenTK.Audio.OpenAL.ALC.EFX.html#OpenTK_Audio_OpenAL_ALC_EFX_GetListener_System_Int32_OpenTK_Audio_OpenAL_EFXListenerFloat_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: OpenTK.Audio.OpenAL.EFXListenerFloat
    name: EFXListenerFloat
    href: OpenTK.Audio.OpenAL.EFXListenerFloat.html
  - name: )
  spec.vb:
  - uid: OpenTK.Audio.OpenAL.ALC.EFX.GetListener(System.Int32,OpenTK.Audio.OpenAL.EFXListenerFloat)
    name: GetListener
    href: OpenTK.Audio.OpenAL.ALC.EFX.html#OpenTK_Audio_OpenAL_ALC_EFX_GetListener_System_Int32_OpenTK_Audio_OpenAL_EFXListenerFloat_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: OpenTK.Audio.OpenAL.EFXListenerFloat
    name: EFXListenerFloat
    href: OpenTK.Audio.OpenAL.EFXListenerFloat.html
  - name: )
- uid: OpenTK.Audio.OpenAL
  commentId: N:OpenTK.Audio.OpenAL
  href: OpenTK.html
  name: OpenTK.Audio.OpenAL
  nameWithType: OpenTK.Audio.OpenAL
  fullName: OpenTK.Audio.OpenAL
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Audio
    name: Audio
    href: OpenTK.Audio.html
  - name: .
  - uid: OpenTK.Audio.OpenAL
    name: OpenAL
    href: OpenTK.Audio.OpenAL.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Audio
    name: Audio
    href: OpenTK.Audio.html
  - name: .
  - uid: OpenTK.Audio.OpenAL
    name: OpenAL
    href: OpenTK.Audio.OpenAL.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTK.Audio.OpenAL.EFXListenerFloat
  commentId: T:OpenTK.Audio.OpenAL.EFXListenerFloat
  parent: OpenTK.Audio.OpenAL
  href: OpenTK.Audio.OpenAL.EFXListenerFloat.html
  name: EFXListenerFloat
  nameWithType: EFXListenerFloat
  fullName: OpenTK.Audio.OpenAL.EFXListenerFloat
