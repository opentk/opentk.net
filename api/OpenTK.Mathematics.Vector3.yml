### YamlMime:ManagedReference
items:
- uid: OpenTK.Mathematics.Vector3
  commentId: T:OpenTK.Mathematics.Vector3
  id: Vector3
  parent: OpenTK.Mathematics
  children:
  - OpenTK.Mathematics.Vector3.#ctor(OpenTK.Mathematics.Vector2,System.Single)
  - OpenTK.Mathematics.Vector3.#ctor(System.Single)
  - OpenTK.Mathematics.Vector3.#ctor(System.Single,System.Single,System.Single)
  - OpenTK.Mathematics.Vector3.Abs
  - OpenTK.Mathematics.Vector3.Abs(OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.Abs(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.Add(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.Add(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.BaryCentric(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single,System.Single)
  - OpenTK.Mathematics.Vector3.BaryCentric(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single,System.Single,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.CalculateAngle(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.CalculateAngle(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single@)
  - OpenTK.Mathematics.Vector3.Clamp(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.Clamp(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.ComponentMax(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.ComponentMax(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.ComponentMin(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.ComponentMin(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.Cross(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.Cross(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.Deconstruct(System.Single@,System.Single@,System.Single@)
  - OpenTK.Mathematics.Vector3.Distance(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.Distance(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single@)
  - OpenTK.Mathematics.Vector3.DistanceSquared(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.DistanceSquared(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single@)
  - OpenTK.Mathematics.Vector3.Divide(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.Divide(OpenTK.Mathematics.Vector3,System.Single)
  - OpenTK.Mathematics.Vector3.Divide(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.Divide(OpenTK.Mathematics.Vector3@,System.Single,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.Dot(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.Dot(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single@)
  - OpenTK.Mathematics.Vector3.Elerp(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single)
  - OpenTK.Mathematics.Vector3.Elerp(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.Equals(OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.Equals(System.Object)
  - OpenTK.Mathematics.Vector3.GetHashCode
  - OpenTK.Mathematics.Vector3.Item(System.Int32)
  - OpenTK.Mathematics.Vector3.Length
  - OpenTK.Mathematics.Vector3.LengthFast
  - OpenTK.Mathematics.Vector3.LengthSquared
  - OpenTK.Mathematics.Vector3.Lerp(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.Lerp(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single)
  - OpenTK.Mathematics.Vector3.Lerp(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.Lerp(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.MagnitudeMax(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.MagnitudeMax(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.MagnitudeMin(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.MagnitudeMin(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.Multiply(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.Multiply(OpenTK.Mathematics.Vector3,System.Single)
  - OpenTK.Mathematics.Vector3.Multiply(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.Multiply(OpenTK.Mathematics.Vector3@,System.Single,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.NegativeInfinity
  - OpenTK.Mathematics.Vector3.Normalize
  - OpenTK.Mathematics.Vector3.Normalize(OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.Normalize(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.NormalizeFast
  - OpenTK.Mathematics.Vector3.NormalizeFast(OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.NormalizeFast(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.Normalized
  - OpenTK.Mathematics.Vector3.One
  - OpenTK.Mathematics.Vector3.PositiveInfinity
  - OpenTK.Mathematics.Vector3.Project(OpenTK.Mathematics.Vector3,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,OpenTK.Mathematics.Matrix4)
  - OpenTK.Mathematics.Vector3.ReciprocalLengthFast
  - OpenTK.Mathematics.Vector3.SizeInBytes
  - OpenTK.Mathematics.Vector3.Slerp(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single)
  - OpenTK.Mathematics.Vector3.Slerp(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.Subtract(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.Subtract(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.ToString
  - OpenTK.Mathematics.Vector3.ToString(System.IFormatProvider)
  - OpenTK.Mathematics.Vector3.ToString(System.String)
  - OpenTK.Mathematics.Vector3.ToString(System.String,System.IFormatProvider)
  - OpenTK.Mathematics.Vector3.Transform(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Quaternion)
  - OpenTK.Mathematics.Vector3.Transform(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.TransformColumn(OpenTK.Mathematics.Matrix3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.TransformColumn(OpenTK.Mathematics.Matrix3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.TransformNormal(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix4)
  - OpenTK.Mathematics.Vector3.TransformNormal(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.TransformNormalInverse(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix4)
  - OpenTK.Mathematics.Vector3.TransformNormalInverse(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.TransformPerspective(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix4)
  - OpenTK.Mathematics.Vector3.TransformPerspective(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.TransformPosition(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix4)
  - OpenTK.Mathematics.Vector3.TransformPosition(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.TransformRow(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix3)
  - OpenTK.Mathematics.Vector3.TransformRow(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix3@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.TransformVector(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix4)
  - OpenTK.Mathematics.Vector3.TransformVector(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector3@)
  - OpenTK.Mathematics.Vector3.UnitX
  - OpenTK.Mathematics.Vector3.UnitY
  - OpenTK.Mathematics.Vector3.UnitZ
  - OpenTK.Mathematics.Vector3.Unproject(OpenTK.Mathematics.Vector3,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,OpenTK.Mathematics.Matrix4)
  - OpenTK.Mathematics.Vector3.X
  - OpenTK.Mathematics.Vector3.Xy
  - OpenTK.Mathematics.Vector3.Xz
  - OpenTK.Mathematics.Vector3.Xzy
  - OpenTK.Mathematics.Vector3.Y
  - OpenTK.Mathematics.Vector3.Yx
  - OpenTK.Mathematics.Vector3.Yxz
  - OpenTK.Mathematics.Vector3.Yz
  - OpenTK.Mathematics.Vector3.Yzx
  - OpenTK.Mathematics.Vector3.Z
  - OpenTK.Mathematics.Vector3.Zero
  - OpenTK.Mathematics.Vector3.Zx
  - OpenTK.Mathematics.Vector3.Zxy
  - OpenTK.Mathematics.Vector3.Zy
  - OpenTK.Mathematics.Vector3.Zyx
  - OpenTK.Mathematics.Vector3.op_Addition(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.op_Division(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.op_Division(OpenTK.Mathematics.Vector3,System.Single)
  - OpenTK.Mathematics.Vector3.op_Equality(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.op_Explicit(OpenTK.Mathematics.Vector3)~OpenTK.Mathematics.Vector3h
  - OpenTK.Mathematics.Vector3.op_Explicit(OpenTK.Mathematics.Vector3)~OpenTK.Mathematics.Vector3i
  - OpenTK.Mathematics.Vector3.op_Implicit(OpenTK.Mathematics.Vector3)~OpenTK.Mathematics.Vector3d
  - OpenTK.Mathematics.Vector3.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single})~OpenTK.Mathematics.Vector3
  - OpenTK.Mathematics.Vector3.op_Inequality(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.op_Multiply(OpenTK.Mathematics.Matrix3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.op_Multiply(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.op_Multiply(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix3)
  - OpenTK.Mathematics.Vector3.op_Multiply(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.op_Multiply(OpenTK.Mathematics.Vector3,System.Single)
  - OpenTK.Mathematics.Vector3.op_Multiply(System.Single,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.op_Subtraction(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  - OpenTK.Mathematics.Vector3.op_UnaryNegation(OpenTK.Mathematics.Vector3)
  langs:
  - csharp
  - vb
  name: Vector3
  nameWithType: Vector3
  fullName: OpenTK.Mathematics.Vector3
  type: Struct
  source:
    id: Vector3
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 36
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Represents a 3D vector using three single-precision floating-point numbers.
  remarks: The Vector3 structure is suitable for interoperation with unmanaged code requiring three consecutive floats.
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct Vector3 : IEquatable<Vector3>, IFormattable
    content.vb: >-
      <Serializable>

      Public Structure Vector3 Implements IEquatable(Of Vector3), IFormattable
  implements:
  - System.IEquatable{OpenTK.Mathematics.Vector3}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.X
  commentId: F:OpenTK.Mathematics.Vector3.X
  id: X
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Vector3.X
  fullName: OpenTK.Mathematics.Vector3.X
  type: Field
  source:
    id: X
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 43
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The X component of the Vector3.
  example: []
  syntax:
    content: public float X
    return:
      type: System.Single
    content.vb: Public X As Single
- uid: OpenTK.Mathematics.Vector3.Y
  commentId: F:OpenTK.Mathematics.Vector3.Y
  id: Y
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Vector3.Y
  fullName: OpenTK.Mathematics.Vector3.Y
  type: Field
  source:
    id: Y
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 48
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The Y component of the Vector3.
  example: []
  syntax:
    content: public float Y
    return:
      type: System.Single
    content.vb: Public Y As Single
- uid: OpenTK.Mathematics.Vector3.Z
  commentId: F:OpenTK.Mathematics.Vector3.Z
  id: Z
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: Vector3.Z
  fullName: OpenTK.Mathematics.Vector3.Z
  type: Field
  source:
    id: Z
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 53
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The Z component of the Vector3.
  example: []
  syntax:
    content: public float Z
    return:
      type: System.Single
    content.vb: Public Z As Single
- uid: OpenTK.Mathematics.Vector3.#ctor(System.Single)
  commentId: M:OpenTK.Mathematics.Vector3.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Vector3(float)
  nameWithType: Vector3.Vector3(float)
  fullName: OpenTK.Mathematics.Vector3.Vector3(float)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 59
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector3" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector3(float value)
    parameters:
    - id: value
      type: System.Single
      description: The value that will initialize this instance.
    content.vb: Public Sub New(value As Single)
  overload: OpenTK.Mathematics.Vector3.#ctor*
  nameWithType.vb: Vector3.New(Single)
  fullName.vb: OpenTK.Mathematics.Vector3.New(Single)
  name.vb: New(Single)
- uid: OpenTK.Mathematics.Vector3.#ctor(System.Single,System.Single,System.Single)
  commentId: M:OpenTK.Mathematics.Vector3.#ctor(System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single)'
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Vector3(float, float, float)
  nameWithType: Vector3.Vector3(float, float, float)
  fullName: OpenTK.Mathematics.Vector3.Vector3(float, float, float)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 72
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector3" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector3(float x, float y, float z)
    parameters:
    - id: x
      type: System.Single
      description: The x component of the Vector3.
    - id: y
      type: System.Single
      description: The y component of the Vector3.
    - id: z
      type: System.Single
      description: The z component of the Vector3.
    content.vb: Public Sub New(x As Single, y As Single, z As Single)
  overload: OpenTK.Mathematics.Vector3.#ctor*
  nameWithType.vb: Vector3.New(Single, Single, Single)
  fullName.vb: OpenTK.Mathematics.Vector3.New(Single, Single, Single)
  name.vb: New(Single, Single, Single)
- uid: OpenTK.Mathematics.Vector3.#ctor(OpenTK.Mathematics.Vector2,System.Single)
  commentId: M:OpenTK.Mathematics.Vector3.#ctor(OpenTK.Mathematics.Vector2,System.Single)
  id: '#ctor(OpenTK.Mathematics.Vector2,System.Single)'
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Vector3(Vector2, float)
  nameWithType: Vector3.Vector3(Vector2, float)
  fullName: OpenTK.Mathematics.Vector3.Vector3(OpenTK.Mathematics.Vector2, float)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 84
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector3" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Vector3(Vector2 xy, float z = 0)
    parameters:
    - id: xy
      type: OpenTK.Mathematics.Vector2
      description: The x and y components of the Vector3.
    - id: z
      type: System.Single
      description: The z component of the Vector3.
    content.vb: Public Sub New(xy As Vector2, z As Single = 0)
  overload: OpenTK.Mathematics.Vector3.#ctor*
  nameWithType.vb: Vector3.New(Vector2, Single)
  fullName.vb: OpenTK.Mathematics.Vector3.New(OpenTK.Mathematics.Vector2, Single)
  name.vb: New(Vector2, Single)
- uid: OpenTK.Mathematics.Vector3.Item(System.Int32)
  commentId: P:OpenTK.Mathematics.Vector3.Item(System.Int32)
  id: Item(System.Int32)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: Vector3.this[int]
  fullName: OpenTK.Mathematics.Vector3.this[int]
  type: Property
  source:
    id: this[]
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 96
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the value at the index of the Vector.
  example: []
  syntax:
    content: public float this[int index] { readonly get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: The index of the component from the Vector.
    return:
      type: System.Single
    content.vb: Public Default Property this[](index As Integer) As Single
  overload: OpenTK.Mathematics.Vector3.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: Thrown if the index is less than 0 or greater than 2.
  nameWithType.vb: Vector3.this[](Integer)
  fullName.vb: OpenTK.Mathematics.Vector3.this[](Integer)
  name.vb: this[](Integer)
- uid: OpenTK.Mathematics.Vector3.Length
  commentId: P:OpenTK.Mathematics.Vector3.Length
  id: Length
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Vector3.Length
  fullName: OpenTK.Mathematics.Vector3.Length
  type: Property
  source:
    id: Length
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 144
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the length (magnitude) of the vector.
  example: []
  syntax:
    content: public readonly float Length { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Length As Single
  overload: OpenTK.Mathematics.Vector3.Length*
  seealso:
  - linkId: OpenTK.Mathematics.Vector3.LengthSquared
    commentId: P:OpenTK.Mathematics.Vector3.LengthSquared
- uid: OpenTK.Mathematics.Vector3.ReciprocalLengthFast
  commentId: P:OpenTK.Mathematics.Vector3.ReciprocalLengthFast
  id: ReciprocalLengthFast
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: ReciprocalLengthFast
  nameWithType: Vector3.ReciprocalLengthFast
  fullName: OpenTK.Mathematics.Vector3.ReciprocalLengthFast
  type: Property
  source:
    id: ReciprocalLengthFast
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 149
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets an approximation of 1 over the length (magnitude) of the vector.
  example: []
  syntax:
    content: public readonly float ReciprocalLengthFast { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property ReciprocalLengthFast As Single
  overload: OpenTK.Mathematics.Vector3.ReciprocalLengthFast*
- uid: OpenTK.Mathematics.Vector3.LengthFast
  commentId: P:OpenTK.Mathematics.Vector3.LengthFast
  id: LengthFast
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: LengthFast
  nameWithType: Vector3.LengthFast
  fullName: OpenTK.Mathematics.Vector3.LengthFast
  type: Property
  source:
    id: LengthFast
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 159
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets an approximation of the vector length (magnitude).
  remarks: This property uses an approximation of the square root function to calculate vector magnitude.
  example: []
  syntax:
    content: public readonly float LengthFast { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property LengthFast As Single
  overload: OpenTK.Mathematics.Vector3.LengthFast*
  seealso:
  - linkId: OpenTK.Mathematics.Vector3.LengthSquared
    commentId: P:OpenTK.Mathematics.Vector3.LengthSquared
- uid: OpenTK.Mathematics.Vector3.LengthSquared
  commentId: P:OpenTK.Mathematics.Vector3.LengthSquared
  id: LengthSquared
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: LengthSquared
  nameWithType: Vector3.LengthSquared
  fullName: OpenTK.Mathematics.Vector3.LengthSquared
  type: Property
  source:
    id: LengthSquared
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 170
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the square of the vector length (magnitude).
  remarks: >-
    This property avoids the costly square root operation required by the Length property. This makes it more suitable

    for comparisons.
  example: []
  syntax:
    content: public readonly float LengthSquared { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property LengthSquared As Single
  overload: OpenTK.Mathematics.Vector3.LengthSquared*
  seealso:
  - linkId: OpenTK.Mathematics.Vector3.LengthFast
    commentId: P:OpenTK.Mathematics.Vector3.LengthFast
- uid: OpenTK.Mathematics.Vector3.Normalized
  commentId: M:OpenTK.Mathematics.Vector3.Normalized
  id: Normalized
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Normalized()
  nameWithType: Vector3.Normalized()
  fullName: OpenTK.Mathematics.Vector3.Normalized()
  type: Method
  source:
    id: Normalized
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 176
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a copy of the Vector3 scaled to unit length.
  example: []
  syntax:
    content: public readonly Vector3 Normalized()
    return:
      type: OpenTK.Mathematics.Vector3
      description: The normalized copy.
    content.vb: Public Function Normalized() As Vector3
  overload: OpenTK.Mathematics.Vector3.Normalized*
- uid: OpenTK.Mathematics.Vector3.Normalize
  commentId: M:OpenTK.Mathematics.Vector3.Normalize
  id: Normalize
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: Vector3.Normalize()
  fullName: OpenTK.Mathematics.Vector3.Normalize()
  type: Method
  source:
    id: Normalize
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 186
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scales the Vector3 to unit length.
  example: []
  syntax:
    content: public void Normalize()
    content.vb: Public Sub Normalize()
  overload: OpenTK.Mathematics.Vector3.Normalize*
- uid: OpenTK.Mathematics.Vector3.NormalizeFast
  commentId: M:OpenTK.Mathematics.Vector3.NormalizeFast
  id: NormalizeFast
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: NormalizeFast()
  nameWithType: Vector3.NormalizeFast()
  fullName: OpenTK.Mathematics.Vector3.NormalizeFast()
  type: Method
  source:
    id: NormalizeFast
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 197
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scales the Vector3 to approximately unit length.
  example: []
  syntax:
    content: public void NormalizeFast()
    content.vb: Public Sub NormalizeFast()
  overload: OpenTK.Mathematics.Vector3.NormalizeFast*
- uid: OpenTK.Mathematics.Vector3.Abs
  commentId: M:OpenTK.Mathematics.Vector3.Abs
  id: Abs
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Abs()
  nameWithType: Vector3.Abs()
  fullName: OpenTK.Mathematics.Vector3.Abs()
  type: Method
  source:
    id: Abs
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 209
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the component-wise absolute value of the vector.
  example: []
  syntax:
    content: public readonly Vector3 Abs()
    return:
      type: OpenTK.Mathematics.Vector3
      description: The component-wise absolute value vector.
    content.vb: Public Function Abs() As Vector3
  overload: OpenTK.Mathematics.Vector3.Abs*
- uid: OpenTK.Mathematics.Vector3.UnitX
  commentId: F:OpenTK.Mathematics.Vector3.UnitX
  id: UnitX
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: UnitX
  nameWithType: Vector3.UnitX
  fullName: OpenTK.Mathematics.Vector3.UnitX
  type: Field
  source:
    id: UnitX
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 221
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length Vector3 that points towards the X-axis.
  example: []
  syntax:
    content: public static readonly Vector3 UnitX
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Shared ReadOnly UnitX As Vector3
- uid: OpenTK.Mathematics.Vector3.UnitY
  commentId: F:OpenTK.Mathematics.Vector3.UnitY
  id: UnitY
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: UnitY
  nameWithType: Vector3.UnitY
  fullName: OpenTK.Mathematics.Vector3.UnitY
  type: Field
  source:
    id: UnitY
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 226
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length Vector3 that points towards the Y-axis.
  example: []
  syntax:
    content: public static readonly Vector3 UnitY
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Shared ReadOnly UnitY As Vector3
- uid: OpenTK.Mathematics.Vector3.UnitZ
  commentId: F:OpenTK.Mathematics.Vector3.UnitZ
  id: UnitZ
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: UnitZ
  nameWithType: Vector3.UnitZ
  fullName: OpenTK.Mathematics.Vector3.UnitZ
  type: Field
  source:
    id: UnitZ
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 231
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines a unit-length Vector3 that points towards the Z-axis.
  example: []
  syntax:
    content: public static readonly Vector3 UnitZ
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Shared ReadOnly UnitZ As Vector3
- uid: OpenTK.Mathematics.Vector3.Zero
  commentId: F:OpenTK.Mathematics.Vector3.Zero
  id: Zero
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Vector3.Zero
  fullName: OpenTK.Mathematics.Vector3.Zero
  type: Field
  source:
    id: Zero
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 236
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to 0.
  example: []
  syntax:
    content: public static readonly Vector3 Zero
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Shared ReadOnly Zero As Vector3
- uid: OpenTK.Mathematics.Vector3.One
  commentId: F:OpenTK.Mathematics.Vector3.One
  id: One
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Vector3.One
  fullName: OpenTK.Mathematics.Vector3.One
  type: Field
  source:
    id: One
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 241
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to 1.
  example: []
  syntax:
    content: public static readonly Vector3 One
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Shared ReadOnly One As Vector3
- uid: OpenTK.Mathematics.Vector3.PositiveInfinity
  commentId: F:OpenTK.Mathematics.Vector3.PositiveInfinity
  id: PositiveInfinity
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: PositiveInfinity
  nameWithType: Vector3.PositiveInfinity
  fullName: OpenTK.Mathematics.Vector3.PositiveInfinity
  type: Field
  source:
    id: PositiveInfinity
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 246
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to positive infinity.
  example: []
  syntax:
    content: public static readonly Vector3 PositiveInfinity
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Shared ReadOnly PositiveInfinity As Vector3
- uid: OpenTK.Mathematics.Vector3.NegativeInfinity
  commentId: F:OpenTK.Mathematics.Vector3.NegativeInfinity
  id: NegativeInfinity
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: NegativeInfinity
  nameWithType: Vector3.NegativeInfinity
  fullName: OpenTK.Mathematics.Vector3.NegativeInfinity
  type: Field
  source:
    id: NegativeInfinity
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 251
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines an instance with all components set to negative infinity.
  example: []
  syntax:
    content: public static readonly Vector3 NegativeInfinity
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Shared ReadOnly NegativeInfinity As Vector3
- uid: OpenTK.Mathematics.Vector3.SizeInBytes
  commentId: F:OpenTK.Mathematics.Vector3.SizeInBytes
  id: SizeInBytes
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: SizeInBytes
  nameWithType: Vector3.SizeInBytes
  fullName: OpenTK.Mathematics.Vector3.SizeInBytes
  type: Field
  source:
    id: SizeInBytes
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 256
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Defines the size of the Vector3 struct in bytes.
  example: []
  syntax:
    content: public static readonly int SizeInBytes
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly SizeInBytes As Integer
- uid: OpenTK.Mathematics.Vector3.Add(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.Add(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: Add(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Add(Vector3, Vector3)
  nameWithType: Vector3.Add(Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.Add(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Add
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 264
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 Add(Vector3 a, Vector3 b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3
      description: Left operand.
    - id: b
      type: OpenTK.Mathematics.Vector3
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3
      description: Result of operation.
    content.vb: >-
      <Pure>

      Public Shared Function Add(a As Vector3, b As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.Add*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.Add(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.Add(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  id: Add(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Add(in Vector3, in Vector3, out Vector3)
  nameWithType: Vector3.Add(in Vector3, in Vector3, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.Add(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Add
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 277
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two vectors.
  example: []
  syntax:
    content: public static void Add(in Vector3 a, in Vector3 b, out Vector3 result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3
      description: Left operand.
    - id: b
      type: OpenTK.Mathematics.Vector3
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: Result of operation.
    content.vb: Public Shared Sub Add(a As Vector3, b As Vector3, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.Add*
  nameWithType.vb: Vector3.Add(Vector3, Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.Add(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: Add(Vector3, Vector3, Vector3)
- uid: OpenTK.Mathematics.Vector3.Subtract(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.Subtract(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: Subtract(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Subtract(Vector3, Vector3)
  nameWithType: Vector3.Subtract(Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.Subtract(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Subtract
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 290
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtract one Vector from another.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 Subtract(Vector3 a, Vector3 b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector3
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector3
      description: Result of subtraction.
    content.vb: >-
      <Pure>

      Public Shared Function Subtract(a As Vector3, b As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.Subtract*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.Subtract(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.Subtract(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  id: Subtract(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Subtract(in Vector3, in Vector3, out Vector3)
  nameWithType: Vector3.Subtract(in Vector3, in Vector3, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.Subtract(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Subtract
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 303
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtract one Vector from another.
  example: []
  syntax:
    content: public static void Subtract(in Vector3 a, in Vector3 b, out Vector3 result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector3
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: Result of subtraction.
    content.vb: Public Shared Sub Subtract(a As Vector3, b As Vector3, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.Subtract*
  nameWithType.vb: Vector3.Subtract(Vector3, Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.Subtract(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: Subtract(Vector3, Vector3, Vector3)
- uid: OpenTK.Mathematics.Vector3.Multiply(OpenTK.Mathematics.Vector3,System.Single)
  commentId: M:OpenTK.Mathematics.Vector3.Multiply(OpenTK.Mathematics.Vector3,System.Single)
  id: Multiply(OpenTK.Mathematics.Vector3,System.Single)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Multiply(Vector3, float)
  nameWithType: Vector3.Multiply(Vector3, float)
  fullName: OpenTK.Mathematics.Vector3.Multiply(OpenTK.Mathematics.Vector3, float)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 316
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 Multiply(Vector3 vector, float scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3
      description: Left operand.
    - id: scale
      type: System.Single
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Multiply(vector As Vector3, scale As Single) As Vector3
  overload: OpenTK.Mathematics.Vector3.Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.Multiply(Vector3, Single)
  fullName.vb: OpenTK.Mathematics.Vector3.Multiply(OpenTK.Mathematics.Vector3, Single)
  name.vb: Multiply(Vector3, Single)
- uid: OpenTK.Mathematics.Vector3.Multiply(OpenTK.Mathematics.Vector3@,System.Single,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.Multiply(OpenTK.Mathematics.Vector3@,System.Single,OpenTK.Mathematics.Vector3@)
  id: Multiply(OpenTK.Mathematics.Vector3@,System.Single,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Multiply(in Vector3, float, out Vector3)
  nameWithType: Vector3.Multiply(in Vector3, float, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.Multiply(in OpenTK.Mathematics.Vector3, float, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 329
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by a scalar.
  example: []
  syntax:
    content: public static void Multiply(in Vector3 vector, float scale, out Vector3 result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3
      description: Left operand.
    - id: scale
      type: System.Single
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: Result of the operation.
    content.vb: Public Shared Sub Multiply(vector As Vector3, scale As Single, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.Multiply*
  nameWithType.vb: Vector3.Multiply(Vector3, Single, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.Multiply(OpenTK.Mathematics.Vector3, Single, OpenTK.Mathematics.Vector3)
  name.vb: Multiply(Vector3, Single, Vector3)
- uid: OpenTK.Mathematics.Vector3.Multiply(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.Multiply(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: Multiply(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Multiply(Vector3, Vector3)
  nameWithType: Vector3.Multiply(Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.Multiply(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 342
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by the components a vector (scale).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 Multiply(Vector3 vector, Vector3 scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector3
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Multiply(vector As Vector3, scale As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.Multiply(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.Multiply(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  id: Multiply(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Multiply(in Vector3, in Vector3, out Vector3)
  nameWithType: Vector3.Multiply(in Vector3, in Vector3, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.Multiply(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 355
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies a vector by the components of a vector (scale).
  example: []
  syntax:
    content: public static void Multiply(in Vector3 vector, in Vector3 scale, out Vector3 result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector3
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: Result of the operation.
    content.vb: Public Shared Sub Multiply(vector As Vector3, scale As Vector3, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.Multiply*
  nameWithType.vb: Vector3.Multiply(Vector3, Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.Multiply(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: Multiply(Vector3, Vector3, Vector3)
- uid: OpenTK.Mathematics.Vector3.Divide(OpenTK.Mathematics.Vector3,System.Single)
  commentId: M:OpenTK.Mathematics.Vector3.Divide(OpenTK.Mathematics.Vector3,System.Single)
  id: Divide(OpenTK.Mathematics.Vector3,System.Single)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Divide(Vector3, float)
  nameWithType: Vector3.Divide(Vector3, float)
  fullName: OpenTK.Mathematics.Vector3.Divide(OpenTK.Mathematics.Vector3, float)
  type: Method
  source:
    id: Divide
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 368
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 Divide(Vector3 vector, float scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3
      description: Left operand.
    - id: scale
      type: System.Single
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Divide(vector As Vector3, scale As Single) As Vector3
  overload: OpenTK.Mathematics.Vector3.Divide*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.Divide(Vector3, Single)
  fullName.vb: OpenTK.Mathematics.Vector3.Divide(OpenTK.Mathematics.Vector3, Single)
  name.vb: Divide(Vector3, Single)
- uid: OpenTK.Mathematics.Vector3.Divide(OpenTK.Mathematics.Vector3@,System.Single,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.Divide(OpenTK.Mathematics.Vector3@,System.Single,OpenTK.Mathematics.Vector3@)
  id: Divide(OpenTK.Mathematics.Vector3@,System.Single,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Divide(in Vector3, float, out Vector3)
  nameWithType: Vector3.Divide(in Vector3, float, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.Divide(in OpenTK.Mathematics.Vector3, float, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Divide
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 381
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by a scalar.
  example: []
  syntax:
    content: public static void Divide(in Vector3 vector, float scale, out Vector3 result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3
      description: Left operand.
    - id: scale
      type: System.Single
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: Result of the operation.
    content.vb: Public Shared Sub Divide(vector As Vector3, scale As Single, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.Divide*
  nameWithType.vb: Vector3.Divide(Vector3, Single, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.Divide(OpenTK.Mathematics.Vector3, Single, OpenTK.Mathematics.Vector3)
  name.vb: Divide(Vector3, Single, Vector3)
- uid: OpenTK.Mathematics.Vector3.Divide(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.Divide(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: Divide(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Divide(Vector3, Vector3)
  nameWithType: Vector3.Divide(Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.Divide(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Divide
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 394
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides a vector by the components of a vector (scale).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 Divide(Vector3 vector, Vector3 scale)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector3
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3
      description: Result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Divide(vector As Vector3, scale As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.Divide*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.Divide(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.Divide(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  id: Divide(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Divide(in Vector3, in Vector3, out Vector3)
  nameWithType: Vector3.Divide(in Vector3, in Vector3, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.Divide(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Divide
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 407
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divide a vector by the components of a vector (scale).
  example: []
  syntax:
    content: public static void Divide(in Vector3 vector, in Vector3 scale, out Vector3 result)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector3
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: Result of the operation.
    content.vb: Public Shared Sub Divide(vector As Vector3, scale As Vector3, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.Divide*
  nameWithType.vb: Vector3.Divide(Vector3, Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.Divide(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: Divide(Vector3, Vector3, Vector3)
- uid: OpenTK.Mathematics.Vector3.ComponentMin(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.ComponentMin(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: ComponentMin(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: ComponentMin(Vector3, Vector3)
  nameWithType: Vector3.ComponentMin(Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.ComponentMin(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: ComponentMin
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 420
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the smallest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 ComponentMin(Vector3 a, Vector3 b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector3
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The component-wise minimum.
    content.vb: >-
      <Pure>

      Public Shared Function ComponentMin(a As Vector3, b As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.ComponentMin*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.ComponentMin(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.ComponentMin(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  id: ComponentMin(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: ComponentMin(in Vector3, in Vector3, out Vector3)
  nameWithType: Vector3.ComponentMin(in Vector3, in Vector3, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.ComponentMin(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: ComponentMin
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 435
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the smallest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: public static void ComponentMin(in Vector3 a, in Vector3 b, out Vector3 result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector3
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: The component-wise minimum.
    content.vb: Public Shared Sub ComponentMin(a As Vector3, b As Vector3, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.ComponentMin*
  nameWithType.vb: Vector3.ComponentMin(Vector3, Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.ComponentMin(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: ComponentMin(Vector3, Vector3, Vector3)
- uid: OpenTK.Mathematics.Vector3.ComponentMax(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.ComponentMax(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: ComponentMax(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: ComponentMax(Vector3, Vector3)
  nameWithType: Vector3.ComponentMax(Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.ComponentMax(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: ComponentMax
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 448
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the largest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 ComponentMax(Vector3 a, Vector3 b)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector3
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The component-wise maximum.
    content.vb: >-
      <Pure>

      Public Shared Function ComponentMax(a As Vector3, b As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.ComponentMax*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.ComponentMax(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.ComponentMax(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  id: ComponentMax(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: ComponentMax(in Vector3, in Vector3, out Vector3)
  nameWithType: Vector3.ComponentMax(in Vector3, in Vector3, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.ComponentMax(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: ComponentMax
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 463
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a vector created from the largest of the corresponding components of the given vectors.
  example: []
  syntax:
    content: public static void ComponentMax(in Vector3 a, in Vector3 b, out Vector3 result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3
      description: First operand.
    - id: b
      type: OpenTK.Mathematics.Vector3
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: The component-wise maximum.
    content.vb: Public Shared Sub ComponentMax(a As Vector3, b As Vector3, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.ComponentMax*
  nameWithType.vb: Vector3.ComponentMax(Vector3, Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.ComponentMax(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: ComponentMax(Vector3, Vector3, Vector3)
- uid: OpenTK.Mathematics.Vector3.MagnitudeMin(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.MagnitudeMin(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: MagnitudeMin(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: MagnitudeMin(Vector3, Vector3)
  nameWithType: Vector3.MagnitudeMin(Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.MagnitudeMin(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: MagnitudeMin
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 477
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Returns the Vector3 with the minimum magnitude. If the magnitudes are equal, the second vector

    is selected.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 MagnitudeMin(Vector3 left, Vector3 right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector3
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The minimum Vector3.
    content.vb: >-
      <Pure>

      Public Shared Function MagnitudeMin(left As Vector3, right As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.MagnitudeMin*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.MagnitudeMin(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.MagnitudeMin(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  id: MagnitudeMin(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: MagnitudeMin(in Vector3, in Vector3, out Vector3)
  nameWithType: Vector3.MagnitudeMin(in Vector3, in Vector3, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.MagnitudeMin(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: MagnitudeMin
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 490
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Returns the Vector3 with the minimum magnitude. If the magnitudes are equal, the second vector

    is selected.
  example: []
  syntax:
    content: public static void MagnitudeMin(in Vector3 left, in Vector3 right, out Vector3 result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector3
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: The magnitude-wise minimum.
    content.vb: Public Shared Sub MagnitudeMin(left As Vector3, right As Vector3, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.MagnitudeMin*
  nameWithType.vb: Vector3.MagnitudeMin(Vector3, Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.MagnitudeMin(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: MagnitudeMin(Vector3, Vector3, Vector3)
- uid: OpenTK.Mathematics.Vector3.MagnitudeMax(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.MagnitudeMax(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: MagnitudeMax(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: MagnitudeMax(Vector3, Vector3)
  nameWithType: Vector3.MagnitudeMax(Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.MagnitudeMax(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: MagnitudeMax
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 502
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Returns the Vector3 with the maximum magnitude. If the magnitudes are equal, the first vector

    is selected.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 MagnitudeMax(Vector3 left, Vector3 right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector3
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The maximum Vector3.
    content.vb: >-
      <Pure>

      Public Shared Function MagnitudeMax(left As Vector3, right As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.MagnitudeMax*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.MagnitudeMax(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.MagnitudeMax(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  id: MagnitudeMax(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: MagnitudeMax(in Vector3, in Vector3, out Vector3)
  nameWithType: Vector3.MagnitudeMax(in Vector3, in Vector3, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.MagnitudeMax(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: MagnitudeMax
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 515
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Returns the Vector3 with the maximum magnitude. If the magnitudes are equal, the first vector

    is selected.
  example: []
  syntax:
    content: public static void MagnitudeMax(in Vector3 left, in Vector3 right, out Vector3 result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3
      description: Left operand.
    - id: right
      type: OpenTK.Mathematics.Vector3
      description: Right operand.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: The magnitude-wise maximum.
    content.vb: Public Shared Sub MagnitudeMax(left As Vector3, right As Vector3, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.MagnitudeMax*
  nameWithType.vb: Vector3.MagnitudeMax(Vector3, Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.MagnitudeMax(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: MagnitudeMax(Vector3, Vector3, Vector3)
- uid: OpenTK.Mathematics.Vector3.Clamp(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.Clamp(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: Clamp(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Clamp(Vector3, Vector3, Vector3)
  nameWithType: Vector3.Clamp(Vector3, Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.Clamp(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Clamp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 527
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Clamp a vector to the given minimum and maximum vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 Clamp(Vector3 vec, Vector3 min, Vector3 max)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: Input vector.
    - id: min
      type: OpenTK.Mathematics.Vector3
      description: Minimum vector.
    - id: max
      type: OpenTK.Mathematics.Vector3
      description: Maximum vector.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The clamped vector.
    content.vb: >-
      <Pure>

      Public Shared Function Clamp(vec As Vector3, min As Vector3, max As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.Clamp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.Clamp(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.Clamp(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  id: Clamp(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Clamp(in Vector3, in Vector3, in Vector3, out Vector3)
  nameWithType: Vector3.Clamp(in Vector3, in Vector3, in Vector3, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.Clamp(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Clamp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 543
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Clamp a vector to the given minimum and maximum vectors.
  example: []
  syntax:
    content: public static void Clamp(in Vector3 vec, in Vector3 min, in Vector3 max, out Vector3 result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: Input vector.
    - id: min
      type: OpenTK.Mathematics.Vector3
      description: Minimum vector.
    - id: max
      type: OpenTK.Mathematics.Vector3
      description: Maximum vector.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: The clamped vector.
    content.vb: Public Shared Sub Clamp(vec As Vector3, min As Vector3, max As Vector3, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.Clamp*
  nameWithType.vb: Vector3.Clamp(Vector3, Vector3, Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.Clamp(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: Clamp(Vector3, Vector3, Vector3, Vector3)
- uid: OpenTK.Mathematics.Vector3.Abs(OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.Abs(OpenTK.Mathematics.Vector3)
  id: Abs(OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Abs(Vector3)
  nameWithType: Vector3.Abs(Vector3)
  fullName: OpenTK.Mathematics.Vector3.Abs(OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Abs
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 555
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Take the component-wise absolute value of a vector.
  example: []
  syntax:
    content: public static Vector3 Abs(Vector3 vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The vector to apply component-wise absolute value to.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The component-wise absolute value vector.
    content.vb: Public Shared Function Abs(vec As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.Abs*
- uid: OpenTK.Mathematics.Vector3.Abs(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.Abs(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  id: Abs(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Abs(in Vector3, out Vector3)
  nameWithType: Vector3.Abs(in Vector3, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.Abs(in OpenTK.Mathematics.Vector3, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Abs
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 568
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Take the component-wise absolute value of a vector.
  example: []
  syntax:
    content: public static void Abs(in Vector3 vec, out Vector3 result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The vector to apply component-wise absolute value to.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: The component-wise absolute value vector.
    content.vb: Public Shared Sub Abs(vec As Vector3, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.Abs*
  nameWithType.vb: Vector3.Abs(Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.Abs(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: Abs(Vector3, Vector3)
- uid: OpenTK.Mathematics.Vector3.Distance(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.Distance(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: Distance(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Distance(Vector3, Vector3)
  nameWithType: Vector3.Distance(Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.Distance(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Distance
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 581
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compute the euclidean distance between two vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static float Distance(Vector3 vec1, Vector3 vec2)
    parameters:
    - id: vec1
      type: OpenTK.Mathematics.Vector3
      description: The first vector.
    - id: vec2
      type: OpenTK.Mathematics.Vector3
      description: The second vector.
    return:
      type: System.Single
      description: The distance.
    content.vb: >-
      <Pure>

      Public Shared Function Distance(vec1 As Vector3, vec2 As Vector3) As Single
  overload: OpenTK.Mathematics.Vector3.Distance*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.Distance(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single@)
  commentId: M:OpenTK.Mathematics.Vector3.Distance(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single@)
  id: Distance(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Distance(in Vector3, in Vector3, out float)
  nameWithType: Vector3.Distance(in Vector3, in Vector3, out float)
  fullName: OpenTK.Mathematics.Vector3.Distance(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, out float)
  type: Method
  source:
    id: Distance
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 594
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compute the euclidean distance between two vectors.
  example: []
  syntax:
    content: public static void Distance(in Vector3 vec1, in Vector3 vec2, out float result)
    parameters:
    - id: vec1
      type: OpenTK.Mathematics.Vector3
      description: The first vector.
    - id: vec2
      type: OpenTK.Mathematics.Vector3
      description: The second vector.
    - id: result
      type: System.Single
      description: The distance.
    content.vb: Public Shared Sub Distance(vec1 As Vector3, vec2 As Vector3, result As Single)
  overload: OpenTK.Mathematics.Vector3.Distance*
  nameWithType.vb: Vector3.Distance(Vector3, Vector3, Single)
  fullName.vb: OpenTK.Mathematics.Vector3.Distance(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, Single)
  name.vb: Distance(Vector3, Vector3, Single)
- uid: OpenTK.Mathematics.Vector3.DistanceSquared(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.DistanceSquared(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: DistanceSquared(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: DistanceSquared(Vector3, Vector3)
  nameWithType: Vector3.DistanceSquared(Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.DistanceSquared(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: DistanceSquared
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 606
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compute the squared euclidean distance between two vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static float DistanceSquared(Vector3 vec1, Vector3 vec2)
    parameters:
    - id: vec1
      type: OpenTK.Mathematics.Vector3
      description: The first vector.
    - id: vec2
      type: OpenTK.Mathematics.Vector3
      description: The second vector.
    return:
      type: System.Single
      description: The squared distance.
    content.vb: >-
      <Pure>

      Public Shared Function DistanceSquared(vec1 As Vector3, vec2 As Vector3) As Single
  overload: OpenTK.Mathematics.Vector3.DistanceSquared*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.DistanceSquared(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single@)
  commentId: M:OpenTK.Mathematics.Vector3.DistanceSquared(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single@)
  id: DistanceSquared(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: DistanceSquared(in Vector3, in Vector3, out float)
  nameWithType: Vector3.DistanceSquared(in Vector3, in Vector3, out float)
  fullName: OpenTK.Mathematics.Vector3.DistanceSquared(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, out float)
  type: Method
  source:
    id: DistanceSquared
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 619
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compute the squared euclidean distance between two vectors.
  example: []
  syntax:
    content: public static void DistanceSquared(in Vector3 vec1, in Vector3 vec2, out float result)
    parameters:
    - id: vec1
      type: OpenTK.Mathematics.Vector3
      description: The first vector.
    - id: vec2
      type: OpenTK.Mathematics.Vector3
      description: The second vector.
    - id: result
      type: System.Single
      description: The squared distance.
    content.vb: Public Shared Sub DistanceSquared(vec1 As Vector3, vec2 As Vector3, result As Single)
  overload: OpenTK.Mathematics.Vector3.DistanceSquared*
  nameWithType.vb: Vector3.DistanceSquared(Vector3, Vector3, Single)
  fullName.vb: OpenTK.Mathematics.Vector3.DistanceSquared(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, Single)
  name.vb: DistanceSquared(Vector3, Vector3, Single)
- uid: OpenTK.Mathematics.Vector3.Normalize(OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.Normalize(OpenTK.Mathematics.Vector3)
  id: Normalize(OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Normalize(Vector3)
  nameWithType: Vector3.Normalize(Vector3)
  fullName: OpenTK.Mathematics.Vector3.Normalize(OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Normalize
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 630
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scale a vector to unit length.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 Normalize(Vector3 vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The input vector.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The normalized copy.
    content.vb: >-
      <Pure>

      Public Shared Function Normalize(vec As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.Normalize*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.Normalize(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.Normalize(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  id: Normalize(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Normalize(in Vector3, out Vector3)
  nameWithType: Vector3.Normalize(in Vector3, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.Normalize(in OpenTK.Mathematics.Vector3, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Normalize
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 645
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scale a vector to unit length.
  example: []
  syntax:
    content: public static void Normalize(in Vector3 vec, out Vector3 result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The input vector.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: The normalized vector.
    content.vb: Public Shared Sub Normalize(vec As Vector3, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.Normalize*
  nameWithType.vb: Vector3.Normalize(Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.Normalize(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: Normalize(Vector3, Vector3)
- uid: OpenTK.Mathematics.Vector3.NormalizeFast(OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.NormalizeFast(OpenTK.Mathematics.Vector3)
  id: NormalizeFast(OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: NormalizeFast(Vector3)
  nameWithType: Vector3.NormalizeFast(Vector3)
  fullName: OpenTK.Mathematics.Vector3.NormalizeFast(OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: NormalizeFast
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 658
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scale a vector to approximately unit length.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 NormalizeFast(Vector3 vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The input vector.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The normalized copy.
    content.vb: >-
      <Pure>

      Public Shared Function NormalizeFast(vec As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.NormalizeFast*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.NormalizeFast(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.NormalizeFast(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  id: NormalizeFast(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: NormalizeFast(in Vector3, out Vector3)
  nameWithType: Vector3.NormalizeFast(in Vector3, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.NormalizeFast(in OpenTK.Mathematics.Vector3, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: NormalizeFast
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 673
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scale a vector to approximately unit length.
  example: []
  syntax:
    content: public static void NormalizeFast(in Vector3 vec, out Vector3 result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The input vector.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: The normalized vector.
    content.vb: Public Shared Sub NormalizeFast(vec As Vector3, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.NormalizeFast*
  nameWithType.vb: Vector3.NormalizeFast(Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.NormalizeFast(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: NormalizeFast(Vector3, Vector3)
- uid: OpenTK.Mathematics.Vector3.Dot(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.Dot(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: Dot(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Dot(Vector3, Vector3)
  nameWithType: Vector3.Dot(Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.Dot(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Dot
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 687
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculate the dot (scalar) product of two vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static float Dot(Vector3 left, Vector3 right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3
      description: First operand.
    - id: right
      type: OpenTK.Mathematics.Vector3
      description: Second operand.
    return:
      type: System.Single
      description: The dot product of the two inputs.
    content.vb: >-
      <Pure>

      Public Shared Function Dot(left As Vector3, right As Vector3) As Single
  overload: OpenTK.Mathematics.Vector3.Dot*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.Dot(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single@)
  commentId: M:OpenTK.Mathematics.Vector3.Dot(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single@)
  id: Dot(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Dot(in Vector3, in Vector3, out float)
  nameWithType: Vector3.Dot(in Vector3, in Vector3, out float)
  fullName: OpenTK.Mathematics.Vector3.Dot(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, out float)
  type: Method
  source:
    id: Dot
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 699
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculate the dot (scalar) product of two vectors.
  example: []
  syntax:
    content: public static void Dot(in Vector3 left, in Vector3 right, out float result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3
      description: First operand.
    - id: right
      type: OpenTK.Mathematics.Vector3
      description: Second operand.
    - id: result
      type: System.Single
      description: The dot product of the two inputs.
    content.vb: Public Shared Sub Dot(left As Vector3, right As Vector3, result As Single)
  overload: OpenTK.Mathematics.Vector3.Dot*
  nameWithType.vb: Vector3.Dot(Vector3, Vector3, Single)
  fullName.vb: OpenTK.Mathematics.Vector3.Dot(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, Single)
  name.vb: Dot(Vector3, Vector3, Single)
- uid: OpenTK.Mathematics.Vector3.Cross(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.Cross(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: Cross(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Cross(Vector3, Vector3)
  nameWithType: Vector3.Cross(Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.Cross(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Cross
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 710
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Caclulate the cross (vector) product of two vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 Cross(Vector3 left, Vector3 right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3
      description: First operand.
    - id: right
      type: OpenTK.Mathematics.Vector3
      description: Second operand.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The cross product of the two inputs.
    content.vb: >-
      <Pure>

      Public Shared Function Cross(left As Vector3, right As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.Cross*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.Cross(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.Cross(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  id: Cross(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Cross(in Vector3, in Vector3, out Vector3)
  nameWithType: Vector3.Cross(in Vector3, in Vector3, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.Cross(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Cross
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 723
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Caclulate the cross (vector) product of two vectors.
  example: []
  syntax:
    content: public static void Cross(in Vector3 left, in Vector3 right, out Vector3 result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3
      description: First operand.
    - id: right
      type: OpenTK.Mathematics.Vector3
      description: Second operand.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: The cross product of the two inputs.
    content.vb: Public Shared Sub Cross(left As Vector3, right As Vector3, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.Cross*
  nameWithType.vb: Vector3.Cross(Vector3, Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.Cross(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: Cross(Vector3, Vector3, Vector3)
- uid: OpenTK.Mathematics.Vector3.Lerp(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single)
  commentId: M:OpenTK.Mathematics.Vector3.Lerp(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single)
  id: Lerp(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Lerp(Vector3, Vector3, float)
  nameWithType: Vector3.Lerp(Vector3, Vector3, float)
  fullName: OpenTK.Mathematics.Vector3.Lerp(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, float)
  type: Method
  source:
    id: Lerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 737
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the linear blend of the 2 given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 Lerp(Vector3 a, Vector3 b, float blend)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3
      description: First input vector.
    - id: b
      type: OpenTK.Mathematics.Vector3
      description: Second input vector.
    - id: blend
      type: System.Single
      description: The blend factor.
    return:
      type: OpenTK.Mathematics.Vector3
      description: a when blend=0, b when blend=1, and a linear combination otherwise.
    content.vb: >-
      <Pure>

      Public Shared Function Lerp(a As Vector3, b As Vector3, blend As Single) As Vector3
  overload: OpenTK.Mathematics.Vector3.Lerp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.Lerp(Vector3, Vector3, Single)
  fullName.vb: OpenTK.Mathematics.Vector3.Lerp(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, Single)
  name.vb: Lerp(Vector3, Vector3, Single)
- uid: OpenTK.Mathematics.Vector3.Lerp(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.Lerp(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single,OpenTK.Mathematics.Vector3@)
  id: Lerp(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Lerp(in Vector3, in Vector3, float, out Vector3)
  nameWithType: Vector3.Lerp(in Vector3, in Vector3, float, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.Lerp(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, float, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Lerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 753
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the linear blend of the 2 given vectors.
  example: []
  syntax:
    content: public static void Lerp(in Vector3 a, in Vector3 b, float blend, out Vector3 result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3
      description: First input vector.
    - id: b
      type: OpenTK.Mathematics.Vector3
      description: Second input vector.
    - id: blend
      type: System.Single
      description: The blend factor.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: a when blend=0, b when blend=1, and a linear combination otherwise.
    content.vb: Public Shared Sub Lerp(a As Vector3, b As Vector3, blend As Single, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.Lerp*
  nameWithType.vb: Vector3.Lerp(Vector3, Vector3, Single, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.Lerp(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, Single, OpenTK.Mathematics.Vector3)
  name.vb: Lerp(Vector3, Vector3, Single, Vector3)
- uid: OpenTK.Mathematics.Vector3.Lerp(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.Lerp(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: Lerp(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Lerp(Vector3, Vector3, Vector3)
  nameWithType: Vector3.Lerp(Vector3, Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.Lerp(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Lerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 767
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the component-wise linear blend of the 2 given vectors.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 Lerp(Vector3 a, Vector3 b, Vector3 blend)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3
      description: First input vector.
    - id: b
      type: OpenTK.Mathematics.Vector3
      description: Second input vector.
    - id: blend
      type: OpenTK.Mathematics.Vector3
      description: The blend factor.
    return:
      type: OpenTK.Mathematics.Vector3
      description: a when blend=0, b when blend=1, and a component-wise linear combination otherwise.
    content.vb: >-
      <Pure>

      Public Shared Function Lerp(a As Vector3, b As Vector3, blend As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.Lerp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.Lerp(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.Lerp(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3@)
  id: Lerp(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Lerp(in Vector3, in Vector3, Vector3, out Vector3)
  nameWithType: Vector3.Lerp(in Vector3, in Vector3, Vector3, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.Lerp(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Lerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 783
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a new vector that is the component-wise linear blend of the 2 given vectors.
  example: []
  syntax:
    content: public static void Lerp(in Vector3 a, in Vector3 b, Vector3 blend, out Vector3 result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3
      description: First input vector.
    - id: b
      type: OpenTK.Mathematics.Vector3
      description: Second input vector.
    - id: blend
      type: OpenTK.Mathematics.Vector3
      description: The blend factor.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: a when blend=0, b when blend=1, and a component-wise linear combination otherwise.
    content.vb: Public Shared Sub Lerp(a As Vector3, b As Vector3, blend As Vector3, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.Lerp*
  nameWithType.vb: Vector3.Lerp(Vector3, Vector3, Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.Lerp(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: Lerp(Vector3, Vector3, Vector3, Vector3)
- uid: OpenTK.Mathematics.Vector3.Slerp(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single)
  commentId: M:OpenTK.Mathematics.Vector3.Slerp(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single)
  id: Slerp(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Slerp(Vector3, Vector3, float)
  nameWithType: Vector3.Slerp(Vector3, Vector3, float)
  fullName: OpenTK.Mathematics.Vector3.Slerp(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, float)
  type: Method
  source:
    id: Slerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 798
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Returns a new vector that is the spherical interpolation of the two given vectors.

    <code class="paramref">a</code> and <code class="paramref">b</code> need to be normalized for this function to work properly.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 Slerp(Vector3 a, Vector3 b, float t)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3
      description: Unit vector start point.
    - id: b
      type: OpenTK.Mathematics.Vector3
      description: Unit vector end point.
    - id: t
      type: System.Single
      description: The blend factor.
    return:
      type: OpenTK.Mathematics.Vector3
      description: <code class="paramref">a</code> when <code class="paramref">t</code>=0, <code class="paramref">b</code> when <code class="paramref">t</code>=1, and a spherical interpolation between the vectors otherwise.
    content.vb: >-
      <Pure>

      Public Shared Function Slerp(a As Vector3, b As Vector3, t As Single) As Vector3
  overload: OpenTK.Mathematics.Vector3.Slerp*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.Slerp(Vector3, Vector3, Single)
  fullName.vb: OpenTK.Mathematics.Vector3.Slerp(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, Single)
  name.vb: Slerp(Vector3, Vector3, Single)
- uid: OpenTK.Mathematics.Vector3.Slerp(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.Slerp(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single,OpenTK.Mathematics.Vector3@)
  id: Slerp(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Slerp(in Vector3, in Vector3, float, out Vector3)
  nameWithType: Vector3.Slerp(in Vector3, in Vector3, float, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.Slerp(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, float, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Slerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 828
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Returns a new vector that is the spherical interpolation of the two given vectors.

    <code class="paramref">a</code> and <code class="paramref">b</code> need to be normalized for this function to work properly.
  example: []
  syntax:
    content: public static void Slerp(in Vector3 a, in Vector3 b, float t, out Vector3 result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3
      description: Unit vector start point.
    - id: b
      type: OpenTK.Mathematics.Vector3
      description: Unit vector end point.
    - id: t
      type: System.Single
      description: The blend factor.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: Is <code class="paramref">a</code> when <code class="paramref">t</code>=0, <code class="paramref">b</code> when <code class="paramref">t</code>=1, and a spherical interpolation between the vectors otherwise.
    content.vb: Public Shared Sub Slerp(a As Vector3, b As Vector3, t As Single, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.Slerp*
  nameWithType.vb: Vector3.Slerp(Vector3, Vector3, Single, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.Slerp(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, Single, OpenTK.Mathematics.Vector3)
  name.vb: Slerp(Vector3, Vector3, Single, Vector3)
- uid: OpenTK.Mathematics.Vector3.Elerp(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single)
  commentId: M:OpenTK.Mathematics.Vector3.Elerp(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single)
  id: Elerp(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Elerp(Vector3, Vector3, float)
  nameWithType: Vector3.Elerp(Vector3, Vector3, float)
  fullName: OpenTK.Mathematics.Vector3.Elerp(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, float)
  type: Method
  source:
    id: Elerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 866
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Returns a new vector that is the exponential interpolation of the two vectors.

    Equivalent to <code>a * pow(b/a, t)</code>.
  example: []
  syntax:
    content: public static Vector3 Elerp(Vector3 a, Vector3 b, float t)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3
      description: The starting value. Must be non-negative.
    - id: b
      type: OpenTK.Mathematics.Vector3
      description: The end value. Must be non-negative.
    - id: t
      type: System.Single
      description: The blend factor.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The exponential interpolation between <code class="paramref">a</code> and <code class="paramref">b</code>.
    content.vb: Public Shared Function Elerp(a As Vector3, b As Vector3, t As Single) As Vector3
  overload: OpenTK.Mathematics.Vector3.Elerp*
  seealso:
  - linkId: OpenTK.Mathematics.MathHelper.Elerp(System.Single,System.Single,System.Single)
    commentId: M:OpenTK.Mathematics.MathHelper.Elerp(System.Single,System.Single,System.Single)
  nameWithType.vb: Vector3.Elerp(Vector3, Vector3, Single)
  fullName.vb: OpenTK.Mathematics.Vector3.Elerp(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, Single)
  name.vb: Elerp(Vector3, Vector3, Single)
- uid: OpenTK.Mathematics.Vector3.Elerp(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.Elerp(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single,OpenTK.Mathematics.Vector3@)
  id: Elerp(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Elerp(in Vector3, in Vector3, float, out Vector3)
  nameWithType: Vector3.Elerp(in Vector3, in Vector3, float, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.Elerp(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, float, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Elerp
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 884
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Returns a new vector that is the exponential interpolation of the two vectors.

    Equivalent to <code>a * pow(b/a, t)</code>.
  example: []
  syntax:
    content: public static void Elerp(in Vector3 a, in Vector3 b, float t, out Vector3 result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3
      description: The starting value. Must be non-negative.
    - id: b
      type: OpenTK.Mathematics.Vector3
      description: The end value. Must be non-negative.
    - id: t
      type: System.Single
      description: The blend factor.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: The exponential interpolation between <code class="paramref">a</code> and <code class="paramref">b</code>.
    content.vb: Public Shared Sub Elerp(a As Vector3, b As Vector3, t As Single, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.Elerp*
  seealso:
  - linkId: OpenTK.Mathematics.MathHelper.Elerp(System.Single,System.Single,System.Single)
    commentId: M:OpenTK.Mathematics.MathHelper.Elerp(System.Single,System.Single,System.Single)
  nameWithType.vb: Vector3.Elerp(Vector3, Vector3, Single, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.Elerp(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, Single, OpenTK.Mathematics.Vector3)
  name.vb: Elerp(Vector3, Vector3, Single, Vector3)
- uid: OpenTK.Mathematics.Vector3.BaryCentric(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single,System.Single)
  commentId: M:OpenTK.Mathematics.Vector3.BaryCentric(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single,System.Single)
  id: BaryCentric(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3,System.Single,System.Single)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: BaryCentric(Vector3, Vector3, Vector3, float, float)
  nameWithType: Vector3.BaryCentric(Vector3, Vector3, Vector3, float, float)
  fullName: OpenTK.Mathematics.Vector3.BaryCentric(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, float, float)
  type: Method
  source:
    id: BaryCentric
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 900
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Interpolate 3 Vectors using Barycentric coordinates.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 BaryCentric(Vector3 a, Vector3 b, Vector3 c, float u, float v)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3
      description: First input Vector.
    - id: b
      type: OpenTK.Mathematics.Vector3
      description: Second input Vector.
    - id: c
      type: OpenTK.Mathematics.Vector3
      description: Third input Vector.
    - id: u
      type: System.Single
      description: First Barycentric Coordinate.
    - id: v
      type: System.Single
      description: Second Barycentric Coordinate.
    return:
      type: OpenTK.Mathematics.Vector3
      description: a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise.
    content.vb: >-
      <Pure>

      Public Shared Function BaryCentric(a As Vector3, b As Vector3, c As Vector3, u As Single, v As Single) As Vector3
  overload: OpenTK.Mathematics.Vector3.BaryCentric*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.BaryCentric(Vector3, Vector3, Vector3, Single, Single)
  fullName.vb: OpenTK.Mathematics.Vector3.BaryCentric(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, Single, Single)
  name.vb: BaryCentric(Vector3, Vector3, Vector3, Single, Single)
- uid: OpenTK.Mathematics.Vector3.BaryCentric(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single,System.Single,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.BaryCentric(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single,System.Single,OpenTK.Mathematics.Vector3@)
  id: BaryCentric(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single,System.Single,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: BaryCentric(in Vector3, in Vector3, in Vector3, float, float, out Vector3)
  nameWithType: Vector3.BaryCentric(in Vector3, in Vector3, in Vector3, float, float, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.BaryCentric(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, float, float, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: BaryCentric
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 919
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Interpolate 3 Vectors using Barycentric coordinates.
  example: []
  syntax:
    content: >-
      [Pure]

      public static void BaryCentric(in Vector3 a, in Vector3 b, in Vector3 c, float u, float v, out Vector3 result)
    parameters:
    - id: a
      type: OpenTK.Mathematics.Vector3
      description: First input Vector.
    - id: b
      type: OpenTK.Mathematics.Vector3
      description: Second input Vector.
    - id: c
      type: OpenTK.Mathematics.Vector3
      description: Third input Vector.
    - id: u
      type: System.Single
      description: First Barycentric Coordinate.
    - id: v
      type: System.Single
      description: Second Barycentric Coordinate.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: >-
        Output Vector. a when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c

        otherwise.
    content.vb: >-
      <Pure>

      Public Shared Sub BaryCentric(a As Vector3, b As Vector3, c As Vector3, u As Single, v As Single, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.BaryCentric*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.BaryCentric(Vector3, Vector3, Vector3, Single, Single, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.BaryCentric(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, Single, Single, OpenTK.Mathematics.Vector3)
  name.vb: BaryCentric(Vector3, Vector3, Vector3, Single, Single, Vector3)
- uid: OpenTK.Mathematics.Vector3.TransformVector(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix4)
  commentId: M:OpenTK.Mathematics.Vector3.TransformVector(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix4)
  id: TransformVector(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix4)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: TransformVector(Vector3, Matrix4)
  nameWithType: Vector3.TransformVector(Vector3, Matrix4)
  fullName: OpenTK.Mathematics.Vector3.TransformVector(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Matrix4)
  type: Method
  source:
    id: TransformVector
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 946
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Transform a direction vector by the given Matrix.

    Assumes the matrix has a bottom row of (0,0,0,1), that is the translation part is ignored.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 TransformVector(Vector3 vec, Matrix4 mat)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The vector to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4
      description: The desired transformation.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Function TransformVector(vec As Vector3, mat As Matrix4) As Vector3
  overload: OpenTK.Mathematics.Vector3.TransformVector*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.TransformVector(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.TransformVector(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector3@)
  id: TransformVector(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: TransformVector(in Vector3, in Matrix4, out Vector3)
  nameWithType: Vector3.TransformVector(in Vector3, in Matrix4, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.TransformVector(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Matrix4, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: TransformVector
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 960
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Transform a direction vector by the given Matrix.

    Assumes the matrix has a bottom row of (0,0,0,1), that is the translation part is ignored.
  example: []
  syntax:
    content: public static void TransformVector(in Vector3 vec, in Matrix4 mat, out Vector3 result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The vector to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4
      description: The desired transformation.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: The transformed vector.
    content.vb: Public Shared Sub TransformVector(vec As Vector3, mat As Matrix4, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.TransformVector*
  nameWithType.vb: Vector3.TransformVector(Vector3, Matrix4, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.TransformVector(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Matrix4, OpenTK.Mathematics.Vector3)
  name.vb: TransformVector(Vector3, Matrix4, Vector3)
- uid: OpenTK.Mathematics.Vector3.TransformNormal(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix4)
  commentId: M:OpenTK.Mathematics.Vector3.TransformNormal(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix4)
  id: TransformNormal(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix4)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: TransformNormal(Vector3, Matrix4)
  nameWithType: Vector3.TransformNormal(Vector3, Matrix4)
  fullName: OpenTK.Mathematics.Vector3.TransformNormal(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Matrix4)
  type: Method
  source:
    id: TransformNormal
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 985
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Normal by the given Matrix.
  remarks: >-
    This calculates the inverse of the given matrix, use TransformNormalInverse if you

    already have the inverse to avoid this extra calculation.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 TransformNormal(Vector3 norm, Matrix4 mat)
    parameters:
    - id: norm
      type: OpenTK.Mathematics.Vector3
      description: The normal to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4
      description: The desired transformation.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The transformed normal.
    content.vb: >-
      <Pure>

      Public Shared Function TransformNormal(norm As Vector3, mat As Matrix4) As Vector3
  overload: OpenTK.Mathematics.Vector3.TransformNormal*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.TransformNormal(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.TransformNormal(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector3@)
  id: TransformNormal(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: TransformNormal(in Vector3, in Matrix4, out Vector3)
  nameWithType: Vector3.TransformNormal(in Vector3, in Matrix4, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.TransformNormal(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Matrix4, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: TransformNormal
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1002
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Normal by the given Matrix.
  remarks: >-
    This calculates the inverse of the given matrix, use TransformNormalInverse if you

    already have the inverse to avoid this extra calculation.
  example: []
  syntax:
    content: public static void TransformNormal(in Vector3 norm, in Matrix4 mat, out Vector3 result)
    parameters:
    - id: norm
      type: OpenTK.Mathematics.Vector3
      description: The normal to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4
      description: The desired transformation.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: The transformed normal.
    content.vb: Public Shared Sub TransformNormal(norm As Vector3, mat As Matrix4, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.TransformNormal*
  nameWithType.vb: Vector3.TransformNormal(Vector3, Matrix4, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.TransformNormal(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Matrix4, OpenTK.Mathematics.Vector3)
  name.vb: TransformNormal(Vector3, Matrix4, Vector3)
- uid: OpenTK.Mathematics.Vector3.TransformNormalInverse(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix4)
  commentId: M:OpenTK.Mathematics.Vector3.TransformNormalInverse(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix4)
  id: TransformNormalInverse(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix4)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: TransformNormalInverse(Vector3, Matrix4)
  nameWithType: Vector3.TransformNormalInverse(Vector3, Matrix4)
  fullName: OpenTK.Mathematics.Vector3.TransformNormalInverse(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Matrix4)
  type: Method
  source:
    id: TransformNormalInverse
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1018
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Normal by the (transpose of the) given Matrix.
  remarks: >-
    This version doesn't calculate the inverse matrix.

    Use this version if you already have the inverse of the desired transform to hand.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 TransformNormalInverse(Vector3 norm, Matrix4 invMat)
    parameters:
    - id: norm
      type: OpenTK.Mathematics.Vector3
      description: The normal to transform.
    - id: invMat
      type: OpenTK.Mathematics.Matrix4
      description: The inverse of the desired transformation.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The transformed normal.
    content.vb: >-
      <Pure>

      Public Shared Function TransformNormalInverse(norm As Vector3, invMat As Matrix4) As Vector3
  overload: OpenTK.Mathematics.Vector3.TransformNormalInverse*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.TransformNormalInverse(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.TransformNormalInverse(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector3@)
  id: TransformNormalInverse(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: TransformNormalInverse(in Vector3, in Matrix4, out Vector3)
  nameWithType: Vector3.TransformNormalInverse(in Vector3, in Matrix4, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.TransformNormalInverse(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Matrix4, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: TransformNormalInverse
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1035
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Normal by the (transpose of the) given Matrix.
  remarks: >-
    This version doesn't calculate the inverse matrix.

    Use this version if you already have the inverse of the desired transform to hand.
  example: []
  syntax:
    content: public static void TransformNormalInverse(in Vector3 norm, in Matrix4 invMat, out Vector3 result)
    parameters:
    - id: norm
      type: OpenTK.Mathematics.Vector3
      description: The normal to transform.
    - id: invMat
      type: OpenTK.Mathematics.Matrix4
      description: The inverse of the desired transformation.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: The transformed normal.
    content.vb: Public Shared Sub TransformNormalInverse(norm As Vector3, invMat As Matrix4, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.TransformNormalInverse*
  nameWithType.vb: Vector3.TransformNormalInverse(Vector3, Matrix4, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.TransformNormalInverse(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Matrix4, OpenTK.Mathematics.Vector3)
  name.vb: TransformNormalInverse(Vector3, Matrix4, Vector3)
- uid: OpenTK.Mathematics.Vector3.TransformPosition(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix4)
  commentId: M:OpenTK.Mathematics.Vector3.TransformPosition(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix4)
  id: TransformPosition(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix4)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: TransformPosition(Vector3, Matrix4)
  nameWithType: Vector3.TransformPosition(Vector3, Matrix4)
  fullName: OpenTK.Mathematics.Vector3.TransformPosition(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Matrix4)
  type: Method
  source:
    id: TransformPosition
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1056
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Position by the given Matrix.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 TransformPosition(Vector3 pos, Matrix4 mat)
    parameters:
    - id: pos
      type: OpenTK.Mathematics.Vector3
      description: The position to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4
      description: The desired transformation.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The transformed position.
    content.vb: >-
      <Pure>

      Public Shared Function TransformPosition(pos As Vector3, mat As Matrix4) As Vector3
  overload: OpenTK.Mathematics.Vector3.TransformPosition*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.TransformPosition(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.TransformPosition(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector3@)
  id: TransformPosition(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: TransformPosition(in Vector3, in Matrix4, out Vector3)
  nameWithType: Vector3.TransformPosition(in Vector3, in Matrix4, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.TransformPosition(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Matrix4, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: TransformPosition
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1069
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Position by the given Matrix.
  example: []
  syntax:
    content: public static void TransformPosition(in Vector3 pos, in Matrix4 mat, out Vector3 result)
    parameters:
    - id: pos
      type: OpenTK.Mathematics.Vector3
      description: The position to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4
      description: The desired transformation.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: The transformed position.
    content.vb: Public Shared Sub TransformPosition(pos As Vector3, mat As Matrix4, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.TransformPosition*
  nameWithType.vb: Vector3.TransformPosition(Vector3, Matrix4, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.TransformPosition(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Matrix4, OpenTK.Mathematics.Vector3)
  name.vb: TransformPosition(Vector3, Matrix4, Vector3)
- uid: OpenTK.Mathematics.Vector3.TransformRow(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix3)
  commentId: M:OpenTK.Mathematics.Vector3.TransformRow(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix3)
  id: TransformRow(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: TransformRow(Vector3, Matrix3)
  nameWithType: Vector3.TransformRow(Vector3, Matrix3)
  fullName: OpenTK.Mathematics.Vector3.TransformRow(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Matrix3)
  type: Method
  source:
    id: TransformRow
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1093
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 TransformRow(Vector3 vec, Matrix3 mat)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The vector to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix3
      description: The desired transformation.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Function TransformRow(vec As Vector3, mat As Matrix3) As Vector3
  overload: OpenTK.Mathematics.Vector3.TransformRow*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.TransformRow(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix3@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.TransformRow(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix3@,OpenTK.Mathematics.Vector3@)
  id: TransformRow(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix3@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: TransformRow(in Vector3, in Matrix3, out Vector3)
  nameWithType: Vector3.TransformRow(in Vector3, in Matrix3, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.TransformRow(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Matrix3, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: TransformRow
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1106
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix.
  example: []
  syntax:
    content: public static void TransformRow(in Vector3 vec, in Matrix3 mat, out Vector3 result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The vector to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix3
      description: The desired transformation.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: The transformed vector.
    content.vb: Public Shared Sub TransformRow(vec As Vector3, mat As Matrix3, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.TransformRow*
  nameWithType.vb: Vector3.TransformRow(Vector3, Matrix3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.TransformRow(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Matrix3, OpenTK.Mathematics.Vector3)
  name.vb: TransformRow(Vector3, Matrix3, Vector3)
- uid: OpenTK.Mathematics.Vector3.Transform(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Quaternion)
  commentId: M:OpenTK.Mathematics.Vector3.Transform(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Quaternion)
  id: Transform(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Quaternion)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Transform(Vector3, Quaternion)
  nameWithType: Vector3.Transform(Vector3, Quaternion)
  fullName: OpenTK.Mathematics.Vector3.Transform(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Quaternion)
  type: Method
  source:
    id: Transform
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1119
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transforms a vector by a quaternion rotation.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 Transform(Vector3 vec, Quaternion quat)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The vector to transform.
    - id: quat
      type: OpenTK.Mathematics.Quaternion
      description: The quaternion to rotate the vector by.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The result of the operation.
    content.vb: >-
      <Pure>

      Public Shared Function Transform(vec As Vector3, quat As Quaternion) As Vector3
  overload: OpenTK.Mathematics.Vector3.Transform*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.Transform(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.Transform(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Vector3@)
  id: Transform(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Quaternion@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Transform(in Vector3, in Quaternion, out Vector3)
  nameWithType: Vector3.Transform(in Vector3, in Quaternion, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.Transform(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Quaternion, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Transform
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1132
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transforms a vector by a quaternion rotation.
  example: []
  syntax:
    content: public static void Transform(in Vector3 vec, in Quaternion quat, out Vector3 result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The vector to transform.
    - id: quat
      type: OpenTK.Mathematics.Quaternion
      description: The quaternion to rotate the vector by.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: The result of the operation.
    content.vb: Public Shared Sub Transform(vec As Vector3, quat As Quaternion, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.Transform*
  nameWithType.vb: Vector3.Transform(Vector3, Quaternion, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.Transform(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Vector3)
  name.vb: Transform(Vector3, Quaternion, Vector3)
- uid: OpenTK.Mathematics.Vector3.TransformColumn(OpenTK.Mathematics.Matrix3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.TransformColumn(OpenTK.Mathematics.Matrix3,OpenTK.Mathematics.Vector3)
  id: TransformColumn(OpenTK.Mathematics.Matrix3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: TransformColumn(Matrix3, Vector3)
  nameWithType: Vector3.TransformColumn(Matrix3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.TransformColumn(OpenTK.Mathematics.Matrix3, OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: TransformColumn
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1151
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix using right-handed notation.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 TransformColumn(Matrix3 mat, Vector3 vec)
    parameters:
    - id: mat
      type: OpenTK.Mathematics.Matrix3
      description: The desired transformation.
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The vector to transform.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Function TransformColumn(mat As Matrix3, vec As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.TransformColumn*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.TransformColumn(OpenTK.Mathematics.Matrix3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.TransformColumn(OpenTK.Mathematics.Matrix3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  id: TransformColumn(OpenTK.Mathematics.Matrix3@,OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: TransformColumn(in Matrix3, in Vector3, out Vector3)
  nameWithType: Vector3.TransformColumn(in Matrix3, in Vector3, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.TransformColumn(in OpenTK.Mathematics.Matrix3, in OpenTK.Mathematics.Vector3, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: TransformColumn
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1164
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix using right-handed notation.
  example: []
  syntax:
    content: public static void TransformColumn(in Matrix3 mat, in Vector3 vec, out Vector3 result)
    parameters:
    - id: mat
      type: OpenTK.Mathematics.Matrix3
      description: The desired transformation.
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The vector to transform.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: The transformed vector.
    content.vb: Public Shared Sub TransformColumn(mat As Matrix3, vec As Vector3, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.TransformColumn*
  nameWithType.vb: Vector3.TransformColumn(Matrix3, Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.TransformColumn(OpenTK.Mathematics.Matrix3, OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: TransformColumn(Matrix3, Vector3, Vector3)
- uid: OpenTK.Mathematics.Vector3.TransformPerspective(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix4)
  commentId: M:OpenTK.Mathematics.Vector3.TransformPerspective(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix4)
  id: TransformPerspective(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix4)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: TransformPerspective(Vector3, Matrix4)
  nameWithType: Vector3.TransformPerspective(Vector3, Matrix4)
  fullName: OpenTK.Mathematics.Vector3.TransformPerspective(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Matrix4)
  type: Method
  source:
    id: TransformPerspective
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1177
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector3 by the given Matrix, and project the resulting Vector4 back to a Vector3.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 TransformPerspective(Vector3 vec, Matrix4 mat)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The vector to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4
      description: The desired transformation.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Function TransformPerspective(vec As Vector3, mat As Matrix4) As Vector3
  overload: OpenTK.Mathematics.Vector3.TransformPerspective*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.TransformPerspective(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector3@)
  commentId: M:OpenTK.Mathematics.Vector3.TransformPerspective(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector3@)
  id: TransformPerspective(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Matrix4@,OpenTK.Mathematics.Vector3@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: TransformPerspective(in Vector3, in Matrix4, out Vector3)
  nameWithType: Vector3.TransformPerspective(in Vector3, in Matrix4, out Vector3)
  fullName: OpenTK.Mathematics.Vector3.TransformPerspective(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Matrix4, out OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: TransformPerspective
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1190
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector3 by the given Matrix, and project the resulting Vector4 back to a Vector3.
  example: []
  syntax:
    content: public static void TransformPerspective(in Vector3 vec, in Matrix4 mat, out Vector3 result)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The vector to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix4
      description: The desired transformation.
    - id: result
      type: OpenTK.Mathematics.Vector3
      description: The transformed vector.
    content.vb: Public Shared Sub TransformPerspective(vec As Vector3, mat As Matrix4, result As Vector3)
  overload: OpenTK.Mathematics.Vector3.TransformPerspective*
  nameWithType.vb: Vector3.TransformPerspective(Vector3, Matrix4, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.TransformPerspective(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Matrix4, OpenTK.Mathematics.Vector3)
  name.vb: TransformPerspective(Vector3, Matrix4, Vector3)
- uid: OpenTK.Mathematics.Vector3.CalculateAngle(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.CalculateAngle(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: CalculateAngle(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: CalculateAngle(Vector3, Vector3)
  nameWithType: Vector3.CalculateAngle(Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.CalculateAngle(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: CalculateAngle
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1206
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculates the angle (in radians) between two vectors.
  remarks: Note that the returned angle is never bigger than the constant Pi.
  example: []
  syntax:
    content: >-
      [Pure]

      public static float CalculateAngle(Vector3 first, Vector3 second)
    parameters:
    - id: first
      type: OpenTK.Mathematics.Vector3
      description: The first vector.
    - id: second
      type: OpenTK.Mathematics.Vector3
      description: The second vector.
    return:
      type: System.Single
      description: Angle (in radians) between the vectors.
    content.vb: >-
      <Pure>

      Public Shared Function CalculateAngle(first As Vector3, second As Vector3) As Single
  overload: OpenTK.Mathematics.Vector3.CalculateAngle*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Vector3.CalculateAngle(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single@)
  commentId: M:OpenTK.Mathematics.Vector3.CalculateAngle(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single@)
  id: CalculateAngle(OpenTK.Mathematics.Vector3@,OpenTK.Mathematics.Vector3@,System.Single@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: CalculateAngle(in Vector3, in Vector3, out float)
  nameWithType: Vector3.CalculateAngle(in Vector3, in Vector3, out float)
  fullName: OpenTK.Mathematics.Vector3.CalculateAngle(in OpenTK.Mathematics.Vector3, in OpenTK.Mathematics.Vector3, out float)
  type: Method
  source:
    id: CalculateAngle
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1220
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculates the angle (in radians) between two vectors.
  remarks: Note that the returned angle is never bigger than the constant Pi.
  example: []
  syntax:
    content: public static void CalculateAngle(in Vector3 first, in Vector3 second, out float result)
    parameters:
    - id: first
      type: OpenTK.Mathematics.Vector3
      description: The first vector.
    - id: second
      type: OpenTK.Mathematics.Vector3
      description: The second vector.
    - id: result
      type: System.Single
      description: Angle (in radians) between the vectors.
    content.vb: Public Shared Sub CalculateAngle(first As Vector3, second As Vector3, result As Single)
  overload: OpenTK.Mathematics.Vector3.CalculateAngle*
  nameWithType.vb: Vector3.CalculateAngle(Vector3, Vector3, Single)
  fullName.vb: OpenTK.Mathematics.Vector3.CalculateAngle(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3, Single)
  name.vb: CalculateAngle(Vector3, Vector3, Single)
- uid: OpenTK.Mathematics.Vector3.Project(OpenTK.Mathematics.Vector3,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,OpenTK.Mathematics.Matrix4)
  commentId: M:OpenTK.Mathematics.Vector3.Project(OpenTK.Mathematics.Vector3,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,OpenTK.Mathematics.Matrix4)
  id: Project(OpenTK.Mathematics.Vector3,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,OpenTK.Mathematics.Matrix4)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Project(Vector3, float, float, float, float, float, float, Matrix4)
  nameWithType: Vector3.Project(Vector3, float, float, float, float, float, float, Matrix4)
  fullName: OpenTK.Mathematics.Vector3.Project(OpenTK.Mathematics.Vector3, float, float, float, float, float, float, OpenTK.Mathematics.Matrix4)
  type: Method
  source:
    id: Project
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1242
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Projects a vector from object space into screen space.
  remarks: >-
    To project to normalized device coordinates (NDC) use the following parameters:

    Project(vector, -1, -1, 2, 2, -1, 1, worldViewProjection).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 Project(Vector3 vector, float x, float y, float width, float height, float minZ, float maxZ, Matrix4 worldViewProjection)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3
      description: The vector to project.
    - id: x
      type: System.Single
      description: The X coordinate of the viewport.
    - id: y
      type: System.Single
      description: The Y coordinate of the viewport.
    - id: width
      type: System.Single
      description: The width of the viewport.
    - id: height
      type: System.Single
      description: The height of the viewport.
    - id: minZ
      type: System.Single
      description: The minimum depth of the viewport.
    - id: maxZ
      type: System.Single
      description: The maximum depth of the viewport.
    - id: worldViewProjection
      type: OpenTK.Mathematics.Matrix4
      description: The world-view-projection matrix.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The vector in screen space.
    content.vb: >-
      <Pure>

      Public Shared Function Project(vector As Vector3, x As Single, y As Single, width As Single, height As Single, minZ As Single, maxZ As Single, worldViewProjection As Matrix4) As Vector3
  overload: OpenTK.Mathematics.Vector3.Project*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.Project(Vector3, Single, Single, Single, Single, Single, Single, Matrix4)
  fullName.vb: OpenTK.Mathematics.Vector3.Project(OpenTK.Mathematics.Vector3, Single, Single, Single, Single, Single, Single, OpenTK.Mathematics.Matrix4)
  name.vb: Project(Vector3, Single, Single, Single, Single, Single, Single, Matrix4)
- uid: OpenTK.Mathematics.Vector3.Unproject(OpenTK.Mathematics.Vector3,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,OpenTK.Mathematics.Matrix4)
  commentId: M:OpenTK.Mathematics.Vector3.Unproject(OpenTK.Mathematics.Vector3,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,OpenTK.Mathematics.Matrix4)
  id: Unproject(OpenTK.Mathematics.Vector3,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,OpenTK.Mathematics.Matrix4)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Unproject(Vector3, float, float, float, float, float, float, Matrix4)
  nameWithType: Vector3.Unproject(Vector3, float, float, float, float, float, float, Matrix4)
  fullName: OpenTK.Mathematics.Vector3.Unproject(OpenTK.Mathematics.Vector3, float, float, float, float, float, float, OpenTK.Mathematics.Matrix4)
  type: Method
  source:
    id: Unproject
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1306
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Projects a vector from screen space into object space.
  remarks: >-
    To project from normalized device coordinates (NDC) use the following parameters:

    Project(vector, -1, -1, 2, 2, -1, 1, inverseWorldViewProjection).
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 Unproject(Vector3 vector, float x, float y, float width, float height, float minZ, float maxZ, Matrix4 inverseWorldViewProjection)
    parameters:
    - id: vector
      type: OpenTK.Mathematics.Vector3
      description: The vector to project.
    - id: x
      type: System.Single
      description: The X coordinate of the viewport.
    - id: y
      type: System.Single
      description: The Y coordinate of the viewport.
    - id: width
      type: System.Single
      description: The width of the viewport.
    - id: height
      type: System.Single
      description: The height of the viewport.
    - id: minZ
      type: System.Single
      description: The minimum depth of the viewport.
    - id: maxZ
      type: System.Single
      description: The maximum depth of the viewport.
    - id: inverseWorldViewProjection
      type: OpenTK.Mathematics.Matrix4
      description: The inverse of the world-view-projection matrix.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The vector in object space.
    content.vb: >-
      <Pure>

      Public Shared Function Unproject(vector As Vector3, x As Single, y As Single, width As Single, height As Single, minZ As Single, maxZ As Single, inverseWorldViewProjection As Matrix4) As Vector3
  overload: OpenTK.Mathematics.Vector3.Unproject*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.Unproject(Vector3, Single, Single, Single, Single, Single, Single, Matrix4)
  fullName.vb: OpenTK.Mathematics.Vector3.Unproject(OpenTK.Mathematics.Vector3, Single, Single, Single, Single, Single, Single, OpenTK.Mathematics.Matrix4)
  name.vb: Unproject(Vector3, Single, Single, Single, Single, Single, Single, Matrix4)
- uid: OpenTK.Mathematics.Vector3.Xy
  commentId: P:OpenTK.Mathematics.Vector3.Xy
  id: Xy
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Xy
  nameWithType: Vector3.Xy
  fullName: OpenTK.Mathematics.Vector3.Xy
  type: Property
  source:
    id: Xy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1356
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2 with the X and Y components of this instance.
  example: []
  syntax:
    content: public Vector2 Xy { get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2
    content.vb: Public Property Xy As Vector2
  overload: OpenTK.Mathematics.Vector3.Xy*
- uid: OpenTK.Mathematics.Vector3.Xz
  commentId: P:OpenTK.Mathematics.Vector3.Xz
  id: Xz
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Xz
  nameWithType: Vector3.Xz
  fullName: OpenTK.Mathematics.Vector3.Xz
  type: Property
  source:
    id: Xz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1370
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2 with the X and Z components of this instance.
  example: []
  syntax:
    content: public Vector2 Xz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2
    content.vb: Public Property Xz As Vector2
  overload: OpenTK.Mathematics.Vector3.Xz*
- uid: OpenTK.Mathematics.Vector3.Yx
  commentId: P:OpenTK.Mathematics.Vector3.Yx
  id: Yx
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Yx
  nameWithType: Vector3.Yx
  fullName: OpenTK.Mathematics.Vector3.Yx
  type: Property
  source:
    id: Yx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1384
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2 with the Y and X components of this instance.
  example: []
  syntax:
    content: public Vector2 Yx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2
    content.vb: Public Property Yx As Vector2
  overload: OpenTK.Mathematics.Vector3.Yx*
- uid: OpenTK.Mathematics.Vector3.Yz
  commentId: P:OpenTK.Mathematics.Vector3.Yz
  id: Yz
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Yz
  nameWithType: Vector3.Yz
  fullName: OpenTK.Mathematics.Vector3.Yz
  type: Property
  source:
    id: Yz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1398
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2 with the Y and Z components of this instance.
  example: []
  syntax:
    content: public Vector2 Yz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2
    content.vb: Public Property Yz As Vector2
  overload: OpenTK.Mathematics.Vector3.Yz*
- uid: OpenTK.Mathematics.Vector3.Zx
  commentId: P:OpenTK.Mathematics.Vector3.Zx
  id: Zx
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Zx
  nameWithType: Vector3.Zx
  fullName: OpenTK.Mathematics.Vector3.Zx
  type: Property
  source:
    id: Zx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1412
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2 with the Z and X components of this instance.
  example: []
  syntax:
    content: public Vector2 Zx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2
    content.vb: Public Property Zx As Vector2
  overload: OpenTK.Mathematics.Vector3.Zx*
- uid: OpenTK.Mathematics.Vector3.Zy
  commentId: P:OpenTK.Mathematics.Vector3.Zy
  id: Zy
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Zy
  nameWithType: Vector3.Zy
  fullName: OpenTK.Mathematics.Vector3.Zy
  type: Property
  source:
    id: Zy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1426
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector2 with the Z and Y components of this instance.
  example: []
  syntax:
    content: public Vector2 Zy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2
    content.vb: Public Property Zy As Vector2
  overload: OpenTK.Mathematics.Vector3.Zy*
- uid: OpenTK.Mathematics.Vector3.Xzy
  commentId: P:OpenTK.Mathematics.Vector3.Xzy
  id: Xzy
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Xzy
  nameWithType: Vector3.Xzy
  fullName: OpenTK.Mathematics.Vector3.Xzy
  type: Property
  source:
    id: Xzy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1440
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the X, Z, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3 Xzy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Xzy As Vector3
  overload: OpenTK.Mathematics.Vector3.Xzy*
- uid: OpenTK.Mathematics.Vector3.Yxz
  commentId: P:OpenTK.Mathematics.Vector3.Yxz
  id: Yxz
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Yxz
  nameWithType: Vector3.Yxz
  fullName: OpenTK.Mathematics.Vector3.Yxz
  type: Property
  source:
    id: Yxz
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1455
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the Y, X, and Z components of this instance.
  example: []
  syntax:
    content: public Vector3 Yxz { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Yxz As Vector3
  overload: OpenTK.Mathematics.Vector3.Yxz*
- uid: OpenTK.Mathematics.Vector3.Yzx
  commentId: P:OpenTK.Mathematics.Vector3.Yzx
  id: Yzx
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Yzx
  nameWithType: Vector3.Yzx
  fullName: OpenTK.Mathematics.Vector3.Yzx
  type: Property
  source:
    id: Yzx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1470
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the Y, Z, and X components of this instance.
  example: []
  syntax:
    content: public Vector3 Yzx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Yzx As Vector3
  overload: OpenTK.Mathematics.Vector3.Yzx*
- uid: OpenTK.Mathematics.Vector3.Zxy
  commentId: P:OpenTK.Mathematics.Vector3.Zxy
  id: Zxy
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Zxy
  nameWithType: Vector3.Zxy
  fullName: OpenTK.Mathematics.Vector3.Zxy
  type: Property
  source:
    id: Zxy
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1485
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the Z, X, and Y components of this instance.
  example: []
  syntax:
    content: public Vector3 Zxy { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Zxy As Vector3
  overload: OpenTK.Mathematics.Vector3.Zxy*
- uid: OpenTK.Mathematics.Vector3.Zyx
  commentId: P:OpenTK.Mathematics.Vector3.Zyx
  id: Zyx
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Zyx
  nameWithType: Vector3.Zyx
  fullName: OpenTK.Mathematics.Vector3.Zyx
  type: Property
  source:
    id: Zyx
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1500
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets an OpenTK.Vector3 with the Z, Y, and X components of this instance.
  example: []
  syntax:
    content: public Vector3 Zyx { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3
    content.vb: Public Property Zyx As Vector3
  overload: OpenTK.Mathematics.Vector3.Zyx*
- uid: OpenTK.Mathematics.Vector3.op_Addition(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.op_Addition(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: op_Addition(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: operator +(Vector3, Vector3)
  nameWithType: Vector3.operator +(Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.operator +(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Operator
  source:
    id: op_Addition
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1518
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 operator +(Vector3 left, Vector3 right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector3
      description: The second instance.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator +(left As Vector3, right As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.op_Addition*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.+(Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.+(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: +(Vector3, Vector3)
- uid: OpenTK.Mathematics.Vector3.op_Subtraction(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.op_Subtraction(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: op_Subtraction(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: operator -(Vector3, Vector3)
  nameWithType: Vector3.operator -(Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.operator -(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Operator
  source:
    id: op_Subtraction
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1533
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtracts two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 operator -(Vector3 left, Vector3 right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector3
      description: The second instance.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator -(left As Vector3, right As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.op_Subtraction*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.-(Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.-(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: -(Vector3, Vector3)
- uid: OpenTK.Mathematics.Vector3.op_UnaryNegation(OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.op_UnaryNegation(OpenTK.Mathematics.Vector3)
  id: op_UnaryNegation(OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: operator -(Vector3)
  nameWithType: Vector3.operator -(Vector3)
  fullName: OpenTK.Mathematics.Vector3.operator -(OpenTK.Mathematics.Vector3)
  type: Operator
  source:
    id: op_UnaryNegation
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1547
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Negates an instance.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 operator -(Vector3 vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The instance.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator -(vec As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.op_UnaryNegation*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.-(Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.-(OpenTK.Mathematics.Vector3)
  name.vb: -(Vector3)
- uid: OpenTK.Mathematics.Vector3.op_Multiply(OpenTK.Mathematics.Vector3,System.Single)
  commentId: M:OpenTK.Mathematics.Vector3.op_Multiply(OpenTK.Mathematics.Vector3,System.Single)
  id: op_Multiply(OpenTK.Mathematics.Vector3,System.Single)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: operator *(Vector3, float)
  nameWithType: Vector3.operator *(Vector3, float)
  fullName: OpenTK.Mathematics.Vector3.operator *(OpenTK.Mathematics.Vector3, float)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1562
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies an instance by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 operator *(Vector3 vec, float scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The instance.
    - id: scale
      type: System.Single
      description: The scalar.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator *(vec As Vector3, scale As Single) As Vector3
  overload: OpenTK.Mathematics.Vector3.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.*(Vector3, Single)
  fullName.vb: OpenTK.Mathematics.Vector3.*(OpenTK.Mathematics.Vector3, Single)
  name.vb: '*(Vector3, Single)'
- uid: OpenTK.Mathematics.Vector3.op_Multiply(System.Single,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.op_Multiply(System.Single,OpenTK.Mathematics.Vector3)
  id: op_Multiply(System.Single,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: operator *(float, Vector3)
  nameWithType: Vector3.operator *(float, Vector3)
  fullName: OpenTK.Mathematics.Vector3.operator *(float, OpenTK.Mathematics.Vector3)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1577
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies an instance by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 operator *(float scale, Vector3 vec)
    parameters:
    - id: scale
      type: System.Single
      description: The scalar.
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The instance.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator *(scale As Single, vec As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.*(Single, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.*(Single, OpenTK.Mathematics.Vector3)
  name.vb: '*(Single, Vector3)'
- uid: OpenTK.Mathematics.Vector3.op_Multiply(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.op_Multiply(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: op_Multiply(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: operator *(Vector3, Vector3)
  nameWithType: Vector3.operator *(Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.operator *(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1592
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Component-wise multiplication between the specified instance by a scale vector.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 operator *(Vector3 vec, Vector3 scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: Right operand.
    - id: scale
      type: OpenTK.Mathematics.Vector3
      description: Left operand.
    return:
      type: OpenTK.Mathematics.Vector3
      description: Result of multiplication.
    content.vb: >-
      <Pure>

      Public Shared Operator *(vec As Vector3, scale As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.*(Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.*(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: '*(Vector3, Vector3)'
- uid: OpenTK.Mathematics.Vector3.op_Multiply(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix3)
  commentId: M:OpenTK.Mathematics.Vector3.op_Multiply(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix3)
  id: op_Multiply(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Matrix3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: operator *(Vector3, Matrix3)
  nameWithType: Vector3.operator *(Vector3, Matrix3)
  fullName: OpenTK.Mathematics.Vector3.operator *(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Matrix3)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1607
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 operator *(Vector3 vec, Matrix3 mat)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The vector to transform.
    - id: mat
      type: OpenTK.Mathematics.Matrix3
      description: The desired transformation.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Operator *(vec As Vector3, mat As Matrix3) As Vector3
  overload: OpenTK.Mathematics.Vector3.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.*(Vector3, Matrix3)
  fullName.vb: OpenTK.Mathematics.Vector3.*(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Matrix3)
  name.vb: '*(Vector3, Matrix3)'
- uid: OpenTK.Mathematics.Vector3.op_Multiply(OpenTK.Mathematics.Matrix3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.op_Multiply(OpenTK.Mathematics.Matrix3,OpenTK.Mathematics.Vector3)
  id: op_Multiply(OpenTK.Mathematics.Matrix3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: operator *(Matrix3, Vector3)
  nameWithType: Vector3.operator *(Matrix3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.operator *(OpenTK.Mathematics.Matrix3, OpenTK.Mathematics.Vector3)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1620
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transform a Vector by the given Matrix using right-handed notation.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 operator *(Matrix3 mat, Vector3 vec)
    parameters:
    - id: mat
      type: OpenTK.Mathematics.Matrix3
      description: The desired transformation.
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The vector to transform.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The transformed vector.
    content.vb: >-
      <Pure>

      Public Shared Operator *(mat As Matrix3, vec As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.*(Matrix3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.*(OpenTK.Mathematics.Matrix3, OpenTK.Mathematics.Vector3)
  name.vb: '*(Matrix3, Vector3)'
- uid: OpenTK.Mathematics.Vector3.op_Multiply(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.op_Multiply(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Vector3)
  id: op_Multiply(OpenTK.Mathematics.Quaternion,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: operator *(Quaternion, Vector3)
  nameWithType: Vector3.operator *(Quaternion, Vector3)
  fullName: OpenTK.Mathematics.Vector3.operator *(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Vector3)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1633
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Transforms a vector by a quaternion rotation.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 operator *(Quaternion quat, Vector3 vec)
    parameters:
    - id: quat
      type: OpenTK.Mathematics.Quaternion
      description: The quaternion to rotate the vector by.
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The vector to transform.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The multiplied vector.
    content.vb: >-
      <Pure>

      Public Shared Operator *(quat As Quaternion, vec As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.*(Quaternion, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.*(OpenTK.Mathematics.Quaternion, OpenTK.Mathematics.Vector3)
  name.vb: '*(Quaternion, Vector3)'
- uid: OpenTK.Mathematics.Vector3.op_Division(OpenTK.Mathematics.Vector3,System.Single)
  commentId: M:OpenTK.Mathematics.Vector3.op_Division(OpenTK.Mathematics.Vector3,System.Single)
  id: op_Division(OpenTK.Mathematics.Vector3,System.Single)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: operator /(Vector3, float)
  nameWithType: Vector3.operator /(Vector3, float)
  fullName: OpenTK.Mathematics.Vector3.operator /(OpenTK.Mathematics.Vector3, float)
  type: Operator
  source:
    id: op_Division
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1646
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Divides an instance by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 operator /(Vector3 vec, float scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The instance.
    - id: scale
      type: System.Single
      description: The scalar.
    return:
      type: OpenTK.Mathematics.Vector3
      description: The result of the calculation.
    content.vb: >-
      <Pure>

      Public Shared Operator /(vec As Vector3, scale As Single) As Vector3
  overload: OpenTK.Mathematics.Vector3.op_Division*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3./(Vector3, Single)
  fullName.vb: OpenTK.Mathematics.Vector3./(OpenTK.Mathematics.Vector3, Single)
  name.vb: /(Vector3, Single)
- uid: OpenTK.Mathematics.Vector3.op_Division(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.op_Division(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: op_Division(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: operator /(Vector3, Vector3)
  nameWithType: Vector3.operator /(Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.operator /(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Operator
  source:
    id: op_Division
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1661
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Component-wise division between the specified instance by a scale vector.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Vector3 operator /(Vector3 vec, Vector3 scale)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: Left operand.
    - id: scale
      type: OpenTK.Mathematics.Vector3
      description: Right operand.
    return:
      type: OpenTK.Mathematics.Vector3
      description: Result of the division.
    content.vb: >-
      <Pure>

      Public Shared Operator /(vec As Vector3, scale As Vector3) As Vector3
  overload: OpenTK.Mathematics.Vector3.op_Division*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3./(Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3./(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: /(Vector3, Vector3)
- uid: OpenTK.Mathematics.Vector3.op_Equality(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.op_Equality(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: op_Equality(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: operator ==(Vector3, Vector3)
  nameWithType: Vector3.operator ==(Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.operator ==(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Operator
  source:
    id: op_Equality
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1676
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compares two instances for equality.
  example: []
  syntax:
    content: public static bool operator ==(Vector3 left, Vector3 right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector3
      description: The second instance.
    return:
      type: System.Boolean
      description: True, if left equals right; false otherwise.
    content.vb: Public Shared Operator =(left As Vector3, right As Vector3) As Boolean
  overload: OpenTK.Mathematics.Vector3.op_Equality*
  nameWithType.vb: Vector3.=(Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.=(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: =(Vector3, Vector3)
- uid: OpenTK.Mathematics.Vector3.op_Inequality(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.op_Inequality(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  id: op_Inequality(OpenTK.Mathematics.Vector3,OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: operator !=(Vector3, Vector3)
  nameWithType: Vector3.operator !=(Vector3, Vector3)
  fullName: OpenTK.Mathematics.Vector3.operator !=(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  type: Operator
  source:
    id: op_Inequality
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1687
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compares two instances for inequality.
  example: []
  syntax:
    content: public static bool operator !=(Vector3 left, Vector3 right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Vector3
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Vector3
      description: The second instance.
    return:
      type: System.Boolean
      description: True, if left does not equal right; false otherwise.
    content.vb: Public Shared Operator <>(left As Vector3, right As Vector3) As Boolean
  overload: OpenTK.Mathematics.Vector3.op_Inequality*
  nameWithType.vb: Vector3.<>(Vector3, Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.<>(OpenTK.Mathematics.Vector3, OpenTK.Mathematics.Vector3)
  name.vb: <>(Vector3, Vector3)
- uid: OpenTK.Mathematics.Vector3.op_Implicit(OpenTK.Mathematics.Vector3)~OpenTK.Mathematics.Vector3d
  commentId: M:OpenTK.Mathematics.Vector3.op_Implicit(OpenTK.Mathematics.Vector3)~OpenTK.Mathematics.Vector3d
  id: op_Implicit(OpenTK.Mathematics.Vector3)~OpenTK.Mathematics.Vector3d
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: implicit operator Vector3d(Vector3)
  nameWithType: Vector3.implicit operator Vector3d(Vector3)
  fullName: OpenTK.Mathematics.Vector3.implicit operator OpenTK.Mathematics.Vector3d(OpenTK.Mathematics.Vector3)
  type: Operator
  source:
    id: op_Implicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1697
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector3 to OpenTK.Vector3d.
  example: []
  syntax:
    content: >-
      [Pure]

      public static implicit operator Vector3d(Vector3 vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The Vector3 to convert.
    return:
      type: OpenTK.Mathematics.Vector3d
      description: The resulting Vector3d.
    content.vb: >-
      <Pure>

      Public Shared Widening Operator CType(vec As Vector3) As Vector3d
  overload: OpenTK.Mathematics.Vector3.op_Implicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.CType(Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.CType(OpenTK.Mathematics.Vector3)
  name.vb: CType(Vector3)
- uid: OpenTK.Mathematics.Vector3.op_Explicit(OpenTK.Mathematics.Vector3)~OpenTK.Mathematics.Vector3h
  commentId: M:OpenTK.Mathematics.Vector3.op_Explicit(OpenTK.Mathematics.Vector3)~OpenTK.Mathematics.Vector3h
  id: op_Explicit(OpenTK.Mathematics.Vector3)~OpenTK.Mathematics.Vector3h
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: explicit operator Vector3h(Vector3)
  nameWithType: Vector3.explicit operator Vector3h(Vector3)
  fullName: OpenTK.Mathematics.Vector3.explicit operator OpenTK.Mathematics.Vector3h(OpenTK.Mathematics.Vector3)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1708
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector3 to OpenTK.Vector3h.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator Vector3h(Vector3 vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The Vector3 to convert.
    return:
      type: OpenTK.Mathematics.Vector3h
      description: The resulting Vector3h.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(vec As Vector3) As Vector3h
  overload: OpenTK.Mathematics.Vector3.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.CType(Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.CType(OpenTK.Mathematics.Vector3)
  name.vb: CType(Vector3)
- uid: OpenTK.Mathematics.Vector3.op_Explicit(OpenTK.Mathematics.Vector3)~OpenTK.Mathematics.Vector3i
  commentId: M:OpenTK.Mathematics.Vector3.op_Explicit(OpenTK.Mathematics.Vector3)~OpenTK.Mathematics.Vector3i
  id: op_Explicit(OpenTK.Mathematics.Vector3)~OpenTK.Mathematics.Vector3i
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: explicit operator Vector3i(Vector3)
  nameWithType: Vector3.explicit operator Vector3i(Vector3)
  fullName: OpenTK.Mathematics.Vector3.explicit operator OpenTK.Mathematics.Vector3i(OpenTK.Mathematics.Vector3)
  type: Operator
  source:
    id: op_Explicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1719
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Converts OpenTK.Vector3 to OpenTK.Vector3i.
  example: []
  syntax:
    content: >-
      [Pure]

      public static explicit operator Vector3i(Vector3 vec)
    parameters:
    - id: vec
      type: OpenTK.Mathematics.Vector3
      description: The Vector3 to convert.
    return:
      type: OpenTK.Mathematics.Vector3i
      description: The resulting Vector3i.
    content.vb: >-
      <Pure>

      Public Shared Narrowing Operator CType(vec As Vector3) As Vector3i
  overload: OpenTK.Mathematics.Vector3.op_Explicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.CType(Vector3)
  fullName.vb: OpenTK.Mathematics.Vector3.CType(OpenTK.Mathematics.Vector3)
  name.vb: CType(Vector3)
- uid: OpenTK.Mathematics.Vector3.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single})~OpenTK.Mathematics.Vector3
  commentId: M:OpenTK.Mathematics.Vector3.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single})~OpenTK.Mathematics.Vector3
  id: op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single})~OpenTK.Mathematics.Vector3
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: implicit operator Vector3((float X, float Y, float Z))
  nameWithType: Vector3.implicit operator Vector3((float X, float Y, float Z))
  fullName: OpenTK.Mathematics.Vector3.implicit operator OpenTK.Mathematics.Vector3((float X, float Y, float Z))
  type: Operator
  source:
    id: op_Implicit
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1731
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: >-
    Initializes a new instance of the <xref href="OpenTK.Mathematics.Vector3" data-throw-if-not-resolved="false"></xref> struct using a tuple containing the component

    values.
  example: []
  syntax:
    content: >-
      [Pure]

      public static implicit operator Vector3((float X, float Y, float Z) values)
    parameters:
    - id: values
      type: System.ValueTuple{System.Single,System.Single,System.Single}
      description: A tuple containing the component values.
    return:
      type: OpenTK.Mathematics.Vector3
      description: A new instance of the <xref href="OpenTK.Mathematics.Vector3" data-throw-if-not-resolved="false"></xref> struct with the given component values.
    content.vb: >-
      <Pure>

      Public Shared Widening Operator CType(values As (X As Single, Y As Single, Z As Single)) As Vector3
  overload: OpenTK.Mathematics.Vector3.op_Implicit*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.CType((X As Single, Y As Single, Z As Single))
  fullName.vb: OpenTK.Mathematics.Vector3.CType((X As Single, Y As Single, Z As Single))
  name.vb: CType((X As Single, Y As Single, Z As Single))
- uid: OpenTK.Mathematics.Vector3.ToString
  commentId: M:OpenTK.Mathematics.Vector3.ToString
  id: ToString
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector3.ToString()
  fullName: OpenTK.Mathematics.Vector3.ToString()
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1738
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override readonly string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: OpenTK.Mathematics.Vector3.ToString*
- uid: OpenTK.Mathematics.Vector3.ToString(System.String)
  commentId: M:OpenTK.Mathematics.Vector3.ToString(System.String)
  id: ToString(System.String)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Vector3.ToString(string)
  fullName: OpenTK.Mathematics.Vector3.ToString(string)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1744
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public readonly string ToString(string format)
    parameters:
    - id: format
      type: System.String
      description: >-
        The format to use.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to use the default format defined for the type of the <xref href="System.IFormattable" data-throw-if-not-resolved="false"></xref> implementation.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(format As String) As String
  overload: OpenTK.Mathematics.Vector3.ToString*
  nameWithType.vb: Vector3.ToString(String)
  fullName.vb: OpenTK.Mathematics.Vector3.ToString(String)
  name.vb: ToString(String)
- uid: OpenTK.Mathematics.Vector3.ToString(System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Vector3.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: Vector3.ToString(IFormatProvider)
  fullName: OpenTK.Mathematics.Vector3.ToString(System.IFormatProvider)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1750
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public readonly string ToString(IFormatProvider formatProvider)
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
      description: >-
        The provider to use to format the value.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Vector3.ToString*
- uid: OpenTK.Mathematics.Vector3.ToString(System.String,System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Vector3.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: ToString(string, IFormatProvider)
  nameWithType: Vector3.ToString(string, IFormatProvider)
  fullName: OpenTK.Mathematics.Vector3.ToString(string, System.IFormatProvider)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1756
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public readonly string ToString(string format, IFormatProvider formatProvider)
    parameters:
    - id: format
      type: System.String
      description: >-
        The format to use.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to use the default format defined for the type of the <xref href="System.IFormattable" data-throw-if-not-resolved="false"></xref> implementation.
    - id: formatProvider
      type: System.IFormatProvider
      description: >-
        The provider to use to format the value.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Vector3.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: Vector3.ToString(String, IFormatProvider)
  fullName.vb: OpenTK.Mathematics.Vector3.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
- uid: OpenTK.Mathematics.Vector3.Equals(System.Object)
  commentId: M:OpenTK.Mathematics.Vector3.Equals(System.Object)
  id: Equals(System.Object)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Vector3.Equals(object)
  fullName: OpenTK.Mathematics.Vector3.Equals(object)
  type: Method
  source:
    id: Equals
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1767
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override readonly bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: OpenTK.Mathematics.Vector3.Equals*
  nameWithType.vb: Vector3.Equals(Object)
  fullName.vb: OpenTK.Mathematics.Vector3.Equals(Object)
  name.vb: Equals(Object)
- uid: OpenTK.Mathematics.Vector3.Equals(OpenTK.Mathematics.Vector3)
  commentId: M:OpenTK.Mathematics.Vector3.Equals(OpenTK.Mathematics.Vector3)
  id: Equals(OpenTK.Mathematics.Vector3)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Equals(Vector3)
  nameWithType: Vector3.Equals(Vector3)
  fullName: OpenTK.Mathematics.Vector3.Equals(OpenTK.Mathematics.Vector3)
  type: Method
  source:
    id: Equals
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1773
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public readonly bool Equals(Vector3 other)
    parameters:
    - id: other
      type: OpenTK.Mathematics.Vector3
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As Vector3) As Boolean
  overload: OpenTK.Mathematics.Vector3.Equals*
  implements:
  - System.IEquatable{OpenTK.Mathematics.Vector3}.Equals(OpenTK.Mathematics.Vector3)
- uid: OpenTK.Mathematics.Vector3.GetHashCode
  commentId: M:OpenTK.Mathematics.Vector3.GetHashCode
  id: GetHashCode
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Vector3.GetHashCode()
  fullName: OpenTK.Mathematics.Vector3.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1781
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override readonly int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: OpenTK.Mathematics.Vector3.GetHashCode*
- uid: OpenTK.Mathematics.Vector3.Deconstruct(System.Single@,System.Single@,System.Single@)
  commentId: M:OpenTK.Mathematics.Vector3.Deconstruct(System.Single@,System.Single@,System.Single@)
  id: Deconstruct(System.Single@,System.Single@,System.Single@)
  parent: OpenTK.Mathematics.Vector3
  langs:
  - csharp
  - vb
  name: Deconstruct(out float, out float, out float)
  nameWithType: Vector3.Deconstruct(out float, out float, out float)
  fullName: OpenTK.Mathematics.Vector3.Deconstruct(out float, out float, out float)
  type: Method
  source:
    id: Deconstruct
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Vector\Vector3.cs
    startLine: 1792
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Deconstructs the vector into it's individual components.
  example: []
  syntax:
    content: >-
      [Pure]

      public readonly void Deconstruct(out float x, out float y, out float z)
    parameters:
    - id: x
      type: System.Single
      description: The X component of the vector.
    - id: y
      type: System.Single
      description: The Y component of the vector.
    - id: z
      type: System.Single
      description: The Z component of the vector.
    content.vb: >-
      <Pure>

      Public Sub Deconstruct(x As Single, y As Single, z As Single)
  overload: OpenTK.Mathematics.Vector3.Deconstruct*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Vector3.Deconstruct(Single, Single, Single)
  fullName.vb: OpenTK.Mathematics.Vector3.Deconstruct(Single, Single, Single)
  name.vb: Deconstruct(Single, Single, Single)
references:
- uid: OpenTK.Mathematics
  commentId: N:OpenTK.Mathematics
  href: OpenTK.html
  name: OpenTK.Mathematics
  nameWithType: OpenTK.Mathematics
  fullName: OpenTK.Mathematics
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
- uid: System.IEquatable{OpenTK.Mathematics.Vector3}
  commentId: T:System.IEquatable{OpenTK.Mathematics.Vector3}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Vector3>
  nameWithType: IEquatable<Vector3>
  fullName: System.IEquatable<OpenTK.Mathematics.Vector3>
  nameWithType.vb: IEquatable(Of Vector3)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Vector3)
  name.vb: IEquatable(Of Vector3)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: OpenTK.Mathematics.Vector3
    name: Vector3
    href: OpenTK.Mathematics.Vector3.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Mathematics.Vector3
    name: Vector3
    href: OpenTK.Mathematics.Vector3.html
  - name: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: OpenTK.Mathematics.Vector3
  commentId: T:OpenTK.Mathematics.Vector3
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector3.html
  name: Vector3
  nameWithType: Vector3
  fullName: OpenTK.Mathematics.Vector3
- uid: OpenTK.Mathematics.Vector3.#ctor*
  commentId: Overload:OpenTK.Mathematics.Vector3.#ctor
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3__ctor_System_Single_
  name: Vector3
  nameWithType: Vector3.Vector3
  fullName: OpenTK.Mathematics.Vector3.Vector3
  nameWithType.vb: Vector3.New
  fullName.vb: OpenTK.Mathematics.Vector3.New
  name.vb: New
- uid: OpenTK.Mathematics.Vector2
  commentId: T:OpenTK.Mathematics.Vector2
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector2.html
  name: Vector2
  nameWithType: Vector2
  fullName: OpenTK.Mathematics.Vector2
- uid: System.IndexOutOfRangeException
  commentId: T:System.IndexOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.indexoutofrangeexception
  name: IndexOutOfRangeException
  nameWithType: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
- uid: OpenTK.Mathematics.Vector3.Item*
  commentId: Overload:OpenTK.Mathematics.Vector3.Item
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Item_System_Int32_
  name: this
  nameWithType: Vector3.this
  fullName: OpenTK.Mathematics.Vector3.this
  nameWithType.vb: Vector3.this[]
  fullName.vb: OpenTK.Mathematics.Vector3.this[]
  name.vb: this[]
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: OpenTK.Mathematics.Vector3.LengthSquared
  commentId: P:OpenTK.Mathematics.Vector3.LengthSquared
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_LengthSquared
  name: LengthSquared
  nameWithType: Vector3.LengthSquared
  fullName: OpenTK.Mathematics.Vector3.LengthSquared
- uid: OpenTK.Mathematics.Vector3.LengthFast
  commentId: P:OpenTK.Mathematics.Vector3.LengthFast
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_LengthFast
  name: LengthFast
  nameWithType: Vector3.LengthFast
  fullName: OpenTK.Mathematics.Vector3.LengthFast
- uid: OpenTK.Mathematics.Vector3.Length*
  commentId: Overload:OpenTK.Mathematics.Vector3.Length
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Length
  name: Length
  nameWithType: Vector3.Length
  fullName: OpenTK.Mathematics.Vector3.Length
- uid: OpenTK.Mathematics.Vector3.ReciprocalLengthFast*
  commentId: Overload:OpenTK.Mathematics.Vector3.ReciprocalLengthFast
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_ReciprocalLengthFast
  name: ReciprocalLengthFast
  nameWithType: Vector3.ReciprocalLengthFast
  fullName: OpenTK.Mathematics.Vector3.ReciprocalLengthFast
- uid: OpenTK.Mathematics.Vector3.Length
  commentId: P:OpenTK.Mathematics.Vector3.Length
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Length
  name: Length
  nameWithType: Vector3.Length
  fullName: OpenTK.Mathematics.Vector3.Length
- uid: OpenTK.Mathematics.Vector3.LengthFast*
  commentId: Overload:OpenTK.Mathematics.Vector3.LengthFast
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_LengthFast
  name: LengthFast
  nameWithType: Vector3.LengthFast
  fullName: OpenTK.Mathematics.Vector3.LengthFast
- uid: OpenTK.Mathematics.Vector3.LengthSquared*
  commentId: Overload:OpenTK.Mathematics.Vector3.LengthSquared
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_LengthSquared
  name: LengthSquared
  nameWithType: Vector3.LengthSquared
  fullName: OpenTK.Mathematics.Vector3.LengthSquared
- uid: OpenTK.Mathematics.Vector3.Normalized*
  commentId: Overload:OpenTK.Mathematics.Vector3.Normalized
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Normalized
  name: Normalized
  nameWithType: Vector3.Normalized
  fullName: OpenTK.Mathematics.Vector3.Normalized
- uid: OpenTK.Mathematics.Vector3.Normalize*
  commentId: Overload:OpenTK.Mathematics.Vector3.Normalize
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Normalize
  name: Normalize
  nameWithType: Vector3.Normalize
  fullName: OpenTK.Mathematics.Vector3.Normalize
- uid: OpenTK.Mathematics.Vector3.NormalizeFast*
  commentId: Overload:OpenTK.Mathematics.Vector3.NormalizeFast
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_NormalizeFast
  name: NormalizeFast
  nameWithType: Vector3.NormalizeFast
  fullName: OpenTK.Mathematics.Vector3.NormalizeFast
- uid: OpenTK.Mathematics.Vector3.Abs*
  commentId: Overload:OpenTK.Mathematics.Vector3.Abs
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Abs
  name: Abs
  nameWithType: Vector3.Abs
  fullName: OpenTK.Mathematics.Vector3.Abs
- uid: OpenTK.Mathematics.Vector3.Add*
  commentId: Overload:OpenTK.Mathematics.Vector3.Add
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Add_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_
  name: Add
  nameWithType: Vector3.Add
  fullName: OpenTK.Mathematics.Vector3.Add
- uid: OpenTK.Mathematics.Vector3.Subtract*
  commentId: Overload:OpenTK.Mathematics.Vector3.Subtract
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Subtract_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_
  name: Subtract
  nameWithType: Vector3.Subtract
  fullName: OpenTK.Mathematics.Vector3.Subtract
- uid: OpenTK.Mathematics.Vector3.Multiply*
  commentId: Overload:OpenTK.Mathematics.Vector3.Multiply
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Multiply_OpenTK_Mathematics_Vector3_System_Single_
  name: Multiply
  nameWithType: Vector3.Multiply
  fullName: OpenTK.Mathematics.Vector3.Multiply
- uid: OpenTK.Mathematics.Vector3.Divide*
  commentId: Overload:OpenTK.Mathematics.Vector3.Divide
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Divide_OpenTK_Mathematics_Vector3_System_Single_
  name: Divide
  nameWithType: Vector3.Divide
  fullName: OpenTK.Mathematics.Vector3.Divide
- uid: OpenTK.Mathematics.Vector3.ComponentMin*
  commentId: Overload:OpenTK.Mathematics.Vector3.ComponentMin
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_ComponentMin_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_
  name: ComponentMin
  nameWithType: Vector3.ComponentMin
  fullName: OpenTK.Mathematics.Vector3.ComponentMin
- uid: OpenTK.Mathematics.Vector3.ComponentMax*
  commentId: Overload:OpenTK.Mathematics.Vector3.ComponentMax
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_ComponentMax_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_
  name: ComponentMax
  nameWithType: Vector3.ComponentMax
  fullName: OpenTK.Mathematics.Vector3.ComponentMax
- uid: OpenTK.Mathematics.Vector3.MagnitudeMin*
  commentId: Overload:OpenTK.Mathematics.Vector3.MagnitudeMin
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_MagnitudeMin_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_
  name: MagnitudeMin
  nameWithType: Vector3.MagnitudeMin
  fullName: OpenTK.Mathematics.Vector3.MagnitudeMin
- uid: OpenTK.Mathematics.Vector3.MagnitudeMax*
  commentId: Overload:OpenTK.Mathematics.Vector3.MagnitudeMax
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_MagnitudeMax_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_
  name: MagnitudeMax
  nameWithType: Vector3.MagnitudeMax
  fullName: OpenTK.Mathematics.Vector3.MagnitudeMax
- uid: OpenTK.Mathematics.Vector3.Clamp*
  commentId: Overload:OpenTK.Mathematics.Vector3.Clamp
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Clamp_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_
  name: Clamp
  nameWithType: Vector3.Clamp
  fullName: OpenTK.Mathematics.Vector3.Clamp
- uid: OpenTK.Mathematics.Vector3.Distance*
  commentId: Overload:OpenTK.Mathematics.Vector3.Distance
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Distance_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_
  name: Distance
  nameWithType: Vector3.Distance
  fullName: OpenTK.Mathematics.Vector3.Distance
- uid: OpenTK.Mathematics.Vector3.DistanceSquared*
  commentId: Overload:OpenTK.Mathematics.Vector3.DistanceSquared
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_DistanceSquared_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_
  name: DistanceSquared
  nameWithType: Vector3.DistanceSquared
  fullName: OpenTK.Mathematics.Vector3.DistanceSquared
- uid: OpenTK.Mathematics.Vector3.Dot*
  commentId: Overload:OpenTK.Mathematics.Vector3.Dot
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Dot_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_
  name: Dot
  nameWithType: Vector3.Dot
  fullName: OpenTK.Mathematics.Vector3.Dot
- uid: OpenTK.Mathematics.Vector3.Cross*
  commentId: Overload:OpenTK.Mathematics.Vector3.Cross
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Cross_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_
  name: Cross
  nameWithType: Vector3.Cross
  fullName: OpenTK.Mathematics.Vector3.Cross
- uid: OpenTK.Mathematics.Vector3.Lerp*
  commentId: Overload:OpenTK.Mathematics.Vector3.Lerp
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Lerp_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_System_Single_
  name: Lerp
  nameWithType: Vector3.Lerp
  fullName: OpenTK.Mathematics.Vector3.Lerp
- uid: OpenTK.Mathematics.Vector3.Slerp*
  commentId: Overload:OpenTK.Mathematics.Vector3.Slerp
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Slerp_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_System_Single_
  name: Slerp
  nameWithType: Vector3.Slerp
  fullName: OpenTK.Mathematics.Vector3.Slerp
- uid: OpenTK.Mathematics.MathHelper.Elerp(System.Single,System.Single,System.Single)
  commentId: M:OpenTK.Mathematics.MathHelper.Elerp(System.Single,System.Single,System.Single)
  isExternal: true
  href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_Elerp_System_Single_System_Single_System_Single_
  name: Elerp(float, float, float)
  nameWithType: MathHelper.Elerp(float, float, float)
  fullName: OpenTK.Mathematics.MathHelper.Elerp(float, float, float)
  nameWithType.vb: MathHelper.Elerp(Single, Single, Single)
  fullName.vb: OpenTK.Mathematics.MathHelper.Elerp(Single, Single, Single)
  name.vb: Elerp(Single, Single, Single)
  spec.csharp:
  - uid: OpenTK.Mathematics.MathHelper.Elerp(System.Single,System.Single,System.Single)
    name: Elerp
    href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_Elerp_System_Single_System_Single_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: OpenTK.Mathematics.MathHelper.Elerp(System.Single,System.Single,System.Single)
    name: Elerp
    href: OpenTK.Mathematics.MathHelper.html#OpenTK_Mathematics_MathHelper_Elerp_System_Single_System_Single_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: OpenTK.Mathematics.Vector3.Elerp*
  commentId: Overload:OpenTK.Mathematics.Vector3.Elerp
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Elerp_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_System_Single_
  name: Elerp
  nameWithType: Vector3.Elerp
  fullName: OpenTK.Mathematics.Vector3.Elerp
- uid: OpenTK.Mathematics.Vector3.BaryCentric*
  commentId: Overload:OpenTK.Mathematics.Vector3.BaryCentric
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_BaryCentric_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_System_Single_System_Single_
  name: BaryCentric
  nameWithType: Vector3.BaryCentric
  fullName: OpenTK.Mathematics.Vector3.BaryCentric
- uid: OpenTK.Mathematics.Vector3.TransformVector*
  commentId: Overload:OpenTK.Mathematics.Vector3.TransformVector
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_TransformVector_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Matrix4_
  name: TransformVector
  nameWithType: Vector3.TransformVector
  fullName: OpenTK.Mathematics.Vector3.TransformVector
- uid: OpenTK.Mathematics.Matrix4
  commentId: T:OpenTK.Mathematics.Matrix4
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Matrix4.html
  name: Matrix4
  nameWithType: Matrix4
  fullName: OpenTK.Mathematics.Matrix4
- uid: OpenTK.Mathematics.Vector3.TransformNormal*
  commentId: Overload:OpenTK.Mathematics.Vector3.TransformNormal
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_TransformNormal_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Matrix4_
  name: TransformNormal
  nameWithType: Vector3.TransformNormal
  fullName: OpenTK.Mathematics.Vector3.TransformNormal
- uid: OpenTK.Mathematics.Vector3.TransformNormalInverse*
  commentId: Overload:OpenTK.Mathematics.Vector3.TransformNormalInverse
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_TransformNormalInverse_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Matrix4_
  name: TransformNormalInverse
  nameWithType: Vector3.TransformNormalInverse
  fullName: OpenTK.Mathematics.Vector3.TransformNormalInverse
- uid: OpenTK.Mathematics.Vector3.TransformPosition*
  commentId: Overload:OpenTK.Mathematics.Vector3.TransformPosition
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_TransformPosition_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Matrix4_
  name: TransformPosition
  nameWithType: Vector3.TransformPosition
  fullName: OpenTK.Mathematics.Vector3.TransformPosition
- uid: OpenTK.Mathematics.Vector3.TransformRow*
  commentId: Overload:OpenTK.Mathematics.Vector3.TransformRow
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_TransformRow_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Matrix3_
  name: TransformRow
  nameWithType: Vector3.TransformRow
  fullName: OpenTK.Mathematics.Vector3.TransformRow
- uid: OpenTK.Mathematics.Matrix3
  commentId: T:OpenTK.Mathematics.Matrix3
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Matrix3.html
  name: Matrix3
  nameWithType: Matrix3
  fullName: OpenTK.Mathematics.Matrix3
- uid: OpenTK.Mathematics.Vector3.Transform*
  commentId: Overload:OpenTK.Mathematics.Vector3.Transform
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Transform_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Quaternion_
  name: Transform
  nameWithType: Vector3.Transform
  fullName: OpenTK.Mathematics.Vector3.Transform
- uid: OpenTK.Mathematics.Quaternion
  commentId: T:OpenTK.Mathematics.Quaternion
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Quaternion.html
  name: Quaternion
  nameWithType: Quaternion
  fullName: OpenTK.Mathematics.Quaternion
- uid: OpenTK.Mathematics.Vector3.TransformColumn*
  commentId: Overload:OpenTK.Mathematics.Vector3.TransformColumn
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_TransformColumn_OpenTK_Mathematics_Matrix3_OpenTK_Mathematics_Vector3_
  name: TransformColumn
  nameWithType: Vector3.TransformColumn
  fullName: OpenTK.Mathematics.Vector3.TransformColumn
- uid: OpenTK.Mathematics.Vector3.TransformPerspective*
  commentId: Overload:OpenTK.Mathematics.Vector3.TransformPerspective
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_TransformPerspective_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Matrix4_
  name: TransformPerspective
  nameWithType: Vector3.TransformPerspective
  fullName: OpenTK.Mathematics.Vector3.TransformPerspective
- uid: OpenTK.Mathematics.Vector3.CalculateAngle*
  commentId: Overload:OpenTK.Mathematics.Vector3.CalculateAngle
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_CalculateAngle_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_
  name: CalculateAngle
  nameWithType: Vector3.CalculateAngle
  fullName: OpenTK.Mathematics.Vector3.CalculateAngle
- uid: OpenTK.Mathematics.Vector3.Project*
  commentId: Overload:OpenTK.Mathematics.Vector3.Project
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Project_OpenTK_Mathematics_Vector3_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_OpenTK_Mathematics_Matrix4_
  name: Project
  nameWithType: Vector3.Project
  fullName: OpenTK.Mathematics.Vector3.Project
- uid: OpenTK.Mathematics.Vector3.Unproject*
  commentId: Overload:OpenTK.Mathematics.Vector3.Unproject
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Unproject_OpenTK_Mathematics_Vector3_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_OpenTK_Mathematics_Matrix4_
  name: Unproject
  nameWithType: Vector3.Unproject
  fullName: OpenTK.Mathematics.Vector3.Unproject
- uid: OpenTK.Mathematics.Vector3.Xy*
  commentId: Overload:OpenTK.Mathematics.Vector3.Xy
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Xy
  name: Xy
  nameWithType: Vector3.Xy
  fullName: OpenTK.Mathematics.Vector3.Xy
- uid: OpenTK.Mathematics.Vector3.Xz*
  commentId: Overload:OpenTK.Mathematics.Vector3.Xz
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Xz
  name: Xz
  nameWithType: Vector3.Xz
  fullName: OpenTK.Mathematics.Vector3.Xz
- uid: OpenTK.Mathematics.Vector3.Yx*
  commentId: Overload:OpenTK.Mathematics.Vector3.Yx
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Yx
  name: Yx
  nameWithType: Vector3.Yx
  fullName: OpenTK.Mathematics.Vector3.Yx
- uid: OpenTK.Mathematics.Vector3.Yz*
  commentId: Overload:OpenTK.Mathematics.Vector3.Yz
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Yz
  name: Yz
  nameWithType: Vector3.Yz
  fullName: OpenTK.Mathematics.Vector3.Yz
- uid: OpenTK.Mathematics.Vector3.Zx*
  commentId: Overload:OpenTK.Mathematics.Vector3.Zx
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Zx
  name: Zx
  nameWithType: Vector3.Zx
  fullName: OpenTK.Mathematics.Vector3.Zx
- uid: OpenTK.Mathematics.Vector3.Zy*
  commentId: Overload:OpenTK.Mathematics.Vector3.Zy
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Zy
  name: Zy
  nameWithType: Vector3.Zy
  fullName: OpenTK.Mathematics.Vector3.Zy
- uid: OpenTK.Mathematics.Vector3.Xzy*
  commentId: Overload:OpenTK.Mathematics.Vector3.Xzy
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Xzy
  name: Xzy
  nameWithType: Vector3.Xzy
  fullName: OpenTK.Mathematics.Vector3.Xzy
- uid: OpenTK.Mathematics.Vector3.Yxz*
  commentId: Overload:OpenTK.Mathematics.Vector3.Yxz
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Yxz
  name: Yxz
  nameWithType: Vector3.Yxz
  fullName: OpenTK.Mathematics.Vector3.Yxz
- uid: OpenTK.Mathematics.Vector3.Yzx*
  commentId: Overload:OpenTK.Mathematics.Vector3.Yzx
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Yzx
  name: Yzx
  nameWithType: Vector3.Yzx
  fullName: OpenTK.Mathematics.Vector3.Yzx
- uid: OpenTK.Mathematics.Vector3.Zxy*
  commentId: Overload:OpenTK.Mathematics.Vector3.Zxy
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Zxy
  name: Zxy
  nameWithType: Vector3.Zxy
  fullName: OpenTK.Mathematics.Vector3.Zxy
- uid: OpenTK.Mathematics.Vector3.Zyx*
  commentId: Overload:OpenTK.Mathematics.Vector3.Zyx
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Zyx
  name: Zyx
  nameWithType: Vector3.Zyx
  fullName: OpenTK.Mathematics.Vector3.Zyx
- uid: OpenTK.Mathematics.Vector3.op_Addition*
  commentId: Overload:OpenTK.Mathematics.Vector3.op_Addition
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_op_Addition_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_
  name: operator +
  nameWithType: Vector3.operator +
  fullName: OpenTK.Mathematics.Vector3.operator +
  nameWithType.vb: Vector3.+
  fullName.vb: OpenTK.Mathematics.Vector3.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3.op_Addition*
    name: +
    href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_op_Addition_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_
- uid: OpenTK.Mathematics.Vector3.op_Subtraction*
  commentId: Overload:OpenTK.Mathematics.Vector3.op_Subtraction
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_op_Subtraction_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_
  name: operator -
  nameWithType: Vector3.operator -
  fullName: OpenTK.Mathematics.Vector3.operator -
  nameWithType.vb: Vector3.-
  fullName.vb: OpenTK.Mathematics.Vector3.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3.op_Subtraction*
    name: '-'
    href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_op_Subtraction_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_
- uid: OpenTK.Mathematics.Vector3.op_UnaryNegation*
  commentId: Overload:OpenTK.Mathematics.Vector3.op_UnaryNegation
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_op_UnaryNegation_OpenTK_Mathematics_Vector3_
  name: operator -
  nameWithType: Vector3.operator -
  fullName: OpenTK.Mathematics.Vector3.operator -
  nameWithType.vb: Vector3.-
  fullName.vb: OpenTK.Mathematics.Vector3.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3.op_UnaryNegation*
    name: '-'
    href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_op_UnaryNegation_OpenTK_Mathematics_Vector3_
- uid: OpenTK.Mathematics.Vector3.op_Multiply*
  commentId: Overload:OpenTK.Mathematics.Vector3.op_Multiply
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_op_Multiply_OpenTK_Mathematics_Vector3_System_Single_
  name: operator *
  nameWithType: Vector3.operator *
  fullName: OpenTK.Mathematics.Vector3.operator *
  nameWithType.vb: Vector3.*
  fullName.vb: OpenTK.Mathematics.Vector3.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3.op_Multiply*
    name: '*'
    href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_op_Multiply_OpenTK_Mathematics_Vector3_System_Single_
- uid: OpenTK.Mathematics.Vector3.op_Division*
  commentId: Overload:OpenTK.Mathematics.Vector3.op_Division
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_op_Division_OpenTK_Mathematics_Vector3_System_Single_
  name: operator /
  nameWithType: Vector3.operator /
  fullName: OpenTK.Mathematics.Vector3.operator /
  nameWithType.vb: Vector3./
  fullName.vb: OpenTK.Mathematics.Vector3./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3.op_Division*
    name: /
    href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_op_Division_OpenTK_Mathematics_Vector3_System_Single_
- uid: OpenTK.Mathematics.Vector3.op_Equality*
  commentId: Overload:OpenTK.Mathematics.Vector3.op_Equality
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_op_Equality_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_
  name: operator ==
  nameWithType: Vector3.operator ==
  fullName: OpenTK.Mathematics.Vector3.operator ==
  nameWithType.vb: Vector3.=
  fullName.vb: OpenTK.Mathematics.Vector3.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3.op_Equality*
    name: ==
    href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_op_Equality_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenTK.Mathematics.Vector3.op_Inequality*
  commentId: Overload:OpenTK.Mathematics.Vector3.op_Inequality
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_op_Inequality_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_
  name: operator !=
  nameWithType: Vector3.operator !=
  fullName: OpenTK.Mathematics.Vector3.operator !=
  nameWithType.vb: Vector3.<>
  fullName.vb: OpenTK.Mathematics.Vector3.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Vector3.op_Inequality*
    name: '!='
    href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_op_Inequality_OpenTK_Mathematics_Vector3_OpenTK_Mathematics_Vector3_
- uid: OpenTK.Mathematics.Vector3.op_Implicit*
  commentId: Overload:OpenTK.Mathematics.Vector3.op_Implicit
  name: implicit operator
  nameWithType: Vector3.implicit operator
  fullName: OpenTK.Mathematics.Vector3.implicit operator
  nameWithType.vb: Vector3.CType
  fullName.vb: OpenTK.Mathematics.Vector3.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: OpenTK.Mathematics.Vector3d
  commentId: T:OpenTK.Mathematics.Vector3d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector3d.html
  name: Vector3d
  nameWithType: Vector3d
  fullName: OpenTK.Mathematics.Vector3d
- uid: OpenTK.Mathematics.Vector3.op_Explicit*
  commentId: Overload:OpenTK.Mathematics.Vector3.op_Explicit
  name: explicit operator
  nameWithType: Vector3.explicit operator
  fullName: OpenTK.Mathematics.Vector3.explicit operator
  nameWithType.vb: Vector3.CType
  fullName.vb: OpenTK.Mathematics.Vector3.CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: OpenTK.Mathematics.Vector3h
  commentId: T:OpenTK.Mathematics.Vector3h
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector3h.html
  name: Vector3h
  nameWithType: Vector3h
  fullName: OpenTK.Mathematics.Vector3h
- uid: OpenTK.Mathematics.Vector3i
  commentId: T:OpenTK.Mathematics.Vector3i
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector3i.html
  name: Vector3i
  nameWithType: Vector3i
  fullName: OpenTK.Mathematics.Vector3i
- uid: System.ValueTuple{System.Single,System.Single,System.Single}
  commentId: T:System.ValueTuple{System.Single,System.Single,System.Single}
  parent: System
  definition: System.ValueTuple`3
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: (float X, float Y, float Z)
  nameWithType: (float X, float Y, float Z)
  fullName: (float X, float Y, float Z)
  nameWithType.vb: (X As Single, Y As Single, Z As Single)
  fullName.vb: (X As Single, Y As Single, Z As Single)
  name.vb: (X As Single, Y As Single, Z As Single)
  spec.csharp:
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single}.X
    name: X
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single-.x
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single}.Y
    name: Y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single-.y
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single}.Z
    name: Z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single-.z
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Single,System.Single,System.Single}.X
    name: X
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single-.x
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single}.Y
    name: Y
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single-.y
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single}.Z
    name: Z
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single-.z
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.ValueTuple`3
  commentId: T:System.ValueTuple`3
  name: (T1, T2, T3)
  nameWithType: (T1, T2, T3)
  fullName: (T1, T2, T3)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Vector3.ToString*
  commentId: Overload:OpenTK.Mathematics.Vector3.ToString
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_ToString
  name: ToString
  nameWithType: Vector3.ToString
  fullName: OpenTK.Mathematics.Vector3.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: OpenTK.Mathematics.Vector3.Equals*
  commentId: Overload:OpenTK.Mathematics.Vector3.Equals
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Equals_System_Object_
  name: Equals
  nameWithType: Vector3.Equals
  fullName: OpenTK.Mathematics.Vector3.Equals
- uid: System.IEquatable{OpenTK.Mathematics.Vector3}.Equals(OpenTK.Mathematics.Vector3)
  commentId: M:System.IEquatable{OpenTK.Mathematics.Vector3}.Equals(OpenTK.Mathematics.Vector3)
  parent: System.IEquatable{OpenTK.Mathematics.Vector3}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Vector3)
  nameWithType: IEquatable<Vector3>.Equals(Vector3)
  fullName: System.IEquatable<OpenTK.Mathematics.Vector3>.Equals(OpenTK.Mathematics.Vector3)
  nameWithType.vb: IEquatable(Of Vector3).Equals(Vector3)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Vector3).Equals(OpenTK.Mathematics.Vector3)
  spec.csharp:
  - uid: System.IEquatable{OpenTK.Mathematics.Vector3}.Equals(OpenTK.Mathematics.Vector3)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: OpenTK.Mathematics.Vector3
    name: Vector3
    href: OpenTK.Mathematics.Vector3.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{OpenTK.Mathematics.Vector3}.Equals(OpenTK.Mathematics.Vector3)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: OpenTK.Mathematics.Vector3
    name: Vector3
    href: OpenTK.Mathematics.Vector3.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Vector3.GetHashCode*
  commentId: Overload:OpenTK.Mathematics.Vector3.GetHashCode
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_GetHashCode
  name: GetHashCode
  nameWithType: Vector3.GetHashCode
  fullName: OpenTK.Mathematics.Vector3.GetHashCode
- uid: OpenTK.Mathematics.Vector3.Deconstruct*
  commentId: Overload:OpenTK.Mathematics.Vector3.Deconstruct
  href: OpenTK.Mathematics.Vector3.html#OpenTK_Mathematics_Vector3_Deconstruct_System_Single__System_Single__System_Single__
  name: Deconstruct
  nameWithType: Vector3.Deconstruct
  fullName: OpenTK.Mathematics.Vector3.Deconstruct
