### YamlMime:ManagedReference
items:
- uid: OpenTK.Mathematics.Matrix3x2d
  commentId: T:OpenTK.Mathematics.Matrix3x2d
  id: Matrix3x2d
  parent: OpenTK.Mathematics
  children:
  - OpenTK.Mathematics.Matrix3x2d.#ctor(OpenTK.Mathematics.Vector2d,OpenTK.Mathematics.Vector2d,OpenTK.Mathematics.Vector2d)
  - OpenTK.Mathematics.Matrix3x2d.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - OpenTK.Mathematics.Matrix3x2d.Add(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  - OpenTK.Mathematics.Matrix3x2d.Add(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix3x2d@)
  - OpenTK.Mathematics.Matrix3x2d.Column0
  - OpenTK.Mathematics.Matrix3x2d.Column1
  - OpenTK.Mathematics.Matrix3x2d.CreateRotation(System.Double)
  - OpenTK.Mathematics.Matrix3x2d.CreateRotation(System.Double,OpenTK.Mathematics.Matrix3x2d@)
  - OpenTK.Mathematics.Matrix3x2d.CreateScale(OpenTK.Mathematics.Vector2d)
  - OpenTK.Mathematics.Matrix3x2d.CreateScale(OpenTK.Mathematics.Vector2d,OpenTK.Mathematics.Matrix3x2d@)
  - OpenTK.Mathematics.Matrix3x2d.CreateScale(System.Double)
  - OpenTK.Mathematics.Matrix3x2d.CreateScale(System.Double,OpenTK.Mathematics.Matrix3x2d@)
  - OpenTK.Mathematics.Matrix3x2d.CreateScale(System.Double,System.Double)
  - OpenTK.Mathematics.Matrix3x2d.CreateScale(System.Double,System.Double,OpenTK.Mathematics.Matrix3x2d@)
  - OpenTK.Mathematics.Matrix3x2d.Diagonal
  - OpenTK.Mathematics.Matrix3x2d.Equals(OpenTK.Mathematics.Matrix3x2d)
  - OpenTK.Mathematics.Matrix3x2d.Equals(System.Object)
  - OpenTK.Mathematics.Matrix3x2d.GetHashCode
  - OpenTK.Mathematics.Matrix3x2d.Item(System.Int32,System.Int32)
  - OpenTK.Mathematics.Matrix3x2d.M11
  - OpenTK.Mathematics.Matrix3x2d.M12
  - OpenTK.Mathematics.Matrix3x2d.M21
  - OpenTK.Mathematics.Matrix3x2d.M22
  - OpenTK.Mathematics.Matrix3x2d.M31
  - OpenTK.Mathematics.Matrix3x2d.M32
  - OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2d)
  - OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2x3d)
  - OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2x4d)
  - OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d,System.Double)
  - OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix2d@,OpenTK.Mathematics.Matrix3x2d@)
  - OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix2x3d@,OpenTK.Mathematics.Matrix3d@)
  - OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix2x4d@,OpenTK.Mathematics.Matrix3x4d@)
  - OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d@,System.Double,OpenTK.Mathematics.Matrix3x2d@)
  - OpenTK.Mathematics.Matrix3x2d.Row0
  - OpenTK.Mathematics.Matrix3x2d.Row1
  - OpenTK.Mathematics.Matrix3x2d.Row2
  - OpenTK.Mathematics.Matrix3x2d.Subtract(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  - OpenTK.Mathematics.Matrix3x2d.Subtract(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix3x2d@)
  - OpenTK.Mathematics.Matrix3x2d.Swizzle(OpenTK.Mathematics.Matrix3x2d,System.Int32,System.Int32,System.Int32)
  - OpenTK.Mathematics.Matrix3x2d.Swizzle(OpenTK.Mathematics.Matrix3x2d@,System.Int32,System.Int32,System.Int32,OpenTK.Mathematics.Matrix3x2d@)
  - OpenTK.Mathematics.Matrix3x2d.Swizzle(System.Int32,System.Int32,System.Int32)
  - OpenTK.Mathematics.Matrix3x2d.Swizzled(System.Int32,System.Int32,System.Int32)
  - OpenTK.Mathematics.Matrix3x2d.ToString
  - OpenTK.Mathematics.Matrix3x2d.ToString(System.IFormatProvider)
  - OpenTK.Mathematics.Matrix3x2d.ToString(System.String)
  - OpenTK.Mathematics.Matrix3x2d.ToString(System.String,System.IFormatProvider)
  - OpenTK.Mathematics.Matrix3x2d.Trace
  - OpenTK.Mathematics.Matrix3x2d.Transpose(OpenTK.Mathematics.Matrix3x2d)
  - OpenTK.Mathematics.Matrix3x2d.Transpose(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix2x3d@)
  - OpenTK.Mathematics.Matrix3x2d.Transposed
  - OpenTK.Mathematics.Matrix3x2d.Zero
  - OpenTK.Mathematics.Matrix3x2d.op_Addition(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  - OpenTK.Mathematics.Matrix3x2d.op_Equality(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  - OpenTK.Mathematics.Matrix3x2d.op_Inequality(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  - OpenTK.Mathematics.Matrix3x2d.op_Multiply(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2d)
  - OpenTK.Mathematics.Matrix3x2d.op_Multiply(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2x3d)
  - OpenTK.Mathematics.Matrix3x2d.op_Multiply(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2x4d)
  - OpenTK.Mathematics.Matrix3x2d.op_Multiply(OpenTK.Mathematics.Matrix3x2d,System.Double)
  - OpenTK.Mathematics.Matrix3x2d.op_Multiply(System.Double,OpenTK.Mathematics.Matrix3x2d)
  - OpenTK.Mathematics.Matrix3x2d.op_Subtraction(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  langs:
  - csharp
  - vb
  name: Matrix3x2d
  nameWithType: Matrix3x2d
  fullName: OpenTK.Mathematics.Matrix3x2d
  type: Struct
  source:
    id: Matrix3x2d
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 33
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Represents a 3x2 matrix.
  example: []
  syntax:
    content: >-
      [Serializable]

      public struct Matrix3x2d : IEquatable<Matrix3x2d>, IFormattable
    content.vb: >-
      <Serializable>

      Public Structure Matrix3x2d Implements IEquatable(Of Matrix3x2d), IFormattable
  implements:
  - System.IEquatable{OpenTK.Mathematics.Matrix3x2d}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Matrix3x2d.Row0
  commentId: F:OpenTK.Mathematics.Matrix3x2d.Row0
  id: Row0
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Row0
  nameWithType: Matrix3x2d.Row0
  fullName: OpenTK.Mathematics.Matrix3x2d.Row0
  type: Field
  source:
    id: Row0
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 40
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Top row of the matrix.
  example: []
  syntax:
    content: public Vector2d Row0
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Row0 As Vector2d
- uid: OpenTK.Mathematics.Matrix3x2d.Row1
  commentId: F:OpenTK.Mathematics.Matrix3x2d.Row1
  id: Row1
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Row1
  nameWithType: Matrix3x2d.Row1
  fullName: OpenTK.Mathematics.Matrix3x2d.Row1
  type: Field
  source:
    id: Row1
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 45
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Second row of the matrix.
  example: []
  syntax:
    content: public Vector2d Row1
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Row1 As Vector2d
- uid: OpenTK.Mathematics.Matrix3x2d.Row2
  commentId: F:OpenTK.Mathematics.Matrix3x2d.Row2
  id: Row2
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Row2
  nameWithType: Matrix3x2d.Row2
  fullName: OpenTK.Mathematics.Matrix3x2d.Row2
  type: Field
  source:
    id: Row2
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 50
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Bottom row of the matrix.
  example: []
  syntax:
    content: public Vector2d Row2
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Row2 As Vector2d
- uid: OpenTK.Mathematics.Matrix3x2d.Zero
  commentId: F:OpenTK.Mathematics.Matrix3x2d.Zero
  id: Zero
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Matrix3x2d.Zero
  fullName: OpenTK.Mathematics.Matrix3x2d.Zero
  type: Field
  source:
    id: Zero
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 55
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: The zero matrix.
  example: []
  syntax:
    content: public static readonly Matrix3x2d Zero
    return:
      type: OpenTK.Mathematics.Matrix3x2d
    content.vb: Public Shared ReadOnly Zero As Matrix3x2d
- uid: OpenTK.Mathematics.Matrix3x2d.#ctor(OpenTK.Mathematics.Vector2d,OpenTK.Mathematics.Vector2d,OpenTK.Mathematics.Vector2d)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.#ctor(OpenTK.Mathematics.Vector2d,OpenTK.Mathematics.Vector2d,OpenTK.Mathematics.Vector2d)
  id: '#ctor(OpenTK.Mathematics.Vector2d,OpenTK.Mathematics.Vector2d,OpenTK.Mathematics.Vector2d)'
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Matrix3x2d(Vector2d, Vector2d, Vector2d)
  nameWithType: Matrix3x2d.Matrix3x2d(Vector2d, Vector2d, Vector2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.Matrix3x2d(OpenTK.Mathematics.Vector2d, OpenTK.Mathematics.Vector2d, OpenTK.Mathematics.Vector2d)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 63
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Matrix3x2d" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Matrix3x2d(Vector2d row0, Vector2d row1, Vector2d row2)
    parameters:
    - id: row0
      type: OpenTK.Mathematics.Vector2d
      description: Top row of the matrix.
    - id: row1
      type: OpenTK.Mathematics.Vector2d
      description: Second row of the matrix.
    - id: row2
      type: OpenTK.Mathematics.Vector2d
      description: Bottom row of the matrix.
    content.vb: Public Sub New(row0 As Vector2d, row1 As Vector2d, row2 As Vector2d)
  overload: OpenTK.Mathematics.Matrix3x2d.#ctor*
  nameWithType.vb: Matrix3x2d.New(Vector2d, Vector2d, Vector2d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.New(OpenTK.Mathematics.Vector2d, OpenTK.Mathematics.Vector2d, OpenTK.Mathematics.Vector2d)
  name.vb: New(Vector2d, Vector2d, Vector2d)
- uid: OpenTK.Mathematics.Matrix3x2d.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)'
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Matrix3x2d(double, double, double, double, double, double)
  nameWithType: Matrix3x2d.Matrix3x2d(double, double, double, double, double, double)
  fullName: OpenTK.Mathematics.Matrix3x2d.Matrix3x2d(double, double, double, double, double, double)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 79
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Initializes a new instance of the <xref href="OpenTK.Mathematics.Matrix3x2d" data-throw-if-not-resolved="false"></xref> struct.
  example: []
  syntax:
    content: public Matrix3x2d(double m00, double m01, double m10, double m11, double m20, double m21)
    parameters:
    - id: m00
      type: System.Double
      description: First item of the first row of the matrix.
    - id: m01
      type: System.Double
      description: Second item of the first row of the matrix.
    - id: m10
      type: System.Double
      description: First item of the second row of the matrix.
    - id: m11
      type: System.Double
      description: Second item of the second row of the matrix.
    - id: m20
      type: System.Double
      description: First item of the third row of the matrix.
    - id: m21
      type: System.Double
      description: Second item of the third row of the matrix.
    content.vb: Public Sub New(m00 As Double, m01 As Double, m10 As Double, m11 As Double, m20 As Double, m21 As Double)
  overload: OpenTK.Mathematics.Matrix3x2d.#ctor*
  nameWithType.vb: Matrix3x2d.New(Double, Double, Double, Double, Double, Double)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.New(Double, Double, Double, Double, Double, Double)
  name.vb: New(Double, Double, Double, Double, Double, Double)
- uid: OpenTK.Mathematics.Matrix3x2d.Column0
  commentId: P:OpenTK.Mathematics.Matrix3x2d.Column0
  id: Column0
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Column0
  nameWithType: Matrix3x2d.Column0
  fullName: OpenTK.Mathematics.Matrix3x2d.Column0
  type: Property
  source:
    id: Column0
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 95
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the first column of this matrix.
  example: []
  syntax:
    content: public Vector3d Column0 { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Column0 As Vector3d
  overload: OpenTK.Mathematics.Matrix3x2d.Column0*
- uid: OpenTK.Mathematics.Matrix3x2d.Column1
  commentId: P:OpenTK.Mathematics.Matrix3x2d.Column1
  id: Column1
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Column1
  nameWithType: Matrix3x2d.Column1
  fullName: OpenTK.Mathematics.Matrix3x2d.Column1
  type: Property
  source:
    id: Column1
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 109
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the second column of this matrix.
  example: []
  syntax:
    content: public Vector3d Column1 { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector3d
    content.vb: Public Property Column1 As Vector3d
  overload: OpenTK.Mathematics.Matrix3x2d.Column1*
- uid: OpenTK.Mathematics.Matrix3x2d.M11
  commentId: P:OpenTK.Mathematics.Matrix3x2d.M11
  id: M11
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: M11
  nameWithType: Matrix3x2d.M11
  fullName: OpenTK.Mathematics.Matrix3x2d.M11
  type: Property
  source:
    id: M11
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 123
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the value at row 1, column 1 of this instance.
  example: []
  syntax:
    content: public double M11 { readonly get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property M11 As Double
  overload: OpenTK.Mathematics.Matrix3x2d.M11*
- uid: OpenTK.Mathematics.Matrix3x2d.M12
  commentId: P:OpenTK.Mathematics.Matrix3x2d.M12
  id: M12
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: M12
  nameWithType: Matrix3x2d.M12
  fullName: OpenTK.Mathematics.Matrix3x2d.M12
  type: Property
  source:
    id: M12
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 132
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the value at row 1, column 2 of this instance.
  example: []
  syntax:
    content: public double M12 { readonly get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property M12 As Double
  overload: OpenTK.Mathematics.Matrix3x2d.M12*
- uid: OpenTK.Mathematics.Matrix3x2d.M21
  commentId: P:OpenTK.Mathematics.Matrix3x2d.M21
  id: M21
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: M21
  nameWithType: Matrix3x2d.M21
  fullName: OpenTK.Mathematics.Matrix3x2d.M21
  type: Property
  source:
    id: M21
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 141
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the value at row 2, column 1 of this instance.
  example: []
  syntax:
    content: public double M21 { readonly get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property M21 As Double
  overload: OpenTK.Mathematics.Matrix3x2d.M21*
- uid: OpenTK.Mathematics.Matrix3x2d.M22
  commentId: P:OpenTK.Mathematics.Matrix3x2d.M22
  id: M22
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: M22
  nameWithType: Matrix3x2d.M22
  fullName: OpenTK.Mathematics.Matrix3x2d.M22
  type: Property
  source:
    id: M22
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 150
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the value at row 2, column 2 of this instance.
  example: []
  syntax:
    content: public double M22 { readonly get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property M22 As Double
  overload: OpenTK.Mathematics.Matrix3x2d.M22*
- uid: OpenTK.Mathematics.Matrix3x2d.M31
  commentId: P:OpenTK.Mathematics.Matrix3x2d.M31
  id: M31
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: M31
  nameWithType: Matrix3x2d.M31
  fullName: OpenTK.Mathematics.Matrix3x2d.M31
  type: Property
  source:
    id: M31
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 159
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the value at row 3, column 1 of this instance.
  example: []
  syntax:
    content: public double M31 { readonly get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property M31 As Double
  overload: OpenTK.Mathematics.Matrix3x2d.M31*
- uid: OpenTK.Mathematics.Matrix3x2d.M32
  commentId: P:OpenTK.Mathematics.Matrix3x2d.M32
  id: M32
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: M32
  nameWithType: Matrix3x2d.M32
  fullName: OpenTK.Mathematics.Matrix3x2d.M32
  type: Property
  source:
    id: M32
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 168
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the value at row 3, column 2 of this instance.
  example: []
  syntax:
    content: public double M32 { readonly get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property M32 As Double
  overload: OpenTK.Mathematics.Matrix3x2d.M32*
- uid: OpenTK.Mathematics.Matrix3x2d.Diagonal
  commentId: P:OpenTK.Mathematics.Matrix3x2d.Diagonal
  id: Diagonal
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Diagonal
  nameWithType: Matrix3x2d.Diagonal
  fullName: OpenTK.Mathematics.Matrix3x2d.Diagonal
  type: Property
  source:
    id: Diagonal
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 177
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the values along the main diagonal of the matrix.
  example: []
  syntax:
    content: public Vector2d Diagonal { readonly get; set; }
    parameters: []
    return:
      type: OpenTK.Mathematics.Vector2d
    content.vb: Public Property Diagonal As Vector2d
  overload: OpenTK.Mathematics.Matrix3x2d.Diagonal*
- uid: OpenTK.Mathematics.Matrix3x2d.Trace
  commentId: P:OpenTK.Mathematics.Matrix3x2d.Trace
  id: Trace
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Trace
  nameWithType: Matrix3x2d.Trace
  fullName: OpenTK.Mathematics.Matrix3x2d.Trace
  type: Property
  source:
    id: Trace
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 190
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets the trace of the matrix, the sum of the values along the diagonal.
  example: []
  syntax:
    content: public readonly double Trace { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Trace As Double
  overload: OpenTK.Mathematics.Matrix3x2d.Trace*
- uid: OpenTK.Mathematics.Matrix3x2d.Item(System.Int32,System.Int32)
  commentId: P:OpenTK.Mathematics.Matrix3x2d.Item(System.Int32,System.Int32)
  id: Item(System.Int32,System.Int32)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: this[int, int]
  nameWithType: Matrix3x2d.this[int, int]
  fullName: OpenTK.Mathematics.Matrix3x2d.this[int, int]
  type: Property
  source:
    id: this[]
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 198
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Gets or sets the value at a specified row and column.
  example: []
  syntax:
    content: public double this[int rowIndex, int columnIndex] { readonly get; set; }
    parameters:
    - id: rowIndex
      type: System.Int32
      description: The index of the row.
    - id: columnIndex
      type: System.Int32
      description: The index of the column.
    return:
      type: System.Double
      description: The element at the given row and column index.
    content.vb: Public Default Property this[](rowIndex As Integer, columnIndex As Integer) As Double
  overload: OpenTK.Mathematics.Matrix3x2d.Item*
  nameWithType.vb: Matrix3x2d.this[](Integer, Integer)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.this[](Integer, Integer)
  name.vb: this[](Integer, Integer)
- uid: OpenTK.Mathematics.Matrix3x2d.Transposed
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Transposed
  id: Transposed
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Transposed()
  nameWithType: Matrix3x2d.Transposed()
  fullName: OpenTK.Mathematics.Matrix3x2d.Transposed()
  type: Method
  source:
    id: Transposed
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 247
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a transposed copy of this instance.
  example: []
  syntax:
    content: public readonly Matrix2x3d Transposed()
    return:
      type: OpenTK.Mathematics.Matrix2x3d
      description: The transposed copy.
    content.vb: Public Function Transposed() As Matrix2x3d
  overload: OpenTK.Mathematics.Matrix3x2d.Transposed*
- uid: OpenTK.Mathematics.Matrix3x2d.Swizzle(System.Int32,System.Int32,System.Int32)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Swizzle(System.Int32,System.Int32,System.Int32)
  id: Swizzle(System.Int32,System.Int32,System.Int32)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Swizzle(int, int, int)
  nameWithType: Matrix3x2d.Swizzle(int, int, int)
  fullName: OpenTK.Mathematics.Matrix3x2d.Swizzle(int, int, int)
  type: Method
  source:
    id: Swizzle
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 258
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Swizzles this instance. Swiches places of the rows of the matrix.
  example: []
  syntax:
    content: public void Swizzle(int rowForRow0, int rowForRow1, int rowForRow2)
    parameters:
    - id: rowForRow0
      type: System.Int32
      description: Which row to place in <xref href="OpenTK.Mathematics.Matrix3x2d.Row0" data-throw-if-not-resolved="false"></xref>.
    - id: rowForRow1
      type: System.Int32
      description: Which row to place in <xref href="OpenTK.Mathematics.Matrix3x2d.Row1" data-throw-if-not-resolved="false"></xref>.
    - id: rowForRow2
      type: System.Int32
      description: Which row to place in <xref href="OpenTK.Mathematics.Matrix3x2d.Row2" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub Swizzle(rowForRow0 As Integer, rowForRow1 As Integer, rowForRow2 As Integer)
  overload: OpenTK.Mathematics.Matrix3x2d.Swizzle*
  nameWithType.vb: Matrix3x2d.Swizzle(Integer, Integer, Integer)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.Swizzle(Integer, Integer, Integer)
  name.vb: Swizzle(Integer, Integer, Integer)
- uid: OpenTK.Mathematics.Matrix3x2d.Swizzled(System.Int32,System.Int32,System.Int32)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Swizzled(System.Int32,System.Int32,System.Int32)
  id: Swizzled(System.Int32,System.Int32,System.Int32)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Swizzled(int, int, int)
  nameWithType: Matrix3x2d.Swizzled(int, int, int)
  fullName: OpenTK.Mathematics.Matrix3x2d.Swizzled(int, int, int)
  type: Method
  source:
    id: Swizzled
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 270
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a swizzled copy of this instance.
  example: []
  syntax:
    content: public readonly Matrix3x2d Swizzled(int rowForRow0, int rowForRow1, int rowForRow2)
    parameters:
    - id: rowForRow0
      type: System.Int32
      description: Which row to place in <xref href="OpenTK.Mathematics.Matrix3x2d.Row0" data-throw-if-not-resolved="false"></xref>.
    - id: rowForRow1
      type: System.Int32
      description: Which row to place in <xref href="OpenTK.Mathematics.Matrix3x2d.Row1" data-throw-if-not-resolved="false"></xref>.
    - id: rowForRow2
      type: System.Int32
      description: Which row to place in <xref href="OpenTK.Mathematics.Matrix3x2d.Row2" data-throw-if-not-resolved="false"></xref>.
    return:
      type: OpenTK.Mathematics.Matrix3x2d
      description: The swizzled copy.
    content.vb: Public Function Swizzled(rowForRow0 As Integer, rowForRow1 As Integer, rowForRow2 As Integer) As Matrix3x2d
  overload: OpenTK.Mathematics.Matrix3x2d.Swizzled*
  nameWithType.vb: Matrix3x2d.Swizzled(Integer, Integer, Integer)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.Swizzled(Integer, Integer, Integer)
  name.vb: Swizzled(Integer, Integer, Integer)
- uid: OpenTK.Mathematics.Matrix3x2d.CreateRotation(System.Double,OpenTK.Mathematics.Matrix3x2d@)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.CreateRotation(System.Double,OpenTK.Mathematics.Matrix3x2d@)
  id: CreateRotation(System.Double,OpenTK.Mathematics.Matrix3x2d@)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: CreateRotation(double, out Matrix3x2d)
  nameWithType: Matrix3x2d.CreateRotation(double, out Matrix3x2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.CreateRotation(double, out OpenTK.Mathematics.Matrix3x2d)
  type: Method
  source:
    id: CreateRotation
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 282
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Builds a rotation matrix.
  example: []
  syntax:
    content: public static void CreateRotation(double angle, out Matrix3x2d result)
    parameters:
    - id: angle
      type: System.Double
      description: The counter-clockwise angle in radians.
    - id: result
      type: OpenTK.Mathematics.Matrix3x2d
      description: The resulting Matrix3x2d instance.
    content.vb: Public Shared Sub CreateRotation(angle As Double, result As Matrix3x2d)
  overload: OpenTK.Mathematics.Matrix3x2d.CreateRotation*
  nameWithType.vb: Matrix3x2d.CreateRotation(Double, Matrix3x2d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.CreateRotation(Double, OpenTK.Mathematics.Matrix3x2d)
  name.vb: CreateRotation(Double, Matrix3x2d)
- uid: OpenTK.Mathematics.Matrix3x2d.CreateRotation(System.Double)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.CreateRotation(System.Double)
  id: CreateRotation(System.Double)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: CreateRotation(double)
  nameWithType: Matrix3x2d.CreateRotation(double)
  fullName: OpenTK.Mathematics.Matrix3x2d.CreateRotation(double)
  type: Method
  source:
    id: CreateRotation
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 300
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Builds a rotation matrix.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Matrix3x2d CreateRotation(double angle)
    parameters:
    - id: angle
      type: System.Double
      description: The counter-clockwise angle in radians.
    return:
      type: OpenTK.Mathematics.Matrix3x2d
      description: The resulting Matrix3x2d instance.
    content.vb: >-
      <Pure>

      Public Shared Function CreateRotation(angle As Double) As Matrix3x2d
  overload: OpenTK.Mathematics.Matrix3x2d.CreateRotation*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Matrix3x2d.CreateRotation(Double)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.CreateRotation(Double)
  name.vb: CreateRotation(Double)
- uid: OpenTK.Mathematics.Matrix3x2d.CreateScale(System.Double,OpenTK.Mathematics.Matrix3x2d@)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.CreateScale(System.Double,OpenTK.Mathematics.Matrix3x2d@)
  id: CreateScale(System.Double,OpenTK.Mathematics.Matrix3x2d@)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: CreateScale(double, out Matrix3x2d)
  nameWithType: Matrix3x2d.CreateScale(double, out Matrix3x2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.CreateScale(double, out OpenTK.Mathematics.Matrix3x2d)
  type: Method
  source:
    id: CreateScale
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 312
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Creates a scale matrix.
  example: []
  syntax:
    content: public static void CreateScale(double scale, out Matrix3x2d result)
    parameters:
    - id: scale
      type: System.Double
      description: Single scale factor for the x, y, and z axes.
    - id: result
      type: OpenTK.Mathematics.Matrix3x2d
      description: A scale matrix.
    content.vb: Public Shared Sub CreateScale(scale As Double, result As Matrix3x2d)
  overload: OpenTK.Mathematics.Matrix3x2d.CreateScale*
  nameWithType.vb: Matrix3x2d.CreateScale(Double, Matrix3x2d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.CreateScale(Double, OpenTK.Mathematics.Matrix3x2d)
  name.vb: CreateScale(Double, Matrix3x2d)
- uid: OpenTK.Mathematics.Matrix3x2d.CreateScale(System.Double)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.CreateScale(System.Double)
  id: CreateScale(System.Double)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: CreateScale(double)
  nameWithType: Matrix3x2d.CreateScale(double)
  fullName: OpenTK.Mathematics.Matrix3x2d.CreateScale(double)
  type: Method
  source:
    id: CreateScale
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 327
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Creates a scale matrix.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Matrix3x2d CreateScale(double scale)
    parameters:
    - id: scale
      type: System.Double
      description: Single scale factor for the x and y axes.
    return:
      type: OpenTK.Mathematics.Matrix3x2d
      description: A scale matrix.
    content.vb: >-
      <Pure>

      Public Shared Function CreateScale(scale As Double) As Matrix3x2d
  overload: OpenTK.Mathematics.Matrix3x2d.CreateScale*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Matrix3x2d.CreateScale(Double)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.CreateScale(Double)
  name.vb: CreateScale(Double)
- uid: OpenTK.Mathematics.Matrix3x2d.CreateScale(OpenTK.Mathematics.Vector2d,OpenTK.Mathematics.Matrix3x2d@)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.CreateScale(OpenTK.Mathematics.Vector2d,OpenTK.Mathematics.Matrix3x2d@)
  id: CreateScale(OpenTK.Mathematics.Vector2d,OpenTK.Mathematics.Matrix3x2d@)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: CreateScale(Vector2d, out Matrix3x2d)
  nameWithType: Matrix3x2d.CreateScale(Vector2d, out Matrix3x2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.CreateScale(OpenTK.Mathematics.Vector2d, out OpenTK.Mathematics.Matrix3x2d)
  type: Method
  source:
    id: CreateScale
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 339
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Creates a scale matrix.
  example: []
  syntax:
    content: public static void CreateScale(Vector2d scale, out Matrix3x2d result)
    parameters:
    - id: scale
      type: OpenTK.Mathematics.Vector2d
      description: Scale factors for the x and y axes.
    - id: result
      type: OpenTK.Mathematics.Matrix3x2d
      description: A scale matrix.
    content.vb: Public Shared Sub CreateScale(scale As Vector2d, result As Matrix3x2d)
  overload: OpenTK.Mathematics.Matrix3x2d.CreateScale*
  nameWithType.vb: Matrix3x2d.CreateScale(Vector2d, Matrix3x2d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.CreateScale(OpenTK.Mathematics.Vector2d, OpenTK.Mathematics.Matrix3x2d)
  name.vb: CreateScale(Vector2d, Matrix3x2d)
- uid: OpenTK.Mathematics.Matrix3x2d.CreateScale(OpenTK.Mathematics.Vector2d)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.CreateScale(OpenTK.Mathematics.Vector2d)
  id: CreateScale(OpenTK.Mathematics.Vector2d)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: CreateScale(Vector2d)
  nameWithType: Matrix3x2d.CreateScale(Vector2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.CreateScale(OpenTK.Mathematics.Vector2d)
  type: Method
  source:
    id: CreateScale
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 354
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Creates a scale matrix.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Matrix3x2d CreateScale(Vector2d scale)
    parameters:
    - id: scale
      type: OpenTK.Mathematics.Vector2d
      description: Scale factors for the x and y axes.
    return:
      type: OpenTK.Mathematics.Matrix3x2d
      description: A scale matrix.
    content.vb: >-
      <Pure>

      Public Shared Function CreateScale(scale As Vector2d) As Matrix3x2d
  overload: OpenTK.Mathematics.Matrix3x2d.CreateScale*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Matrix3x2d.CreateScale(System.Double,System.Double,OpenTK.Mathematics.Matrix3x2d@)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.CreateScale(System.Double,System.Double,OpenTK.Mathematics.Matrix3x2d@)
  id: CreateScale(System.Double,System.Double,OpenTK.Mathematics.Matrix3x2d@)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: CreateScale(double, double, out Matrix3x2d)
  nameWithType: Matrix3x2d.CreateScale(double, double, out Matrix3x2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.CreateScale(double, double, out OpenTK.Mathematics.Matrix3x2d)
  type: Method
  source:
    id: CreateScale
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 367
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Creates a scale matrix.
  example: []
  syntax:
    content: public static void CreateScale(double x, double y, out Matrix3x2d result)
    parameters:
    - id: x
      type: System.Double
      description: Scale factor for the x axis.
    - id: y
      type: System.Double
      description: Scale factor for the y axis.
    - id: result
      type: OpenTK.Mathematics.Matrix3x2d
      description: A scale matrix.
    content.vb: Public Shared Sub CreateScale(x As Double, y As Double, result As Matrix3x2d)
  overload: OpenTK.Mathematics.Matrix3x2d.CreateScale*
  nameWithType.vb: Matrix3x2d.CreateScale(Double, Double, Matrix3x2d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.CreateScale(Double, Double, OpenTK.Mathematics.Matrix3x2d)
  name.vb: CreateScale(Double, Double, Matrix3x2d)
- uid: OpenTK.Mathematics.Matrix3x2d.CreateScale(System.Double,System.Double)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.CreateScale(System.Double,System.Double)
  id: CreateScale(System.Double,System.Double)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: CreateScale(double, double)
  nameWithType: Matrix3x2d.CreateScale(double, double)
  fullName: OpenTK.Mathematics.Matrix3x2d.CreateScale(double, double)
  type: Method
  source:
    id: CreateScale
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 383
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Creates a scale matrix.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Matrix3x2d CreateScale(double x, double y)
    parameters:
    - id: x
      type: System.Double
      description: Scale factor for the x axis.
    - id: y
      type: System.Double
      description: Scale factor for the y axis.
    return:
      type: OpenTK.Mathematics.Matrix3x2d
      description: A scale matrix.
    content.vb: >-
      <Pure>

      Public Shared Function CreateScale(x As Double, y As Double) As Matrix3x2d
  overload: OpenTK.Mathematics.Matrix3x2d.CreateScale*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Matrix3x2d.CreateScale(Double, Double)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.CreateScale(Double, Double)
  name.vb: CreateScale(Double, Double)
- uid: OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d@,System.Double,OpenTK.Mathematics.Matrix3x2d@)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d@,System.Double,OpenTK.Mathematics.Matrix3x2d@)
  id: Mult(OpenTK.Mathematics.Matrix3x2d@,System.Double,OpenTK.Mathematics.Matrix3x2d@)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Mult(in Matrix3x2d, double, out Matrix3x2d)
  nameWithType: Matrix3x2d.Mult(in Matrix3x2d, double, out Matrix3x2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.Mult(in OpenTK.Mathematics.Matrix3x2d, double, out OpenTK.Mathematics.Matrix3x2d)
  type: Method
  source:
    id: Mult
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 396
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies and instance by a scalar.
  example: []
  syntax:
    content: public static void Mult(in Matrix3x2d left, double right, out Matrix3x2d result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Matrix3x2d
      description: The left operand of the multiplication.
    - id: right
      type: System.Double
      description: The right operand of the multiplication.
    - id: result
      type: OpenTK.Mathematics.Matrix3x2d
      description: A new instance that is the result of the multiplication.
    content.vb: Public Shared Sub Mult(left As Matrix3x2d, right As Double, result As Matrix3x2d)
  overload: OpenTK.Mathematics.Matrix3x2d.Mult*
  nameWithType.vb: Matrix3x2d.Mult(Matrix3x2d, Double, Matrix3x2d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d, Double, OpenTK.Mathematics.Matrix3x2d)
  name.vb: Mult(Matrix3x2d, Double, Matrix3x2d)
- uid: OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d,System.Double)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d,System.Double)
  id: Mult(OpenTK.Mathematics.Matrix3x2d,System.Double)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Mult(Matrix3x2d, double)
  nameWithType: Matrix3x2d.Mult(Matrix3x2d, double)
  fullName: OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d, double)
  type: Method
  source:
    id: Mult
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 412
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies and instance by a scalar.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Matrix3x2d Mult(Matrix3x2d left, double right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Matrix3x2d
      description: The left operand of the multiplication.
    - id: right
      type: System.Double
      description: The right operand of the multiplication.
    return:
      type: OpenTK.Mathematics.Matrix3x2d
      description: A new instance that is the result of the multiplication.
    content.vb: >-
      <Pure>

      Public Shared Function Mult(left As Matrix3x2d, right As Double) As Matrix3x2d
  overload: OpenTK.Mathematics.Matrix3x2d.Mult*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Matrix3x2d.Mult(Matrix3x2d, Double)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d, Double)
  name.vb: Mult(Matrix3x2d, Double)
- uid: OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix2d@,OpenTK.Mathematics.Matrix3x2d@)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix2d@,OpenTK.Mathematics.Matrix3x2d@)
  id: Mult(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix2d@,OpenTK.Mathematics.Matrix3x2d@)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Mult(in Matrix3x2d, in Matrix2d, out Matrix3x2d)
  nameWithType: Matrix3x2d.Mult(in Matrix3x2d, in Matrix2d, out Matrix3x2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.Mult(in OpenTK.Mathematics.Matrix3x2d, in OpenTK.Mathematics.Matrix2d, out OpenTK.Mathematics.Matrix3x2d)
  type: Method
  source:
    id: Mult
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 425
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies two instances.
  example: []
  syntax:
    content: public static void Mult(in Matrix3x2d left, in Matrix2d right, out Matrix3x2d result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Matrix3x2d
      description: The left operand of the multiplication.
    - id: right
      type: OpenTK.Mathematics.Matrix2d
      description: The right operand of the multiplication.
    - id: result
      type: OpenTK.Mathematics.Matrix3x2d
      description: A new instance that is the result of the multiplication.
    content.vb: Public Shared Sub Mult(left As Matrix3x2d, right As Matrix2d, result As Matrix3x2d)
  overload: OpenTK.Mathematics.Matrix3x2d.Mult*
  nameWithType.vb: Matrix3x2d.Mult(Matrix3x2d, Matrix2d, Matrix3x2d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix2d, OpenTK.Mathematics.Matrix3x2d)
  name.vb: Mult(Matrix3x2d, Matrix2d, Matrix3x2d)
- uid: OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2d)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2d)
  id: Mult(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2d)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Mult(Matrix3x2d, Matrix2d)
  nameWithType: Matrix3x2d.Mult(Matrix3x2d, Matrix2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix2d)
  type: Method
  source:
    id: Mult
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 452
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Matrix3x2d Mult(Matrix3x2d left, Matrix2d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Matrix3x2d
      description: The left operand of the multiplication.
    - id: right
      type: OpenTK.Mathematics.Matrix2d
      description: The right operand of the multiplication.
    return:
      type: OpenTK.Mathematics.Matrix3x2d
      description: A new instance that is the result of the multiplication.
    content.vb: >-
      <Pure>

      Public Shared Function Mult(left As Matrix3x2d, right As Matrix2d) As Matrix3x2d
  overload: OpenTK.Mathematics.Matrix3x2d.Mult*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix2x3d@,OpenTK.Mathematics.Matrix3d@)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix2x3d@,OpenTK.Mathematics.Matrix3d@)
  id: Mult(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix2x3d@,OpenTK.Mathematics.Matrix3d@)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Mult(in Matrix3x2d, in Matrix2x3d, out Matrix3d)
  nameWithType: Matrix3x2d.Mult(in Matrix3x2d, in Matrix2x3d, out Matrix3d)
  fullName: OpenTK.Mathematics.Matrix3x2d.Mult(in OpenTK.Mathematics.Matrix3x2d, in OpenTK.Mathematics.Matrix2x3d, out OpenTK.Mathematics.Matrix3d)
  type: Method
  source:
    id: Mult
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 465
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies two instances.
  example: []
  syntax:
    content: public static void Mult(in Matrix3x2d left, in Matrix2x3d right, out Matrix3d result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Matrix3x2d
      description: The left operand of the multiplication.
    - id: right
      type: OpenTK.Mathematics.Matrix2x3d
      description: The right operand of the multiplication.
    - id: result
      type: OpenTK.Mathematics.Matrix3d
      description: A new instance that is the result of the multiplication.
    content.vb: Public Shared Sub Mult(left As Matrix3x2d, right As Matrix2x3d, result As Matrix3d)
  overload: OpenTK.Mathematics.Matrix3x2d.Mult*
  nameWithType.vb: Matrix3x2d.Mult(Matrix3x2d, Matrix2x3d, Matrix3d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix2x3d, OpenTK.Mathematics.Matrix3d)
  name.vb: Mult(Matrix3x2d, Matrix2x3d, Matrix3d)
- uid: OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2x3d)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2x3d)
  id: Mult(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2x3d)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Mult(Matrix3x2d, Matrix2x3d)
  nameWithType: Matrix3x2d.Mult(Matrix3x2d, Matrix2x3d)
  fullName: OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix2x3d)
  type: Method
  source:
    id: Mult
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 497
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Matrix3d Mult(Matrix3x2d left, Matrix2x3d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Matrix3x2d
      description: The left operand of the multiplication.
    - id: right
      type: OpenTK.Mathematics.Matrix2x3d
      description: The right operand of the multiplication.
    return:
      type: OpenTK.Mathematics.Matrix3d
      description: A new instance that is the result of the multiplication.
    content.vb: >-
      <Pure>

      Public Shared Function Mult(left As Matrix3x2d, right As Matrix2x3d) As Matrix3d
  overload: OpenTK.Mathematics.Matrix3x2d.Mult*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix2x4d@,OpenTK.Mathematics.Matrix3x4d@)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix2x4d@,OpenTK.Mathematics.Matrix3x4d@)
  id: Mult(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix2x4d@,OpenTK.Mathematics.Matrix3x4d@)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Mult(in Matrix3x2d, in Matrix2x4d, out Matrix3x4d)
  nameWithType: Matrix3x2d.Mult(in Matrix3x2d, in Matrix2x4d, out Matrix3x4d)
  fullName: OpenTK.Mathematics.Matrix3x2d.Mult(in OpenTK.Mathematics.Matrix3x2d, in OpenTK.Mathematics.Matrix2x4d, out OpenTK.Mathematics.Matrix3x4d)
  type: Method
  source:
    id: Mult
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 510
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies two instances.
  example: []
  syntax:
    content: public static void Mult(in Matrix3x2d left, in Matrix2x4d right, out Matrix3x4d result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Matrix3x2d
      description: The left operand of the multiplication.
    - id: right
      type: OpenTK.Mathematics.Matrix2x4d
      description: The right operand of the multiplication.
    - id: result
      type: OpenTK.Mathematics.Matrix3x4d
      description: A new instance that is the result of the multiplication.
    content.vb: Public Shared Sub Mult(left As Matrix3x2d, right As Matrix2x4d, result As Matrix3x4d)
  overload: OpenTK.Mathematics.Matrix3x2d.Mult*
  nameWithType.vb: Matrix3x2d.Mult(Matrix3x2d, Matrix2x4d, Matrix3x4d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix2x4d, OpenTK.Mathematics.Matrix3x4d)
  name.vb: Mult(Matrix3x2d, Matrix2x4d, Matrix3x4d)
- uid: OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2x4d)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2x4d)
  id: Mult(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2x4d)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Mult(Matrix3x2d, Matrix2x4d)
  nameWithType: Matrix3x2d.Mult(Matrix3x2d, Matrix2x4d)
  fullName: OpenTK.Mathematics.Matrix3x2d.Mult(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix2x4d)
  type: Method
  source:
    id: Mult
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 547
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Multiplies two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Matrix3x4d Mult(Matrix3x2d left, Matrix2x4d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Matrix3x2d
      description: The left operand of the multiplication.
    - id: right
      type: OpenTK.Mathematics.Matrix2x4d
      description: The right operand of the multiplication.
    return:
      type: OpenTK.Mathematics.Matrix3x4d
      description: A new instance that is the result of the multiplication.
    content.vb: >-
      <Pure>

      Public Shared Function Mult(left As Matrix3x2d, right As Matrix2x4d) As Matrix3x4d
  overload: OpenTK.Mathematics.Matrix3x2d.Mult*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Matrix3x2d.Add(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix3x2d@)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Add(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix3x2d@)
  id: Add(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix3x2d@)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Add(in Matrix3x2d, in Matrix3x2d, out Matrix3x2d)
  nameWithType: Matrix3x2d.Add(in Matrix3x2d, in Matrix3x2d, out Matrix3x2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.Add(in OpenTK.Mathematics.Matrix3x2d, in OpenTK.Mathematics.Matrix3x2d, out OpenTK.Mathematics.Matrix3x2d)
  type: Method
  source:
    id: Add
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 560
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two instances.
  example: []
  syntax:
    content: public static void Add(in Matrix3x2d left, in Matrix3x2d right, out Matrix3x2d result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Matrix3x2d
      description: The left operand of the addition.
    - id: right
      type: OpenTK.Mathematics.Matrix3x2d
      description: The right operand of the addition.
    - id: result
      type: OpenTK.Mathematics.Matrix3x2d
      description: A new instance that is the result of the addition.
    content.vb: Public Shared Sub Add(left As Matrix3x2d, right As Matrix3x2d, result As Matrix3x2d)
  overload: OpenTK.Mathematics.Matrix3x2d.Add*
  nameWithType.vb: Matrix3x2d.Add(Matrix3x2d, Matrix3x2d, Matrix3x2d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.Add(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix3x2d)
  name.vb: Add(Matrix3x2d, Matrix3x2d, Matrix3x2d)
- uid: OpenTK.Mathematics.Matrix3x2d.Add(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Add(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  id: Add(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Add(Matrix3x2d, Matrix3x2d)
  nameWithType: Matrix3x2d.Add(Matrix3x2d, Matrix3x2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.Add(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix3x2d)
  type: Method
  source:
    id: Add
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 576
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Adds two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Matrix3x2d Add(Matrix3x2d left, Matrix3x2d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Matrix3x2d
      description: The left operand of the addition.
    - id: right
      type: OpenTK.Mathematics.Matrix3x2d
      description: The right operand of the addition.
    return:
      type: OpenTK.Mathematics.Matrix3x2d
      description: A new instance that is the result of the addition.
    content.vb: >-
      <Pure>

      Public Shared Function Add(left As Matrix3x2d, right As Matrix3x2d) As Matrix3x2d
  overload: OpenTK.Mathematics.Matrix3x2d.Add*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Matrix3x2d.Subtract(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix3x2d@)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Subtract(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix3x2d@)
  id: Subtract(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix3x2d@)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Subtract(in Matrix3x2d, in Matrix3x2d, out Matrix3x2d)
  nameWithType: Matrix3x2d.Subtract(in Matrix3x2d, in Matrix3x2d, out Matrix3x2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.Subtract(in OpenTK.Mathematics.Matrix3x2d, in OpenTK.Mathematics.Matrix3x2d, out OpenTK.Mathematics.Matrix3x2d)
  type: Method
  source:
    id: Subtract
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 589
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtracts two instances.
  example: []
  syntax:
    content: public static void Subtract(in Matrix3x2d left, in Matrix3x2d right, out Matrix3x2d result)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Matrix3x2d
      description: The left operand of the subtraction.
    - id: right
      type: OpenTK.Mathematics.Matrix3x2d
      description: The right operand of the subtraction.
    - id: result
      type: OpenTK.Mathematics.Matrix3x2d
      description: A new instance that is the result of the subtraction.
    content.vb: Public Shared Sub Subtract(left As Matrix3x2d, right As Matrix3x2d, result As Matrix3x2d)
  overload: OpenTK.Mathematics.Matrix3x2d.Subtract*
  nameWithType.vb: Matrix3x2d.Subtract(Matrix3x2d, Matrix3x2d, Matrix3x2d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.Subtract(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix3x2d)
  name.vb: Subtract(Matrix3x2d, Matrix3x2d, Matrix3x2d)
- uid: OpenTK.Mathematics.Matrix3x2d.Subtract(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Subtract(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  id: Subtract(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Subtract(Matrix3x2d, Matrix3x2d)
  nameWithType: Matrix3x2d.Subtract(Matrix3x2d, Matrix3x2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.Subtract(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix3x2d)
  type: Method
  source:
    id: Subtract
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 605
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Subtracts two instances.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Matrix3x2d Subtract(Matrix3x2d left, Matrix3x2d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Matrix3x2d
      description: The left operand of the subtraction.
    - id: right
      type: OpenTK.Mathematics.Matrix3x2d
      description: The right operand of the subtraction.
    return:
      type: OpenTK.Mathematics.Matrix3x2d
      description: A new instance that is the result of the subtraction.
    content.vb: >-
      <Pure>

      Public Shared Function Subtract(left As Matrix3x2d, right As Matrix3x2d) As Matrix3x2d
  overload: OpenTK.Mathematics.Matrix3x2d.Subtract*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Matrix3x2d.Transpose(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix2x3d@)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Transpose(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix2x3d@)
  id: Transpose(OpenTK.Mathematics.Matrix3x2d@,OpenTK.Mathematics.Matrix2x3d@)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Transpose(in Matrix3x2d, out Matrix2x3d)
  nameWithType: Matrix3x2d.Transpose(in Matrix3x2d, out Matrix2x3d)
  fullName: OpenTK.Mathematics.Matrix3x2d.Transpose(in OpenTK.Mathematics.Matrix3x2d, out OpenTK.Mathematics.Matrix2x3d)
  type: Method
  source:
    id: Transpose
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 617
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculate the transpose of the given matrix.
  example: []
  syntax:
    content: public static void Transpose(in Matrix3x2d mat, out Matrix2x3d result)
    parameters:
    - id: mat
      type: OpenTK.Mathematics.Matrix3x2d
      description: The matrix to transpose.
    - id: result
      type: OpenTK.Mathematics.Matrix2x3d
      description: The transpose of the given matrix.
    content.vb: Public Shared Sub Transpose(mat As Matrix3x2d, result As Matrix2x3d)
  overload: OpenTK.Mathematics.Matrix3x2d.Transpose*
  nameWithType.vb: Matrix3x2d.Transpose(Matrix3x2d, Matrix2x3d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.Transpose(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix2x3d)
  name.vb: Transpose(Matrix3x2d, Matrix2x3d)
- uid: OpenTK.Mathematics.Matrix3x2d.Transpose(OpenTK.Mathematics.Matrix3x2d)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Transpose(OpenTK.Mathematics.Matrix3x2d)
  id: Transpose(OpenTK.Mathematics.Matrix3x2d)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Transpose(Matrix3x2d)
  nameWithType: Matrix3x2d.Transpose(Matrix3x2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.Transpose(OpenTK.Mathematics.Matrix3x2d)
  type: Method
  source:
    id: Transpose
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 632
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Calculate the transpose of the given matrix.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Matrix2x3d Transpose(Matrix3x2d mat)
    parameters:
    - id: mat
      type: OpenTK.Mathematics.Matrix3x2d
      description: The matrix to transpose.
    return:
      type: OpenTK.Mathematics.Matrix2x3d
      description: The transpose of the given matrix.
    content.vb: >-
      <Pure>

      Public Shared Function Transpose(mat As Matrix3x2d) As Matrix2x3d
  overload: OpenTK.Mathematics.Matrix3x2d.Transpose*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
- uid: OpenTK.Mathematics.Matrix3x2d.Swizzle(OpenTK.Mathematics.Matrix3x2d,System.Int32,System.Int32,System.Int32)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Swizzle(OpenTK.Mathematics.Matrix3x2d,System.Int32,System.Int32,System.Int32)
  id: Swizzle(OpenTK.Mathematics.Matrix3x2d,System.Int32,System.Int32,System.Int32)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Swizzle(Matrix3x2d, int, int, int)
  nameWithType: Matrix3x2d.Swizzle(Matrix3x2d, int, int, int)
  fullName: OpenTK.Mathematics.Matrix3x2d.Swizzle(OpenTK.Mathematics.Matrix3x2d, int, int, int)
  type: Method
  source:
    id: Swizzle
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 648
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Swizzles a matrix, i.e. switches rows of the matrix.
  example: []
  syntax:
    content: public static Matrix3x2d Swizzle(Matrix3x2d mat, int rowForRow0, int rowForRow1, int rowForRow2)
    parameters:
    - id: mat
      type: OpenTK.Mathematics.Matrix3x2d
      description: The matrix to swizzle.
    - id: rowForRow0
      type: System.Int32
      description: Which row to place in <xref href="OpenTK.Mathematics.Matrix3x2d.Row0" data-throw-if-not-resolved="false"></xref>.
    - id: rowForRow1
      type: System.Int32
      description: Which row to place in <xref href="OpenTK.Mathematics.Matrix3x2d.Row1" data-throw-if-not-resolved="false"></xref>.
    - id: rowForRow2
      type: System.Int32
      description: Which row to place in <xref href="OpenTK.Mathematics.Matrix3x2d.Row2" data-throw-if-not-resolved="false"></xref>.
    return:
      type: OpenTK.Mathematics.Matrix3x2d
      description: The swizzled matrix.
    content.vb: Public Shared Function Swizzle(mat As Matrix3x2d, rowForRow0 As Integer, rowForRow1 As Integer, rowForRow2 As Integer) As Matrix3x2d
  overload: OpenTK.Mathematics.Matrix3x2d.Swizzle*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: If any of the rows are outside of the range [0, 2].
  nameWithType.vb: Matrix3x2d.Swizzle(Matrix3x2d, Integer, Integer, Integer)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.Swizzle(OpenTK.Mathematics.Matrix3x2d, Integer, Integer, Integer)
  name.vb: Swizzle(Matrix3x2d, Integer, Integer, Integer)
- uid: OpenTK.Mathematics.Matrix3x2d.Swizzle(OpenTK.Mathematics.Matrix3x2d@,System.Int32,System.Int32,System.Int32,OpenTK.Mathematics.Matrix3x2d@)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Swizzle(OpenTK.Mathematics.Matrix3x2d@,System.Int32,System.Int32,System.Int32,OpenTK.Mathematics.Matrix3x2d@)
  id: Swizzle(OpenTK.Mathematics.Matrix3x2d@,System.Int32,System.Int32,System.Int32,OpenTK.Mathematics.Matrix3x2d@)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Swizzle(in Matrix3x2d, int, int, int, out Matrix3x2d)
  nameWithType: Matrix3x2d.Swizzle(in Matrix3x2d, int, int, int, out Matrix3x2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.Swizzle(in OpenTK.Mathematics.Matrix3x2d, int, int, int, out OpenTK.Mathematics.Matrix3x2d)
  type: Method
  source:
    id: Swizzle
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 663
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Swizzles a matrix, i.e. switches rows of the matrix.
  example: []
  syntax:
    content: public static void Swizzle(in Matrix3x2d mat, int rowForRow0, int rowForRow1, int rowForRow2, out Matrix3x2d result)
    parameters:
    - id: mat
      type: OpenTK.Mathematics.Matrix3x2d
      description: The matrix to swizzle.
    - id: rowForRow0
      type: System.Int32
      description: Which row to place in <xref href="OpenTK.Mathematics.Matrix3x2d.Row0" data-throw-if-not-resolved="false"></xref>.
    - id: rowForRow1
      type: System.Int32
      description: Which row to place in <xref href="OpenTK.Mathematics.Matrix3x2d.Row1" data-throw-if-not-resolved="false"></xref>.
    - id: rowForRow2
      type: System.Int32
      description: Which row to place in <xref href="OpenTK.Mathematics.Matrix3x2d.Row2" data-throw-if-not-resolved="false"></xref>.
    - id: result
      type: OpenTK.Mathematics.Matrix3x2d
      description: The swizzled matrix.
    content.vb: Public Shared Sub Swizzle(mat As Matrix3x2d, rowForRow0 As Integer, rowForRow1 As Integer, rowForRow2 As Integer, result As Matrix3x2d)
  overload: OpenTK.Mathematics.Matrix3x2d.Swizzle*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: If any of the rows are outside of the range [0, 2].
  nameWithType.vb: Matrix3x2d.Swizzle(Matrix3x2d, Integer, Integer, Integer, Matrix3x2d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.Swizzle(OpenTK.Mathematics.Matrix3x2d, Integer, Integer, Integer, OpenTK.Mathematics.Matrix3x2d)
  name.vb: Swizzle(Matrix3x2d, Integer, Integer, Integer, Matrix3x2d)
- uid: OpenTK.Mathematics.Matrix3x2d.op_Multiply(System.Double,OpenTK.Mathematics.Matrix3x2d)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.op_Multiply(System.Double,OpenTK.Mathematics.Matrix3x2d)
  id: op_Multiply(System.Double,OpenTK.Mathematics.Matrix3x2d)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: operator *(double, Matrix3x2d)
  nameWithType: Matrix3x2d.operator *(double, Matrix3x2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.operator *(double, OpenTK.Mathematics.Matrix3x2d)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 696
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scalar multiplication.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Matrix3x2d operator *(double left, Matrix3x2d right)
    parameters:
    - id: left
      type: System.Double
      description: left-hand operand.
    - id: right
      type: OpenTK.Mathematics.Matrix3x2d
      description: right-hand operand.
    return:
      type: OpenTK.Mathematics.Matrix3x2d
      description: A new Matrix3x2d which holds the result of the multiplication.
    content.vb: >-
      <Pure>

      Public Shared Operator *(left As Double, right As Matrix3x2d) As Matrix3x2d
  overload: OpenTK.Mathematics.Matrix3x2d.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Matrix3x2d.*(Double, Matrix3x2d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.*(Double, OpenTK.Mathematics.Matrix3x2d)
  name.vb: '*(Double, Matrix3x2d)'
- uid: OpenTK.Mathematics.Matrix3x2d.op_Multiply(OpenTK.Mathematics.Matrix3x2d,System.Double)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.op_Multiply(OpenTK.Mathematics.Matrix3x2d,System.Double)
  id: op_Multiply(OpenTK.Mathematics.Matrix3x2d,System.Double)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: operator *(Matrix3x2d, double)
  nameWithType: Matrix3x2d.operator *(Matrix3x2d, double)
  fullName: OpenTK.Mathematics.Matrix3x2d.operator *(OpenTK.Mathematics.Matrix3x2d, double)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 708
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Scalar multiplication.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Matrix3x2d operator *(Matrix3x2d left, double right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Matrix3x2d
      description: left-hand operand.
    - id: right
      type: System.Double
      description: right-hand operand.
    return:
      type: OpenTK.Mathematics.Matrix3x2d
      description: A new Matrix3x2d which holds the result of the multiplication.
    content.vb: >-
      <Pure>

      Public Shared Operator *(left As Matrix3x2d, right As Double) As Matrix3x2d
  overload: OpenTK.Mathematics.Matrix3x2d.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Matrix3x2d.*(Matrix3x2d, Double)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.*(OpenTK.Mathematics.Matrix3x2d, Double)
  name.vb: '*(Matrix3x2d, Double)'
- uid: OpenTK.Mathematics.Matrix3x2d.op_Multiply(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2d)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.op_Multiply(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2d)
  id: op_Multiply(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2d)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: operator *(Matrix3x2d, Matrix2d)
  nameWithType: Matrix3x2d.operator *(Matrix3x2d, Matrix2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.operator *(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix2d)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 720
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Matrix multiplication.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Matrix3x2d operator *(Matrix3x2d left, Matrix2d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Matrix3x2d
      description: left-hand operand.
    - id: right
      type: OpenTK.Mathematics.Matrix2d
      description: right-hand operand.
    return:
      type: OpenTK.Mathematics.Matrix3x2d
      description: A new Matrix3x2d which holds the result of the multiplication.
    content.vb: >-
      <Pure>

      Public Shared Operator *(left As Matrix3x2d, right As Matrix2d) As Matrix3x2d
  overload: OpenTK.Mathematics.Matrix3x2d.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Matrix3x2d.*(Matrix3x2d, Matrix2d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.*(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix2d)
  name.vb: '*(Matrix3x2d, Matrix2d)'
- uid: OpenTK.Mathematics.Matrix3x2d.op_Multiply(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2x3d)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.op_Multiply(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2x3d)
  id: op_Multiply(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2x3d)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: operator *(Matrix3x2d, Matrix2x3d)
  nameWithType: Matrix3x2d.operator *(Matrix3x2d, Matrix2x3d)
  fullName: OpenTK.Mathematics.Matrix3x2d.operator *(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix2x3d)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 732
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Matrix multiplication.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Matrix3d operator *(Matrix3x2d left, Matrix2x3d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Matrix3x2d
      description: left-hand operand.
    - id: right
      type: OpenTK.Mathematics.Matrix2x3d
      description: right-hand operand.
    return:
      type: OpenTK.Mathematics.Matrix3d
      description: A new Matrix3d which holds the result of the multiplication.
    content.vb: >-
      <Pure>

      Public Shared Operator *(left As Matrix3x2d, right As Matrix2x3d) As Matrix3d
  overload: OpenTK.Mathematics.Matrix3x2d.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Matrix3x2d.*(Matrix3x2d, Matrix2x3d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.*(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix2x3d)
  name.vb: '*(Matrix3x2d, Matrix2x3d)'
- uid: OpenTK.Mathematics.Matrix3x2d.op_Multiply(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2x4d)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.op_Multiply(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2x4d)
  id: op_Multiply(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix2x4d)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: operator *(Matrix3x2d, Matrix2x4d)
  nameWithType: Matrix3x2d.operator *(Matrix3x2d, Matrix2x4d)
  fullName: OpenTK.Mathematics.Matrix3x2d.operator *(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix2x4d)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 744
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Matrix multiplication.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Matrix3x4d operator *(Matrix3x2d left, Matrix2x4d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Matrix3x2d
      description: left-hand operand.
    - id: right
      type: OpenTK.Mathematics.Matrix2x4d
      description: right-hand operand.
    return:
      type: OpenTK.Mathematics.Matrix3x4d
      description: A new Matrix3x4 which holds the result of the multiplication.
    content.vb: >-
      <Pure>

      Public Shared Operator *(left As Matrix3x2d, right As Matrix2x4d) As Matrix3x4d
  overload: OpenTK.Mathematics.Matrix3x2d.op_Multiply*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Matrix3x2d.*(Matrix3x2d, Matrix2x4d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.*(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix2x4d)
  name.vb: '*(Matrix3x2d, Matrix2x4d)'
- uid: OpenTK.Mathematics.Matrix3x2d.op_Addition(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.op_Addition(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  id: op_Addition(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: operator +(Matrix3x2d, Matrix3x2d)
  nameWithType: Matrix3x2d.operator +(Matrix3x2d, Matrix3x2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.operator +(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix3x2d)
  type: Operator
  source:
    id: op_Addition
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 756
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Matrix addition.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Matrix3x2d operator +(Matrix3x2d left, Matrix3x2d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Matrix3x2d
      description: left-hand operand.
    - id: right
      type: OpenTK.Mathematics.Matrix3x2d
      description: right-hand operand.
    return:
      type: OpenTK.Mathematics.Matrix3x2d
      description: A new Matrix3x2d which holds the result of the addition.
    content.vb: >-
      <Pure>

      Public Shared Operator +(left As Matrix3x2d, right As Matrix3x2d) As Matrix3x2d
  overload: OpenTK.Mathematics.Matrix3x2d.op_Addition*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Matrix3x2d.+(Matrix3x2d, Matrix3x2d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.+(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix3x2d)
  name.vb: +(Matrix3x2d, Matrix3x2d)
- uid: OpenTK.Mathematics.Matrix3x2d.op_Subtraction(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.op_Subtraction(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  id: op_Subtraction(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: operator -(Matrix3x2d, Matrix3x2d)
  nameWithType: Matrix3x2d.operator -(Matrix3x2d, Matrix3x2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.operator -(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix3x2d)
  type: Operator
  source:
    id: op_Subtraction
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 768
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Matrix subtraction.
  example: []
  syntax:
    content: >-
      [Pure]

      public static Matrix3x2d operator -(Matrix3x2d left, Matrix3x2d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Matrix3x2d
      description: left-hand operand.
    - id: right
      type: OpenTK.Mathematics.Matrix3x2d
      description: right-hand operand.
    return:
      type: OpenTK.Mathematics.Matrix3x2d
      description: A new Matrix3x2d which holds the result of the subtraction.
    content.vb: >-
      <Pure>

      Public Shared Operator -(left As Matrix3x2d, right As Matrix3x2d) As Matrix3x2d
  overload: OpenTK.Mathematics.Matrix3x2d.op_Subtraction*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Matrix3x2d.-(Matrix3x2d, Matrix3x2d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.-(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix3x2d)
  name.vb: -(Matrix3x2d, Matrix3x2d)
- uid: OpenTK.Mathematics.Matrix3x2d.op_Equality(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.op_Equality(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  id: op_Equality(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: operator ==(Matrix3x2d, Matrix3x2d)
  nameWithType: Matrix3x2d.operator ==(Matrix3x2d, Matrix3x2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.operator ==(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix3x2d)
  type: Operator
  source:
    id: op_Equality
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 780
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compares two instances for equality.
  example: []
  syntax:
    content: >-
      [Pure]

      public static bool operator ==(Matrix3x2d left, Matrix3x2d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Matrix3x2d
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Matrix3x2d
      description: The second instance.
    return:
      type: System.Boolean
      description: True, if left equals right; false otherwise.
    content.vb: >-
      <Pure>

      Public Shared Operator =(left As Matrix3x2d, right As Matrix3x2d) As Boolean
  overload: OpenTK.Mathematics.Matrix3x2d.op_Equality*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Matrix3x2d.=(Matrix3x2d, Matrix3x2d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.=(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix3x2d)
  name.vb: =(Matrix3x2d, Matrix3x2d)
- uid: OpenTK.Mathematics.Matrix3x2d.op_Inequality(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.op_Inequality(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  id: op_Inequality(OpenTK.Mathematics.Matrix3x2d,OpenTK.Mathematics.Matrix3x2d)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: operator !=(Matrix3x2d, Matrix3x2d)
  nameWithType: Matrix3x2d.operator !=(Matrix3x2d, Matrix3x2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.operator !=(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix3x2d)
  type: Operator
  source:
    id: op_Inequality
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 792
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Compares two instances for inequality.
  example: []
  syntax:
    content: >-
      [Pure]

      public static bool operator !=(Matrix3x2d left, Matrix3x2d right)
    parameters:
    - id: left
      type: OpenTK.Mathematics.Matrix3x2d
      description: The first instance.
    - id: right
      type: OpenTK.Mathematics.Matrix3x2d
      description: The second instance.
    return:
      type: System.Boolean
      description: True, if left does not equal right; false otherwise.
    content.vb: >-
      <Pure>

      Public Shared Operator <>(left As Matrix3x2d, right As Matrix3x2d) As Boolean
  overload: OpenTK.Mathematics.Matrix3x2d.op_Inequality*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Matrix3x2d.<>(Matrix3x2d, Matrix3x2d)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.<>(OpenTK.Mathematics.Matrix3x2d, OpenTK.Mathematics.Matrix3x2d)
  name.vb: <>(Matrix3x2d, Matrix3x2d)
- uid: OpenTK.Mathematics.Matrix3x2d.ToString
  commentId: M:OpenTK.Mathematics.Matrix3x2d.ToString
  id: ToString
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Matrix3x2d.ToString()
  fullName: OpenTK.Mathematics.Matrix3x2d.ToString()
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 802
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns a System.String that represents the current Matrix3d.
  example: []
  syntax:
    content: public override readonly string ToString()
    return:
      type: System.String
      description: The string representation of the matrix.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: OpenTK.Mathematics.Matrix3x2d.ToString*
- uid: OpenTK.Mathematics.Matrix3x2d.ToString(System.String)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.ToString(System.String)
  id: ToString(System.String)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: Matrix3x2d.ToString(string)
  fullName: OpenTK.Mathematics.Matrix3x2d.ToString(string)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 808
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public readonly string ToString(string format)
    parameters:
    - id: format
      type: System.String
      description: >-
        The format to use.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to use the default format defined for the type of the <xref href="System.IFormattable" data-throw-if-not-resolved="false"></xref> implementation.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(format As String) As String
  overload: OpenTK.Mathematics.Matrix3x2d.ToString*
  nameWithType.vb: Matrix3x2d.ToString(String)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.ToString(String)
  name.vb: ToString(String)
- uid: OpenTK.Mathematics.Matrix3x2d.ToString(System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: Matrix3x2d.ToString(IFormatProvider)
  fullName: OpenTK.Mathematics.Matrix3x2d.ToString(System.IFormatProvider)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 814
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public readonly string ToString(IFormatProvider formatProvider)
    parameters:
    - id: formatProvider
      type: System.IFormatProvider
      description: >-
        The provider to use to format the value.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Matrix3x2d.ToString*
- uid: OpenTK.Mathematics.Matrix3x2d.ToString(System.String,System.IFormatProvider)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: ToString(string, IFormatProvider)
  nameWithType: Matrix3x2d.ToString(string, IFormatProvider)
  fullName: OpenTK.Mathematics.Matrix3x2d.ToString(string, System.IFormatProvider)
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 820
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Formats the value of the current instance using the specified format.
  example: []
  syntax:
    content: public readonly string ToString(string format, IFormatProvider formatProvider)
    parameters:
    - id: format
      type: System.String
      description: >-
        The format to use.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to use the default format defined for the type of the <xref href="System.IFormattable" data-throw-if-not-resolved="false"></xref> implementation.
    - id: formatProvider
      type: System.IFormatProvider
      description: >-
        The provider to use to format the value.  

         -or-  

         A null reference (<code>Nothing</code> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.
    return:
      type: System.String
      description: The value of the current instance in the specified format.
    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String
  overload: OpenTK.Mathematics.Matrix3x2d.ToString*
  implements:
  - System.IFormattable.ToString(System.String,System.IFormatProvider)
  nameWithType.vb: Matrix3x2d.ToString(String, IFormatProvider)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
- uid: OpenTK.Mathematics.Matrix3x2d.GetHashCode
  commentId: M:OpenTK.Mathematics.Matrix3x2d.GetHashCode
  id: GetHashCode
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Matrix3x2d.GetHashCode()
  fullName: OpenTK.Mathematics.Matrix3x2d.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 832
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Returns the hashcode for this instance.
  example: []
  syntax:
    content: public override readonly int GetHashCode()
    return:
      type: System.Int32
      description: A System.Int32 containing the unique hashcode for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: OpenTK.Mathematics.Matrix3x2d.GetHashCode*
- uid: OpenTK.Mathematics.Matrix3x2d.Equals(System.Object)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Equals(System.Object)
  id: Equals(System.Object)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Matrix3x2d.Equals(object)
  fullName: OpenTK.Mathematics.Matrix3x2d.Equals(object)
  type: Method
  source:
    id: Equals
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 842
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: >-
      [Pure]

      public override readonly bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare to.
    return:
      type: System.Boolean
      description: True if the instances are equal; false otherwise.
    content.vb: >-
      <Pure>

      Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: OpenTK.Mathematics.Matrix3x2d.Equals*
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
  nameWithType.vb: Matrix3x2d.Equals(Object)
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.Equals(Object)
  name.vb: Equals(Object)
- uid: OpenTK.Mathematics.Matrix3x2d.Equals(OpenTK.Mathematics.Matrix3x2d)
  commentId: M:OpenTK.Mathematics.Matrix3x2d.Equals(OpenTK.Mathematics.Matrix3x2d)
  id: Equals(OpenTK.Mathematics.Matrix3x2d)
  parent: OpenTK.Mathematics.Matrix3x2d
  langs:
  - csharp
  - vb
  name: Equals(Matrix3x2d)
  nameWithType: Matrix3x2d.Equals(Matrix3x2d)
  fullName: OpenTK.Mathematics.Matrix3x2d.Equals(OpenTK.Mathematics.Matrix3x2d)
  type: Method
  source:
    id: Equals
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Mathematics\Matrix\Matrix3x2d.cs
    startLine: 853
  assemblies:
  - OpenTK.Mathematics
  namespace: OpenTK.Mathematics
  summary: Indicates whether the current matrix is equal to another matrix.
  example: []
  syntax:
    content: >-
      [Pure]

      public readonly bool Equals(Matrix3x2d other)
    parameters:
    - id: other
      type: OpenTK.Mathematics.Matrix3x2d
      description: An matrix to compare with this matrix.
    return:
      type: System.Boolean
      description: true if the current matrix is equal to the matrix parameter; otherwise, false.
    content.vb: >-
      <Pure>

      Public Function Equals(other As Matrix3x2d) As Boolean
  overload: OpenTK.Mathematics.Matrix3x2d.Equals*
  implements:
  - System.IEquatable{OpenTK.Mathematics.Matrix3x2d}.Equals(OpenTK.Mathematics.Matrix3x2d)
  attributes:
  - type: System.Diagnostics.Contracts.PureAttribute
    ctor: System.Diagnostics.Contracts.PureAttribute.#ctor
    arguments: []
references:
- uid: OpenTK.Mathematics
  commentId: N:OpenTK.Mathematics
  href: OpenTK.html
  name: OpenTK.Mathematics
  nameWithType: OpenTK.Mathematics
  fullName: OpenTK.Mathematics
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Mathematics
    name: Mathematics
    href: OpenTK.Mathematics.html
- uid: System.IEquatable{OpenTK.Mathematics.Matrix3x2d}
  commentId: T:System.IEquatable{OpenTK.Mathematics.Matrix3x2d}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Matrix3x2d>
  nameWithType: IEquatable<Matrix3x2d>
  fullName: System.IEquatable<OpenTK.Mathematics.Matrix3x2d>
  nameWithType.vb: IEquatable(Of Matrix3x2d)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Matrix3x2d)
  name.vb: IEquatable(Of Matrix3x2d)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: OpenTK.Mathematics.Matrix3x2d
    name: Matrix3x2d
    href: OpenTK.Mathematics.Matrix3x2d.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: OpenTK.Mathematics.Matrix3x2d
    name: Matrix3x2d
    href: OpenTK.Mathematics.Matrix3x2d.html
  - name: )
- uid: System.IFormattable
  commentId: T:System.IFormattable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable
  name: IFormattable
  nameWithType: IFormattable
  fullName: System.IFormattable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: OpenTK.Mathematics.Vector2d
  commentId: T:OpenTK.Mathematics.Vector2d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector2d.html
  name: Vector2d
  nameWithType: Vector2d
  fullName: OpenTK.Mathematics.Vector2d
- uid: OpenTK.Mathematics.Matrix3x2d
  commentId: T:OpenTK.Mathematics.Matrix3x2d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Matrix3x2d.html
  name: Matrix3x2d
  nameWithType: Matrix3x2d
  fullName: OpenTK.Mathematics.Matrix3x2d
- uid: OpenTK.Mathematics.Matrix3x2d.#ctor*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.#ctor
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d__ctor_OpenTK_Mathematics_Vector2d_OpenTK_Mathematics_Vector2d_OpenTK_Mathematics_Vector2d_
  name: Matrix3x2d
  nameWithType: Matrix3x2d.Matrix3x2d
  fullName: OpenTK.Mathematics.Matrix3x2d.Matrix3x2d
  nameWithType.vb: Matrix3x2d.New
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.New
  name.vb: New
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: OpenTK.Mathematics.Matrix3x2d.Column0*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.Column0
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_Column0
  name: Column0
  nameWithType: Matrix3x2d.Column0
  fullName: OpenTK.Mathematics.Matrix3x2d.Column0
- uid: OpenTK.Mathematics.Vector3d
  commentId: T:OpenTK.Mathematics.Vector3d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Vector3d.html
  name: Vector3d
  nameWithType: Vector3d
  fullName: OpenTK.Mathematics.Vector3d
- uid: OpenTK.Mathematics.Matrix3x2d.Column1*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.Column1
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_Column1
  name: Column1
  nameWithType: Matrix3x2d.Column1
  fullName: OpenTK.Mathematics.Matrix3x2d.Column1
- uid: OpenTK.Mathematics.Matrix3x2d.M11*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.M11
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_M11
  name: M11
  nameWithType: Matrix3x2d.M11
  fullName: OpenTK.Mathematics.Matrix3x2d.M11
- uid: OpenTK.Mathematics.Matrix3x2d.M12*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.M12
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_M12
  name: M12
  nameWithType: Matrix3x2d.M12
  fullName: OpenTK.Mathematics.Matrix3x2d.M12
- uid: OpenTK.Mathematics.Matrix3x2d.M21*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.M21
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_M21
  name: M21
  nameWithType: Matrix3x2d.M21
  fullName: OpenTK.Mathematics.Matrix3x2d.M21
- uid: OpenTK.Mathematics.Matrix3x2d.M22*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.M22
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_M22
  name: M22
  nameWithType: Matrix3x2d.M22
  fullName: OpenTK.Mathematics.Matrix3x2d.M22
- uid: OpenTK.Mathematics.Matrix3x2d.M31*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.M31
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_M31
  name: M31
  nameWithType: Matrix3x2d.M31
  fullName: OpenTK.Mathematics.Matrix3x2d.M31
- uid: OpenTK.Mathematics.Matrix3x2d.M32*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.M32
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_M32
  name: M32
  nameWithType: Matrix3x2d.M32
  fullName: OpenTK.Mathematics.Matrix3x2d.M32
- uid: OpenTK.Mathematics.Matrix3x2d.Diagonal*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.Diagonal
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_Diagonal
  name: Diagonal
  nameWithType: Matrix3x2d.Diagonal
  fullName: OpenTK.Mathematics.Matrix3x2d.Diagonal
- uid: OpenTK.Mathematics.Matrix3x2d.Trace*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.Trace
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_Trace
  name: Trace
  nameWithType: Matrix3x2d.Trace
  fullName: OpenTK.Mathematics.Matrix3x2d.Trace
- uid: OpenTK.Mathematics.Matrix3x2d.Item*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.Item
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_Item_System_Int32_System_Int32_
  name: this
  nameWithType: Matrix3x2d.this
  fullName: OpenTK.Mathematics.Matrix3x2d.this
  nameWithType.vb: Matrix3x2d.this[]
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.this[]
  name.vb: this[]
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: OpenTK.Mathematics.Matrix3x2d.Transposed*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.Transposed
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_Transposed
  name: Transposed
  nameWithType: Matrix3x2d.Transposed
  fullName: OpenTK.Mathematics.Matrix3x2d.Transposed
- uid: OpenTK.Mathematics.Matrix2x3d
  commentId: T:OpenTK.Mathematics.Matrix2x3d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Matrix2x3d.html
  name: Matrix2x3d
  nameWithType: Matrix2x3d
  fullName: OpenTK.Mathematics.Matrix2x3d
- uid: OpenTK.Mathematics.Matrix3x2d.Row0
  commentId: F:OpenTK.Mathematics.Matrix3x2d.Row0
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_Row0
  name: Row0
  nameWithType: Matrix3x2d.Row0
  fullName: OpenTK.Mathematics.Matrix3x2d.Row0
- uid: OpenTK.Mathematics.Matrix3x2d.Row1
  commentId: F:OpenTK.Mathematics.Matrix3x2d.Row1
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_Row1
  name: Row1
  nameWithType: Matrix3x2d.Row1
  fullName: OpenTK.Mathematics.Matrix3x2d.Row1
- uid: OpenTK.Mathematics.Matrix3x2d.Row2
  commentId: F:OpenTK.Mathematics.Matrix3x2d.Row2
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_Row2
  name: Row2
  nameWithType: Matrix3x2d.Row2
  fullName: OpenTK.Mathematics.Matrix3x2d.Row2
- uid: OpenTK.Mathematics.Matrix3x2d.Swizzle*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.Swizzle
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_Swizzle_System_Int32_System_Int32_System_Int32_
  name: Swizzle
  nameWithType: Matrix3x2d.Swizzle
  fullName: OpenTK.Mathematics.Matrix3x2d.Swizzle
- uid: OpenTK.Mathematics.Matrix3x2d.Swizzled*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.Swizzled
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_Swizzled_System_Int32_System_Int32_System_Int32_
  name: Swizzled
  nameWithType: Matrix3x2d.Swizzled
  fullName: OpenTK.Mathematics.Matrix3x2d.Swizzled
- uid: OpenTK.Mathematics.Matrix3x2d.CreateRotation*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.CreateRotation
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_CreateRotation_System_Double_OpenTK_Mathematics_Matrix3x2d__
  name: CreateRotation
  nameWithType: Matrix3x2d.CreateRotation
  fullName: OpenTK.Mathematics.Matrix3x2d.CreateRotation
- uid: OpenTK.Mathematics.Matrix3x2d.CreateScale*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.CreateScale
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_CreateScale_System_Double_OpenTK_Mathematics_Matrix3x2d__
  name: CreateScale
  nameWithType: Matrix3x2d.CreateScale
  fullName: OpenTK.Mathematics.Matrix3x2d.CreateScale
- uid: OpenTK.Mathematics.Matrix3x2d.Mult*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.Mult
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_Mult_OpenTK_Mathematics_Matrix3x2d__System_Double_OpenTK_Mathematics_Matrix3x2d__
  name: Mult
  nameWithType: Matrix3x2d.Mult
  fullName: OpenTK.Mathematics.Matrix3x2d.Mult
- uid: OpenTK.Mathematics.Matrix2d
  commentId: T:OpenTK.Mathematics.Matrix2d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Matrix2d.html
  name: Matrix2d
  nameWithType: Matrix2d
  fullName: OpenTK.Mathematics.Matrix2d
- uid: OpenTK.Mathematics.Matrix3d
  commentId: T:OpenTK.Mathematics.Matrix3d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Matrix3d.html
  name: Matrix3d
  nameWithType: Matrix3d
  fullName: OpenTK.Mathematics.Matrix3d
- uid: OpenTK.Mathematics.Matrix2x4d
  commentId: T:OpenTK.Mathematics.Matrix2x4d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Matrix2x4d.html
  name: Matrix2x4d
  nameWithType: Matrix2x4d
  fullName: OpenTK.Mathematics.Matrix2x4d
- uid: OpenTK.Mathematics.Matrix3x4d
  commentId: T:OpenTK.Mathematics.Matrix3x4d
  parent: OpenTK.Mathematics
  href: OpenTK.Mathematics.Matrix3x4d.html
  name: Matrix3x4d
  nameWithType: Matrix3x4d
  fullName: OpenTK.Mathematics.Matrix3x4d
- uid: OpenTK.Mathematics.Matrix3x2d.Add*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.Add
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_Add_OpenTK_Mathematics_Matrix3x2d__OpenTK_Mathematics_Matrix3x2d__OpenTK_Mathematics_Matrix3x2d__
  name: Add
  nameWithType: Matrix3x2d.Add
  fullName: OpenTK.Mathematics.Matrix3x2d.Add
- uid: OpenTK.Mathematics.Matrix3x2d.Subtract*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.Subtract
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_Subtract_OpenTK_Mathematics_Matrix3x2d__OpenTK_Mathematics_Matrix3x2d__OpenTK_Mathematics_Matrix3x2d__
  name: Subtract
  nameWithType: Matrix3x2d.Subtract
  fullName: OpenTK.Mathematics.Matrix3x2d.Subtract
- uid: OpenTK.Mathematics.Matrix3x2d.Transpose*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.Transpose
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_Transpose_OpenTK_Mathematics_Matrix3x2d__OpenTK_Mathematics_Matrix2x3d__
  name: Transpose
  nameWithType: Matrix3x2d.Transpose
  fullName: OpenTK.Mathematics.Matrix3x2d.Transpose
- uid: System.IndexOutOfRangeException
  commentId: T:System.IndexOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.indexoutofrangeexception
  name: IndexOutOfRangeException
  nameWithType: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
- uid: OpenTK.Mathematics.Matrix3x2d.op_Multiply*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.op_Multiply
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_op_Multiply_System_Double_OpenTK_Mathematics_Matrix3x2d_
  name: operator *
  nameWithType: Matrix3x2d.operator *
  fullName: OpenTK.Mathematics.Matrix3x2d.operator *
  nameWithType.vb: Matrix3x2d.*
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Matrix3x2d.op_Multiply*
    name: '*'
    href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_op_Multiply_System_Double_OpenTK_Mathematics_Matrix3x2d_
- uid: OpenTK.Mathematics.Matrix3x2d.op_Addition*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.op_Addition
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_op_Addition_OpenTK_Mathematics_Matrix3x2d_OpenTK_Mathematics_Matrix3x2d_
  name: operator +
  nameWithType: Matrix3x2d.operator +
  fullName: OpenTK.Mathematics.Matrix3x2d.operator +
  nameWithType.vb: Matrix3x2d.+
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Matrix3x2d.op_Addition*
    name: +
    href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_op_Addition_OpenTK_Mathematics_Matrix3x2d_OpenTK_Mathematics_Matrix3x2d_
- uid: OpenTK.Mathematics.Matrix3x2d.op_Subtraction*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.op_Subtraction
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_op_Subtraction_OpenTK_Mathematics_Matrix3x2d_OpenTK_Mathematics_Matrix3x2d_
  name: operator -
  nameWithType: Matrix3x2d.operator -
  fullName: OpenTK.Mathematics.Matrix3x2d.operator -
  nameWithType.vb: Matrix3x2d.-
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Matrix3x2d.op_Subtraction*
    name: '-'
    href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_op_Subtraction_OpenTK_Mathematics_Matrix3x2d_OpenTK_Mathematics_Matrix3x2d_
- uid: OpenTK.Mathematics.Matrix3x2d.op_Equality*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.op_Equality
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_op_Equality_OpenTK_Mathematics_Matrix3x2d_OpenTK_Mathematics_Matrix3x2d_
  name: operator ==
  nameWithType: Matrix3x2d.operator ==
  fullName: OpenTK.Mathematics.Matrix3x2d.operator ==
  nameWithType.vb: Matrix3x2d.=
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Matrix3x2d.op_Equality*
    name: ==
    href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_op_Equality_OpenTK_Mathematics_Matrix3x2d_OpenTK_Mathematics_Matrix3x2d_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenTK.Mathematics.Matrix3x2d.op_Inequality*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.op_Inequality
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_op_Inequality_OpenTK_Mathematics_Matrix3x2d_OpenTK_Mathematics_Matrix3x2d_
  name: operator !=
  nameWithType: Matrix3x2d.operator !=
  fullName: OpenTK.Mathematics.Matrix3x2d.operator !=
  nameWithType.vb: Matrix3x2d.<>
  fullName.vb: OpenTK.Mathematics.Matrix3x2d.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: OpenTK.Mathematics.Matrix3x2d.op_Inequality*
    name: '!='
    href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_op_Inequality_OpenTK_Mathematics_Matrix3x2d_OpenTK_Mathematics_Matrix3x2d_
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Matrix3x2d.ToString*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.ToString
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_ToString
  name: ToString
  nameWithType: Matrix3x2d.ToString
  fullName: OpenTK.Mathematics.Matrix3x2d.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
  commentId: M:System.IFormattable.ToString(System.String,System.IFormatProvider)
  parent: System.IFormattable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  name: ToString(string, IFormatProvider)
  nameWithType: IFormattable.ToString(string, IFormatProvider)
  fullName: System.IFormattable.ToString(string, System.IFormatProvider)
  nameWithType.vb: IFormattable.ToString(String, IFormatProvider)
  fullName.vb: System.IFormattable.ToString(String, System.IFormatProvider)
  name.vb: ToString(String, IFormatProvider)
  spec.csharp:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
  spec.vb:
  - uid: System.IFormattable.ToString(System.String,System.IFormatProvider)
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformattable.tostring
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IFormatProvider
    name: IFormatProvider
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iformatprovider
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: OpenTK.Mathematics.Matrix3x2d.GetHashCode*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.GetHashCode
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_GetHashCode
  name: GetHashCode
  nameWithType: Matrix3x2d.GetHashCode
  fullName: OpenTK.Mathematics.Matrix3x2d.GetHashCode
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: OpenTK.Mathematics.Matrix3x2d.Equals*
  commentId: Overload:OpenTK.Mathematics.Matrix3x2d.Equals
  href: OpenTK.Mathematics.Matrix3x2d.html#OpenTK_Mathematics_Matrix3x2d_Equals_System_Object_
  name: Equals
  nameWithType: Matrix3x2d.Equals
  fullName: OpenTK.Mathematics.Matrix3x2d.Equals
- uid: System.IEquatable{OpenTK.Mathematics.Matrix3x2d}.Equals(OpenTK.Mathematics.Matrix3x2d)
  commentId: M:System.IEquatable{OpenTK.Mathematics.Matrix3x2d}.Equals(OpenTK.Mathematics.Matrix3x2d)
  parent: System.IEquatable{OpenTK.Mathematics.Matrix3x2d}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Matrix3x2d)
  nameWithType: IEquatable<Matrix3x2d>.Equals(Matrix3x2d)
  fullName: System.IEquatable<OpenTK.Mathematics.Matrix3x2d>.Equals(OpenTK.Mathematics.Matrix3x2d)
  nameWithType.vb: IEquatable(Of Matrix3x2d).Equals(Matrix3x2d)
  fullName.vb: System.IEquatable(Of OpenTK.Mathematics.Matrix3x2d).Equals(OpenTK.Mathematics.Matrix3x2d)
  spec.csharp:
  - uid: System.IEquatable{OpenTK.Mathematics.Matrix3x2d}.Equals(OpenTK.Mathematics.Matrix3x2d)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: OpenTK.Mathematics.Matrix3x2d
    name: Matrix3x2d
    href: OpenTK.Mathematics.Matrix3x2d.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{OpenTK.Mathematics.Matrix3x2d}.Equals(OpenTK.Mathematics.Matrix3x2d)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: OpenTK.Mathematics.Matrix3x2d
    name: Matrix3x2d
    href: OpenTK.Mathematics.Matrix3x2d.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
