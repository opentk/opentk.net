### YamlMime:ManagedReference
items:
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
  commentId: T:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
  id: JoystickState
  parent: OpenTK.Windowing.GraphicsLibraryFramework
  children:
  - OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.AxisCount
  - OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.ButtonCount
  - OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetAxis(System.Int32)
  - OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetAxisPrevious(System.Int32)
  - OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetHat(System.Int32)
  - OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetHatPrevious(System.Int32)
  - OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetSnapshot
  - OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.HatCount
  - OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.Id
  - OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonDown(System.Int32)
  - OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonPressed(System.Int32)
  - OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonReleased(System.Int32)
  - OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.Name
  - OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.ToString
  - OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.WasButtonDown(System.Int32)
  langs:
  - csharp
  - vb
  name: JoystickState
  nameWithType: JoystickState
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
  type: Class
  source:
    id: JoystickState
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\JoystickState.cs
    startLine: 25
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Encapsulates the state of a joystick device.
  example: []
  syntax:
    content: public class JoystickState
    content.vb: Public Class JoystickState
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.Id
  commentId: P:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.Id
  id: Id
  parent: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: JoystickState.Id
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.Id
  type: Property
  source:
    id: Id
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\JoystickState.cs
    startLine: 38
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Gets the identity of the joystick this state describes.
  example: []
  syntax:
    content: public int Id { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Id As Integer
  overload: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.Id*
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.Name
  commentId: P:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.Name
  id: Name
  parent: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: JoystickState.Name
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.Name
  type: Property
  source:
    id: Name
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\JoystickState.cs
    startLine: 43
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Gets the name of the joystick this state describes.
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.Name*
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.ButtonCount
  commentId: P:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.ButtonCount
  id: ButtonCount
  parent: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
  langs:
  - csharp
  - vb
  name: ButtonCount
  nameWithType: JoystickState.ButtonCount
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.ButtonCount
  type: Property
  source:
    id: ButtonCount
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\JoystickState.cs
    startLine: 48
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Gets the number of buttons on the joystick this state describes.
  example: []
  syntax:
    content: public int ButtonCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ButtonCount As Integer
  overload: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.ButtonCount*
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.AxisCount
  commentId: P:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.AxisCount
  id: AxisCount
  parent: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
  langs:
  - csharp
  - vb
  name: AxisCount
  nameWithType: JoystickState.AxisCount
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.AxisCount
  type: Property
  source:
    id: AxisCount
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\JoystickState.cs
    startLine: 53
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Gets the number of axes on the joystick this state describes.
  example: []
  syntax:
    content: public int AxisCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property AxisCount As Integer
  overload: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.AxisCount*
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.HatCount
  commentId: P:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.HatCount
  id: HatCount
  parent: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
  langs:
  - csharp
  - vb
  name: HatCount
  nameWithType: JoystickState.HatCount
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.HatCount
  type: Property
  source:
    id: HatCount
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\JoystickState.cs
    startLine: 58
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Gets the number of hats on the joystick this state describes.
  example: []
  syntax:
    content: public int HatCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property HatCount As Integer
  overload: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.HatCount*
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetHat(System.Int32)
  commentId: M:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetHat(System.Int32)
  id: GetHat(System.Int32)
  parent: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
  langs:
  - csharp
  - vb
  name: GetHat(int)
  nameWithType: JoystickState.GetHat(int)
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetHat(int)
  type: Method
  source:
    id: GetHat
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\JoystickState.cs
    startLine: 96
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Gets a <xref href="OpenTK.Windowing.Common.Input.Hat" data-throw-if-not-resolved="false"></xref> describing the state of a hat.
  example: []
  syntax:
    content: public Hat GetHat(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index of the hat to check.
    return:
      type: OpenTK.Windowing.Common.Input.Hat
      description: A <xref href="OpenTK.Windowing.Common.Input.Hat" data-throw-if-not-resolved="false"></xref> describing the hat state.
    content.vb: Public Function GetHat(index As Integer) As Hat
  overload: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetHat*
  nameWithType.vb: JoystickState.GetHat(Integer)
  fullName.vb: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetHat(Integer)
  name.vb: GetHat(Integer)
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetHatPrevious(System.Int32)
  commentId: M:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetHatPrevious(System.Int32)
  id: GetHatPrevious(System.Int32)
  parent: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
  langs:
  - csharp
  - vb
  name: GetHatPrevious(int)
  nameWithType: JoystickState.GetHatPrevious(int)
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetHatPrevious(int)
  type: Method
  source:
    id: GetHatPrevious
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\JoystickState.cs
    startLine: 107
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Gets a <xref href="OpenTK.Windowing.Common.Input.Hat" data-throw-if-not-resolved="false"></xref> describing the previous state of a hat.
  example: []
  syntax:
    content: public Hat GetHatPrevious(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index of the hat to check.
    return:
      type: OpenTK.Windowing.Common.Input.Hat
      description: A <xref href="OpenTK.Windowing.Common.Input.Hat" data-throw-if-not-resolved="false"></xref> describing the hat state.
    content.vb: Public Function GetHatPrevious(index As Integer) As Hat
  overload: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetHatPrevious*
  nameWithType.vb: JoystickState.GetHatPrevious(Integer)
  fullName.vb: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetHatPrevious(Integer)
  name.vb: GetHatPrevious(Integer)
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonDown(System.Int32)
  commentId: M:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonDown(System.Int32)
  id: IsButtonDown(System.Int32)
  parent: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
  langs:
  - csharp
  - vb
  name: IsButtonDown(int)
  nameWithType: JoystickState.IsButtonDown(int)
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonDown(int)
  type: Method
  source:
    id: IsButtonDown
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\JoystickState.cs
    startLine: 124
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Gets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> describing the state of a button in the current frame.
  example: []
  syntax:
    content: public bool IsButtonDown(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index of the button to check.
    return:
      type: System.Boolean
      description: <code>true</code> if the button is down; <code>false</code> otherwise.
    content.vb: Public Function IsButtonDown(index As Integer) As Boolean
  overload: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonDown*
  nameWithType.vb: JoystickState.IsButtonDown(Integer)
  fullName.vb: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonDown(Integer)
  name.vb: IsButtonDown(Integer)
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.WasButtonDown(System.Int32)
  commentId: M:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.WasButtonDown(System.Int32)
  id: WasButtonDown(System.Int32)
  parent: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
  langs:
  - csharp
  - vb
  name: WasButtonDown(int)
  nameWithType: JoystickState.WasButtonDown(int)
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.WasButtonDown(int)
  type: Method
  source:
    id: WasButtonDown
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\JoystickState.cs
    startLine: 135
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Gets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> describing whether the button was down in the previous frame.
  example: []
  syntax:
    content: public bool WasButtonDown(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index of the button.
    return:
      type: System.Boolean
      description: Returns true if the button was down, or false if the button was not down.
    content.vb: Public Function WasButtonDown(index As Integer) As Boolean
  overload: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.WasButtonDown*
  nameWithType.vb: JoystickState.WasButtonDown(Integer)
  fullName.vb: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.WasButtonDown(Integer)
  name.vb: WasButtonDown(Integer)
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonPressed(System.Int32)
  commentId: M:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonPressed(System.Int32)
  id: IsButtonPressed(System.Int32)
  parent: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
  langs:
  - csharp
  - vb
  name: IsButtonPressed(int)
  nameWithType: JoystickState.IsButtonPressed(int)
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonPressed(int)
  type: Method
  source:
    id: IsButtonPressed
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\JoystickState.cs
    startLine: 149
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Gets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> describing whether the specified button is down in the current frame but was up in the previous frame.
  remarks: "\"Frame\" refers to invocations of NativeWindow.ProcessEvents(double)  (NativeWindow.ProcessInputEvents() more precisely) here."
  example: []
  syntax:
    content: public bool IsButtonPressed(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index of the button.
    return:
      type: System.Boolean
      description: True if the button is down in this frame, but not the last frame.
    content.vb: Public Function IsButtonPressed(index As Integer) As Boolean
  overload: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonPressed*
  nameWithType.vb: JoystickState.IsButtonPressed(Integer)
  fullName.vb: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonPressed(Integer)
  name.vb: IsButtonPressed(Integer)
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonReleased(System.Int32)
  commentId: M:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonReleased(System.Int32)
  id: IsButtonReleased(System.Int32)
  parent: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
  langs:
  - csharp
  - vb
  name: IsButtonReleased(int)
  nameWithType: JoystickState.IsButtonReleased(int)
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonReleased(int)
  type: Method
  source:
    id: IsButtonReleased
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\JoystickState.cs
    startLine: 163
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Gets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> describing whether the specified button is up in the current frame but was down in the previous frame.
  remarks: "\"Frame\" refers to invocations of NativeWindow.ProcessEvents(double)  (NativeWindow.ProcessInputEvents() more precisely) here."
  example: []
  syntax:
    content: public bool IsButtonReleased(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index of the button.
    return:
      type: System.Boolean
      description: True if the button is up in this frame, but down the last frame.
    content.vb: Public Function IsButtonReleased(index As Integer) As Boolean
  overload: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonReleased*
  nameWithType.vb: JoystickState.IsButtonReleased(Integer)
  fullName.vb: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonReleased(Integer)
  name.vb: IsButtonReleased(Integer)
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetAxis(System.Int32)
  commentId: M:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetAxis(System.Int32)
  id: GetAxis(System.Int32)
  parent: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
  langs:
  - csharp
  - vb
  name: GetAxis(int)
  nameWithType: JoystickState.GetAxis(int)
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetAxis(int)
  type: Method
  source:
    id: GetAxis
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\JoystickState.cs
    startLine: 180
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Gets a <xref href="System.Single" data-throw-if-not-resolved="false"></xref> between -1 and 1 describing the position of an axis.
  example: []
  syntax:
    content: public float GetAxis(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index of the Axis to check.
    return:
      type: System.Single
      description: A <xref href="System.Single" data-throw-if-not-resolved="false"></xref> between -1 and 1 describing the position of the axis.
    content.vb: Public Function GetAxis(index As Integer) As Single
  overload: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetAxis*
  nameWithType.vb: JoystickState.GetAxis(Integer)
  fullName.vb: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetAxis(Integer)
  name.vb: GetAxis(Integer)
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetAxisPrevious(System.Int32)
  commentId: M:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetAxisPrevious(System.Int32)
  id: GetAxisPrevious(System.Int32)
  parent: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
  langs:
  - csharp
  - vb
  name: GetAxisPrevious(int)
  nameWithType: JoystickState.GetAxisPrevious(int)
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetAxisPrevious(int)
  type: Method
  source:
    id: GetAxisPrevious
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\JoystickState.cs
    startLine: 191
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Gets a <xref href="System.Single" data-throw-if-not-resolved="false"></xref> between -1 and 1 describing the previous position of an axis.
  example: []
  syntax:
    content: public float GetAxisPrevious(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index of the Axis to check.
    return:
      type: System.Single
      description: A <xref href="System.Single" data-throw-if-not-resolved="false"></xref> between -1 and 1 describing the position of the axis.
    content.vb: Public Function GetAxisPrevious(index As Integer) As Single
  overload: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetAxisPrevious*
  nameWithType.vb: JoystickState.GetAxisPrevious(Integer)
  fullName.vb: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetAxisPrevious(Integer)
  name.vb: GetAxisPrevious(Integer)
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.ToString
  commentId: M:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.ToString
  id: ToString
  parent: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: JoystickState.ToString()
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.ToString()
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\JoystickState.cs
    startLine: 208
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.ToString*
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetSnapshot
  commentId: M:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetSnapshot
  id: GetSnapshot
  parent: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
  langs:
  - csharp
  - vb
  name: GetSnapshot()
  nameWithType: JoystickState.GetSnapshot()
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetSnapshot()
  type: Method
  source:
    id: GetSnapshot
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\JoystickState.cs
    startLine: 271
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: >-
    Gets an immutable snapshot of this JoystickState.

    This can be used to save the current joystick state for comparison later on.
  example: []
  syntax:
    content: public JoystickState GetSnapshot()
    return:
      type: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
      description: Returns an immutable snapshot of this JoystickState.
    content.vb: Public Function GetSnapshot() As JoystickState
  overload: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetSnapshot*
references:
- uid: OpenTK.Windowing.GraphicsLibraryFramework
  commentId: N:OpenTK.Windowing.GraphicsLibraryFramework
  href: OpenTK.html
  name: OpenTK.Windowing.GraphicsLibraryFramework
  nameWithType: OpenTK.Windowing.GraphicsLibraryFramework
  fullName: OpenTK.Windowing.GraphicsLibraryFramework
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Windowing
    name: Windowing
    href: OpenTK.Windowing.html
  - name: .
  - uid: OpenTK.Windowing.GraphicsLibraryFramework
    name: GraphicsLibraryFramework
    href: OpenTK.Windowing.GraphicsLibraryFramework.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Windowing
    name: Windowing
    href: OpenTK.Windowing.html
  - name: .
  - uid: OpenTK.Windowing.GraphicsLibraryFramework
    name: GraphicsLibraryFramework
    href: OpenTK.Windowing.GraphicsLibraryFramework.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.Id*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.Id
  href: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.html#OpenTK_Windowing_GraphicsLibraryFramework_JoystickState_Id
  name: Id
  nameWithType: JoystickState.Id
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.Name*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.Name
  href: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.html#OpenTK_Windowing_GraphicsLibraryFramework_JoystickState_Name
  name: Name
  nameWithType: JoystickState.Name
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.ButtonCount*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.ButtonCount
  href: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.html#OpenTK_Windowing_GraphicsLibraryFramework_JoystickState_ButtonCount
  name: ButtonCount
  nameWithType: JoystickState.ButtonCount
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.ButtonCount
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.AxisCount*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.AxisCount
  href: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.html#OpenTK_Windowing_GraphicsLibraryFramework_JoystickState_AxisCount
  name: AxisCount
  nameWithType: JoystickState.AxisCount
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.AxisCount
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.HatCount*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.HatCount
  href: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.html#OpenTK_Windowing_GraphicsLibraryFramework_JoystickState_HatCount
  name: HatCount
  nameWithType: JoystickState.HatCount
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.HatCount
- uid: OpenTK.Windowing.Common.Input.Hat
  commentId: T:OpenTK.Windowing.Common.Input.Hat
  parent: OpenTK.Windowing.Common.Input
  href: OpenTK.Windowing.Common.Input.Hat.html
  name: Hat
  nameWithType: Hat
  fullName: OpenTK.Windowing.Common.Input.Hat
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetHat*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetHat
  href: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.html#OpenTK_Windowing_GraphicsLibraryFramework_JoystickState_GetHat_System_Int32_
  name: GetHat
  nameWithType: JoystickState.GetHat
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetHat
- uid: OpenTK.Windowing.Common.Input
  commentId: N:OpenTK.Windowing.Common.Input
  href: OpenTK.html
  name: OpenTK.Windowing.Common.Input
  nameWithType: OpenTK.Windowing.Common.Input
  fullName: OpenTK.Windowing.Common.Input
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Windowing
    name: Windowing
    href: OpenTK.Windowing.html
  - name: .
  - uid: OpenTK.Windowing.Common
    name: Common
    href: OpenTK.Windowing.Common.html
  - name: .
  - uid: OpenTK.Windowing.Common.Input
    name: Input
    href: OpenTK.Windowing.Common.Input.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Windowing
    name: Windowing
    href: OpenTK.Windowing.html
  - name: .
  - uid: OpenTK.Windowing.Common
    name: Common
    href: OpenTK.Windowing.Common.html
  - name: .
  - uid: OpenTK.Windowing.Common.Input
    name: Input
    href: OpenTK.Windowing.Common.Input.html
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetHatPrevious*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetHatPrevious
  href: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.html#OpenTK_Windowing_GraphicsLibraryFramework_JoystickState_GetHatPrevious_System_Int32_
  name: GetHatPrevious
  nameWithType: JoystickState.GetHatPrevious
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetHatPrevious
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonDown*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonDown
  href: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.html#OpenTK_Windowing_GraphicsLibraryFramework_JoystickState_IsButtonDown_System_Int32_
  name: IsButtonDown
  nameWithType: JoystickState.IsButtonDown
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonDown
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.WasButtonDown*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.WasButtonDown
  href: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.html#OpenTK_Windowing_GraphicsLibraryFramework_JoystickState_WasButtonDown_System_Int32_
  name: WasButtonDown
  nameWithType: JoystickState.WasButtonDown
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.WasButtonDown
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonPressed*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonPressed
  href: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.html#OpenTK_Windowing_GraphicsLibraryFramework_JoystickState_IsButtonPressed_System_Int32_
  name: IsButtonPressed
  nameWithType: JoystickState.IsButtonPressed
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonPressed
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonReleased*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonReleased
  href: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.html#OpenTK_Windowing_GraphicsLibraryFramework_JoystickState_IsButtonReleased_System_Int32_
  name: IsButtonReleased
  nameWithType: JoystickState.IsButtonReleased
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.IsButtonReleased
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetAxis*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetAxis
  href: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.html#OpenTK_Windowing_GraphicsLibraryFramework_JoystickState_GetAxis_System_Int32_
  name: GetAxis
  nameWithType: JoystickState.GetAxis
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetAxis
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetAxisPrevious*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetAxisPrevious
  href: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.html#OpenTK_Windowing_GraphicsLibraryFramework_JoystickState_GetAxisPrevious_System_Int32_
  name: GetAxisPrevious
  nameWithType: JoystickState.GetAxisPrevious
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetAxisPrevious
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.ToString*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.ToString
  href: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.html#OpenTK_Windowing_GraphicsLibraryFramework_JoystickState_ToString
  name: ToString
  nameWithType: JoystickState.ToString
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.ToString
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetSnapshot*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetSnapshot
  href: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.html#OpenTK_Windowing_GraphicsLibraryFramework_JoystickState_GetSnapshot
  name: GetSnapshot
  nameWithType: JoystickState.GetSnapshot
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.GetSnapshot
- uid: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
  commentId: T:OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
  parent: OpenTK.Windowing.GraphicsLibraryFramework
  href: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState.html
  name: JoystickState
  nameWithType: JoystickState
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.JoystickState
