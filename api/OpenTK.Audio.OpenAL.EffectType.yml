### YamlMime:ManagedReference
items:
- uid: OpenTK.Audio.OpenAL.EffectType
  commentId: T:OpenTK.Audio.OpenAL.EffectType
  id: EffectType
  parent: OpenTK.Audio.OpenAL
  children:
  - OpenTK.Audio.OpenAL.EffectType.Autowah
  - OpenTK.Audio.OpenAL.EffectType.Chorus
  - OpenTK.Audio.OpenAL.EffectType.Compressor
  - OpenTK.Audio.OpenAL.EffectType.Distortion
  - OpenTK.Audio.OpenAL.EffectType.EaxReverb
  - OpenTK.Audio.OpenAL.EffectType.Echo
  - OpenTK.Audio.OpenAL.EffectType.Equalizer
  - OpenTK.Audio.OpenAL.EffectType.Flanger
  - OpenTK.Audio.OpenAL.EffectType.FrequencyShifter
  - OpenTK.Audio.OpenAL.EffectType.Null
  - OpenTK.Audio.OpenAL.EffectType.PitchShifter
  - OpenTK.Audio.OpenAL.EffectType.Reverb
  - OpenTK.Audio.OpenAL.EffectType.RingModulator
  - OpenTK.Audio.OpenAL.EffectType.VocalMorpher
  langs:
  - csharp
  - vb
  name: EffectType
  nameWithType: EffectType
  fullName: OpenTK.Audio.OpenAL.EffectType
  type: Enum
  source:
    id: EffectType
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EffectType.cs
    startLine: 14
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: Effect type definitions to be used with <xref href="OpenTK.Audio.OpenAL.EffectInteger.EffectType" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public enum EffectType
    content.vb: Public Enum EffectType
- uid: OpenTK.Audio.OpenAL.EffectType.Null
  commentId: F:OpenTK.Audio.OpenAL.EffectType.Null
  id: "Null"
  parent: OpenTK.Audio.OpenAL.EffectType
  langs:
  - csharp
  - vb
  name: "Null"
  nameWithType: EffectType.Null
  fullName: OpenTK.Audio.OpenAL.EffectType.Null
  type: Field
  source:
    id: "Null"
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EffectType.cs
    startLine: 19
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: No Effect, disable. This Effect type is used when an Effect object is initially created.
  example: []
  syntax:
    content: Null = 0
    return:
      type: OpenTK.Audio.OpenAL.EffectType
- uid: OpenTK.Audio.OpenAL.EffectType.Reverb
  commentId: F:OpenTK.Audio.OpenAL.EffectType.Reverb
  id: Reverb
  parent: OpenTK.Audio.OpenAL.EffectType
  langs:
  - csharp
  - vb
  name: Reverb
  nameWithType: EffectType.Reverb
  fullName: OpenTK.Audio.OpenAL.EffectType.Reverb
  type: Field
  source:
    id: Reverb
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EffectType.cs
    startLine: 25
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: >-
    The Reverb effect is the standard Effects Extension's environmental reverberation effect. It is available on

    all Generic Software and Generic Hardware devices.
  example: []
  syntax:
    content: Reverb = 1
    return:
      type: OpenTK.Audio.OpenAL.EffectType
- uid: OpenTK.Audio.OpenAL.EffectType.Chorus
  commentId: F:OpenTK.Audio.OpenAL.EffectType.Chorus
  id: Chorus
  parent: OpenTK.Audio.OpenAL.EffectType
  langs:
  - csharp
  - vb
  name: Chorus
  nameWithType: EffectType.Chorus
  fullName: OpenTK.Audio.OpenAL.EffectType.Chorus
  type: Field
  source:
    id: Chorus
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EffectType.cs
    startLine: 31
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: >-
    The Chorus effect essentially replays the input audio accompanied by another slightly delayed version of the

    signal, creating a "doubling" effect.
  example: []
  syntax:
    content: Chorus = 2
    return:
      type: OpenTK.Audio.OpenAL.EffectType
- uid: OpenTK.Audio.OpenAL.EffectType.Distortion
  commentId: F:OpenTK.Audio.OpenAL.EffectType.Distortion
  id: Distortion
  parent: OpenTK.Audio.OpenAL.EffectType
  langs:
  - csharp
  - vb
  name: Distortion
  nameWithType: EffectType.Distortion
  fullName: OpenTK.Audio.OpenAL.EffectType.Distortion
  type: Field
  source:
    id: Distortion
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EffectType.cs
    startLine: 37
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: >-
    The Distortion effect simulates turning up (overdriving) the gain stage on a guitar amplifier or adding a

    distortion pedal to an instrument's output.
  example: []
  syntax:
    content: Distortion = 3
    return:
      type: OpenTK.Audio.OpenAL.EffectType
- uid: OpenTK.Audio.OpenAL.EffectType.Echo
  commentId: F:OpenTK.Audio.OpenAL.EffectType.Echo
  id: Echo
  parent: OpenTK.Audio.OpenAL.EffectType
  langs:
  - csharp
  - vb
  name: Echo
  nameWithType: EffectType.Echo
  fullName: OpenTK.Audio.OpenAL.EffectType.Echo
  type: Field
  source:
    id: Echo
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EffectType.cs
    startLine: 42
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: The Echo effect generates discrete, delayed instances of the input signal.
  example: []
  syntax:
    content: Echo = 4
    return:
      type: OpenTK.Audio.OpenAL.EffectType
- uid: OpenTK.Audio.OpenAL.EffectType.Flanger
  commentId: F:OpenTK.Audio.OpenAL.EffectType.Flanger
  id: Flanger
  parent: OpenTK.Audio.OpenAL.EffectType
  langs:
  - csharp
  - vb
  name: Flanger
  nameWithType: EffectType.Flanger
  fullName: OpenTK.Audio.OpenAL.EffectType.Flanger
  type: Field
  source:
    id: Flanger
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EffectType.cs
    startLine: 47
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: The Flanger effect creates a "tearing" or "whooshing" sound, like a jet flying overhead.
  example: []
  syntax:
    content: Flanger = 5
    return:
      type: OpenTK.Audio.OpenAL.EffectType
- uid: OpenTK.Audio.OpenAL.EffectType.FrequencyShifter
  commentId: F:OpenTK.Audio.OpenAL.EffectType.FrequencyShifter
  id: FrequencyShifter
  parent: OpenTK.Audio.OpenAL.EffectType
  langs:
  - csharp
  - vb
  name: FrequencyShifter
  nameWithType: EffectType.FrequencyShifter
  fullName: OpenTK.Audio.OpenAL.EffectType.FrequencyShifter
  type: Field
  source:
    id: FrequencyShifter
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EffectType.cs
    startLine: 53
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: >-
    The Frequency shifter is a single-sideband modulator, which translates all the component frequencies of the

    input signal by an equal amount.
  example: []
  syntax:
    content: FrequencyShifter = 6
    return:
      type: OpenTK.Audio.OpenAL.EffectType
- uid: OpenTK.Audio.OpenAL.EffectType.VocalMorpher
  commentId: F:OpenTK.Audio.OpenAL.EffectType.VocalMorpher
  id: VocalMorpher
  parent: OpenTK.Audio.OpenAL.EffectType
  langs:
  - csharp
  - vb
  name: VocalMorpher
  nameWithType: EffectType.VocalMorpher
  fullName: OpenTK.Audio.OpenAL.EffectType.VocalMorpher
  type: Field
  source:
    id: VocalMorpher
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EffectType.cs
    startLine: 59
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: >-
    The Vocal morpher consists of a pair of 4-band formant filters, used to impose vocal tract effects upon the

    input signal.
  example: []
  syntax:
    content: VocalMorpher = 7
    return:
      type: OpenTK.Audio.OpenAL.EffectType
- uid: OpenTK.Audio.OpenAL.EffectType.PitchShifter
  commentId: F:OpenTK.Audio.OpenAL.EffectType.PitchShifter
  id: PitchShifter
  parent: OpenTK.Audio.OpenAL.EffectType
  langs:
  - csharp
  - vb
  name: PitchShifter
  nameWithType: EffectType.PitchShifter
  fullName: OpenTK.Audio.OpenAL.EffectType.PitchShifter
  type: Field
  source:
    id: PitchShifter
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EffectType.cs
    startLine: 65
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: >-
    The Pitch shifter applies time-invariant pitch shifting to the input signal, over a one octave range and

    controllable at a semi-tone and cent resolution.
  example: []
  syntax:
    content: PitchShifter = 8
    return:
      type: OpenTK.Audio.OpenAL.EffectType
- uid: OpenTK.Audio.OpenAL.EffectType.RingModulator
  commentId: F:OpenTK.Audio.OpenAL.EffectType.RingModulator
  id: RingModulator
  parent: OpenTK.Audio.OpenAL.EffectType
  langs:
  - csharp
  - vb
  name: RingModulator
  nameWithType: EffectType.RingModulator
  fullName: OpenTK.Audio.OpenAL.EffectType.RingModulator
  type: Field
  source:
    id: RingModulator
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EffectType.cs
    startLine: 71
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: >-
    The Ring modulator multiplies an input signal by a carrier signal in the time domain, resulting in tremolo or

    inharmonic effects.
  example: []
  syntax:
    content: RingModulator = 9
    return:
      type: OpenTK.Audio.OpenAL.EffectType
- uid: OpenTK.Audio.OpenAL.EffectType.Autowah
  commentId: F:OpenTK.Audio.OpenAL.EffectType.Autowah
  id: Autowah
  parent: OpenTK.Audio.OpenAL.EffectType
  langs:
  - csharp
  - vb
  name: Autowah
  nameWithType: EffectType.Autowah
  fullName: OpenTK.Audio.OpenAL.EffectType.Autowah
  type: Field
  source:
    id: Autowah
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EffectType.cs
    startLine: 77
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: >-
    The Auto-wah effect emulates the sound of a wah-wah pedal used with an electric guitar, or a mute on a brass

    instrument.
  example: []
  syntax:
    content: Autowah = 10
    return:
      type: OpenTK.Audio.OpenAL.EffectType
- uid: OpenTK.Audio.OpenAL.EffectType.Compressor
  commentId: F:OpenTK.Audio.OpenAL.EffectType.Compressor
  id: Compressor
  parent: OpenTK.Audio.OpenAL.EffectType
  langs:
  - csharp
  - vb
  name: Compressor
  nameWithType: EffectType.Compressor
  fullName: OpenTK.Audio.OpenAL.EffectType.Compressor
  type: Field
  source:
    id: Compressor
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EffectType.cs
    startLine: 83
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: >-
    The Compressor will boost quieter portions of the audio, while louder portions will stay the same or may even

    be reduced.
  example: []
  syntax:
    content: Compressor = 11
    return:
      type: OpenTK.Audio.OpenAL.EffectType
- uid: OpenTK.Audio.OpenAL.EffectType.Equalizer
  commentId: F:OpenTK.Audio.OpenAL.EffectType.Equalizer
  id: Equalizer
  parent: OpenTK.Audio.OpenAL.EffectType
  langs:
  - csharp
  - vb
  name: Equalizer
  nameWithType: EffectType.Equalizer
  fullName: OpenTK.Audio.OpenAL.EffectType.Equalizer
  type: Field
  source:
    id: Equalizer
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EffectType.cs
    startLine: 88
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: The Equalizer is very flexible, providing tonal control over four different adjustable frequency ranges.
  example: []
  syntax:
    content: Equalizer = 12
    return:
      type: OpenTK.Audio.OpenAL.EffectType
- uid: OpenTK.Audio.OpenAL.EffectType.EaxReverb
  commentId: F:OpenTK.Audio.OpenAL.EffectType.EaxReverb
  id: EaxReverb
  parent: OpenTK.Audio.OpenAL.EffectType
  langs:
  - csharp
  - vb
  name: EaxReverb
  nameWithType: EffectType.EaxReverb
  fullName: OpenTK.Audio.OpenAL.EffectType.EaxReverb
  type: Field
  source:
    id: EaxReverb
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\Creative.EFX\Enums\EffectType.cs
    startLine: 94
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: >-
    The EAX Reverb has a more advanced parameter set than EfxEffectType.Reverb, but is only natively supported on

    devices that support the EAX 3.0 or above.
  example: []
  syntax:
    content: EaxReverb = 32768
    return:
      type: OpenTK.Audio.OpenAL.EffectType
references:
- uid: OpenTK.Audio.OpenAL.EffectInteger.EffectType
  commentId: F:OpenTK.Audio.OpenAL.EffectInteger.EffectType
  href: OpenTK.Audio.OpenAL.EffectInteger.html#OpenTK_Audio_OpenAL_EffectInteger_EffectType
  name: EffectType
  nameWithType: EffectInteger.EffectType
  fullName: OpenTK.Audio.OpenAL.EffectInteger.EffectType
- uid: OpenTK.Audio.OpenAL
  commentId: N:OpenTK.Audio.OpenAL
  href: OpenTK.html
  name: OpenTK.Audio.OpenAL
  nameWithType: OpenTK.Audio.OpenAL
  fullName: OpenTK.Audio.OpenAL
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Audio
    name: Audio
    href: OpenTK.Audio.html
  - name: .
  - uid: OpenTK.Audio.OpenAL
    name: OpenAL
    href: OpenTK.Audio.OpenAL.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Audio
    name: Audio
    href: OpenTK.Audio.html
  - name: .
  - uid: OpenTK.Audio.OpenAL
    name: OpenAL
    href: OpenTK.Audio.OpenAL.html
- uid: OpenTK.Audio.OpenAL.EffectType
  commentId: T:OpenTK.Audio.OpenAL.EffectType
  parent: OpenTK.Audio.OpenAL
  href: OpenTK.Audio.OpenAL.EffectType.html
  name: EffectType
  nameWithType: EffectType
  fullName: OpenTK.Audio.OpenAL.EffectType
