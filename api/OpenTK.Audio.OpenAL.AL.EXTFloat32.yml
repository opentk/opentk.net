### YamlMime:ManagedReference
items:
- uid: OpenTK.Audio.OpenAL.AL.EXTFloat32
  commentId: T:OpenTK.Audio.OpenAL.AL.EXTFloat32
  id: AL.EXTFloat32
  parent: OpenTK.Audio.OpenAL
  children:
  - OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData(System.Int32,OpenTK.Audio.OpenAL.FloatBufferFormat,System.Single*,System.Int32,System.Int32)
  - OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData(System.Int32,OpenTK.Audio.OpenAL.FloatBufferFormat,System.Single@,System.Int32,System.Int32)
  - OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData(System.Int32,OpenTK.Audio.OpenAL.FloatBufferFormat,System.Single[],System.Int32)
  - OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData(System.Int32,OpenTK.Audio.OpenAL.FloatBufferFormat,System.Span{System.Single},System.Int32)
  - OpenTK.Audio.OpenAL.AL.EXTFloat32.ExtensionName
  - OpenTK.Audio.OpenAL.AL.EXTFloat32.IsExtensionPresent
  langs:
  - csharp
  - vb
  name: AL.EXTFloat32
  nameWithType: AL.EXTFloat32
  fullName: OpenTK.Audio.OpenAL.AL.EXTFloat32
  type: Class
  source:
    id: EXTFloat32
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\EXT.Float32\EXTFloat32.cs
    startLine: 16
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  syntax:
    content: 'public class AL.EXTFloat32 : ALBase'
    content.vb: Public Class AL.EXTFloat32 Inherits ALBase
  inheritance:
  - System.Object
  - OpenTK.Audio.OpenAL.ALBase
  inheritedMembers:
  - OpenTK.Audio.OpenAL.ALBase.RegisterOpenALResolver
  - OpenTK.Audio.OpenAL.ALBase.LoadDelegate``1(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OpenTK.Audio.OpenAL.AL.EXTFloat32.ExtensionName
  commentId: F:OpenTK.Audio.OpenAL.AL.EXTFloat32.ExtensionName
  id: ExtensionName
  parent: OpenTK.Audio.OpenAL.AL.EXTFloat32
  langs:
  - csharp
  - vb
  name: ExtensionName
  nameWithType: AL.EXTFloat32.ExtensionName
  fullName: OpenTK.Audio.OpenAL.AL.EXTFloat32.ExtensionName
  type: Field
  source:
    id: ExtensionName
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\EXT.Float32\EXTFloat32.cs
    startLine: 21
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: The name of this AL extension.
  example: []
  syntax:
    content: public const string ExtensionName = "AL_EXT_float32"
    return:
      type: System.String
    content.vb: Public Const ExtensionName As String = "AL_EXT_float32"
- uid: OpenTK.Audio.OpenAL.AL.EXTFloat32.IsExtensionPresent
  commentId: M:OpenTK.Audio.OpenAL.AL.EXTFloat32.IsExtensionPresent
  id: IsExtensionPresent
  parent: OpenTK.Audio.OpenAL.AL.EXTFloat32
  langs:
  - csharp
  - vb
  name: IsExtensionPresent()
  nameWithType: AL.EXTFloat32.IsExtensionPresent()
  fullName: OpenTK.Audio.OpenAL.AL.EXTFloat32.IsExtensionPresent()
  type: Method
  source:
    id: IsExtensionPresent
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\EXT.Float32\EXTFloat32.cs
    startLine: 37
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: Checks if this extension is present.
  example: []
  syntax:
    content: public static bool IsExtensionPresent()
    return:
      type: System.Boolean
      description: Whether the extension was present or not.
    content.vb: Public Shared Function IsExtensionPresent() As Boolean
  overload: OpenTK.Audio.OpenAL.AL.EXTFloat32.IsExtensionPresent*
- uid: OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData(System.Int32,OpenTK.Audio.OpenAL.FloatBufferFormat,System.Single*,System.Int32,System.Int32)
  commentId: M:OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData(System.Int32,OpenTK.Audio.OpenAL.FloatBufferFormat,System.Single*,System.Int32,System.Int32)
  id: BufferData(System.Int32,OpenTK.Audio.OpenAL.FloatBufferFormat,System.Single*,System.Int32,System.Int32)
  parent: OpenTK.Audio.OpenAL.AL.EXTFloat32
  langs:
  - csharp
  - vb
  name: BufferData(int, FloatBufferFormat, float*, int, int)
  nameWithType: AL.EXTFloat32.BufferData(int, FloatBufferFormat, float*, int, int)
  fullName: OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData(int, OpenTK.Audio.OpenAL.FloatBufferFormat, float*, int, int)
  type: Method
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: This function fills a buffer with audio buffer. All the pre-defined formats are PCM buffer, but this function may be used by extensions to load other buffer types as well.
  example: []
  syntax:
    content: public static extern void BufferData(int bid, FloatBufferFormat format, float* buffer, int bytes, int freq)
    parameters:
    - id: bid
      type: System.Int32
      description: buffer Handle/Name to be filled with buffer.
    - id: format
      type: OpenTK.Audio.OpenAL.FloatBufferFormat
      description: 'Format type from among the following: FloatBufferFormat.Mono, FloatBufferFormat.Stereo.'
    - id: buffer
      type: System.Single*
      description: Pointer to a pinned audio buffer.
    - id: bytes
      type: System.Int32
      description: The size of the audio buffer in bytes.
    - id: freq
      type: System.Int32
      description: The frequency of the audio buffer.
    content.vb: Public Shared Sub BufferData(bid As Integer, format As FloatBufferFormat, buffer As Single*, bytes As Integer, freq As Integer)
  overload: OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData*
  nameWithType.vb: AL.EXTFloat32.BufferData(Integer, FloatBufferFormat, Single*, Integer, Integer)
  fullName.vb: OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData(Integer, OpenTK.Audio.OpenAL.FloatBufferFormat, Single*, Integer, Integer)
  name.vb: BufferData(Integer, FloatBufferFormat, Single*, Integer, Integer)
- uid: OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData(System.Int32,OpenTK.Audio.OpenAL.FloatBufferFormat,System.Single@,System.Int32,System.Int32)
  commentId: M:OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData(System.Int32,OpenTK.Audio.OpenAL.FloatBufferFormat,System.Single@,System.Int32,System.Int32)
  id: BufferData(System.Int32,OpenTK.Audio.OpenAL.FloatBufferFormat,System.Single@,System.Int32,System.Int32)
  parent: OpenTK.Audio.OpenAL.AL.EXTFloat32
  langs:
  - csharp
  - vb
  name: BufferData(int, FloatBufferFormat, ref float, int, int)
  nameWithType: AL.EXTFloat32.BufferData(int, FloatBufferFormat, ref float, int, int)
  fullName: OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData(int, OpenTK.Audio.OpenAL.FloatBufferFormat, ref float, int, int)
  type: Method
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: This function fills a buffer with audio buffer. All the pre-defined formats are PCM buffer, but this function may be used by extensions to load other buffer types as well.
  example: []
  syntax:
    content: public static extern void BufferData(int bid, FloatBufferFormat format, ref float buffer, int bytes, int freq)
    parameters:
    - id: bid
      type: System.Int32
      description: buffer Handle/Name to be filled with buffer.
    - id: format
      type: OpenTK.Audio.OpenAL.FloatBufferFormat
      description: 'Format type from among the following: FloatBufferFormat.Mono, FloatBufferFormat.Stereo.'
    - id: buffer
      type: System.Single
      description: Pointer to a pinned audio buffer.
    - id: bytes
      type: System.Int32
      description: The size of the audio buffer in bytes.
    - id: freq
      type: System.Int32
      description: The frequency of the audio buffer.
    content.vb: Public Shared Sub BufferData(bid As Integer, format As FloatBufferFormat, buffer As Single, bytes As Integer, freq As Integer)
  overload: OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData*
  nameWithType.vb: AL.EXTFloat32.BufferData(Integer, FloatBufferFormat, Single, Integer, Integer)
  fullName.vb: OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData(Integer, OpenTK.Audio.OpenAL.FloatBufferFormat, Single, Integer, Integer)
  name.vb: BufferData(Integer, FloatBufferFormat, Single, Integer, Integer)
- uid: OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData(System.Int32,OpenTK.Audio.OpenAL.FloatBufferFormat,System.Single[],System.Int32)
  commentId: M:OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData(System.Int32,OpenTK.Audio.OpenAL.FloatBufferFormat,System.Single[],System.Int32)
  id: BufferData(System.Int32,OpenTK.Audio.OpenAL.FloatBufferFormat,System.Single[],System.Int32)
  parent: OpenTK.Audio.OpenAL.AL.EXTFloat32
  langs:
  - csharp
  - vb
  name: BufferData(int, FloatBufferFormat, float[], int)
  nameWithType: AL.EXTFloat32.BufferData(int, FloatBufferFormat, float[], int)
  fullName: OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData(int, OpenTK.Audio.OpenAL.FloatBufferFormat, float[], int)
  type: Method
  source:
    id: BufferData
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\EXT.Float32\EXTFloat32.cs
    startLine: 68
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: This function fills a buffer with audio buffer. All the pre-defined formats are PCM buffer, but this function may be used by extensions to load other buffer types as well.
  example: []
  syntax:
    content: public static void BufferData(int bid, FloatBufferFormat format, float[] buffer, int freq)
    parameters:
    - id: bid
      type: System.Int32
      description: buffer Handle/Name to be filled with buffer.
    - id: format
      type: OpenTK.Audio.OpenAL.FloatBufferFormat
      description: 'Format type from among the following: FloatBufferFormat.Mono, FloatBufferFormat.Stereo.'
    - id: buffer
      type: System.Single[]
      description: The audio buffer.
    - id: freq
      type: System.Int32
      description: The frequency of the audio buffer.
    content.vb: Public Shared Sub BufferData(bid As Integer, format As FloatBufferFormat, buffer As Single(), freq As Integer)
  overload: OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData*
  nameWithType.vb: AL.EXTFloat32.BufferData(Integer, FloatBufferFormat, Single(), Integer)
  fullName.vb: OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData(Integer, OpenTK.Audio.OpenAL.FloatBufferFormat, Single(), Integer)
  name.vb: BufferData(Integer, FloatBufferFormat, Single(), Integer)
- uid: OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData(System.Int32,OpenTK.Audio.OpenAL.FloatBufferFormat,System.Span{System.Single},System.Int32)
  commentId: M:OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData(System.Int32,OpenTK.Audio.OpenAL.FloatBufferFormat,System.Span{System.Single},System.Int32)
  id: BufferData(System.Int32,OpenTK.Audio.OpenAL.FloatBufferFormat,System.Span{System.Single},System.Int32)
  parent: OpenTK.Audio.OpenAL.AL.EXTFloat32
  langs:
  - csharp
  - vb
  name: BufferData(int, FloatBufferFormat, Span<float>, int)
  nameWithType: AL.EXTFloat32.BufferData(int, FloatBufferFormat, Span<float>, int)
  fullName: OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData(int, OpenTK.Audio.OpenAL.FloatBufferFormat, System.Span<float>, int)
  type: Method
  source:
    id: BufferData
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenAL\OpenTK.Audio.OpenAL\Extensions\EXT.Float32\EXTFloat32.cs
    startLine: 78
  assemblies:
  - OpenTK.Audio.OpenAL
  namespace: OpenTK.Audio.OpenAL
  summary: This function fills a buffer with audio buffer. All the pre-defined formats are PCM buffer, but this function may be used by extensions to load other buffer types as well.
  example: []
  syntax:
    content: public static void BufferData(int bid, FloatBufferFormat format, Span<float> buffer, int freq)
    parameters:
    - id: bid
      type: System.Int32
      description: buffer Handle/Name to be filled with buffer.
    - id: format
      type: OpenTK.Audio.OpenAL.FloatBufferFormat
      description: 'Format type from among the following: FloatBufferFormat.Mono, FloatBufferFormat.Stereo.'
    - id: buffer
      type: System.Span{System.Single}
      description: Span representing the audio buffer.
    - id: freq
      type: System.Int32
      description: The frequency of the audio buffer.
    content.vb: Public Shared Sub BufferData(bid As Integer, format As FloatBufferFormat, buffer As Span(Of Single), freq As Integer)
  overload: OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData*
  nameWithType.vb: AL.EXTFloat32.BufferData(Integer, FloatBufferFormat, Span(Of Single), Integer)
  fullName.vb: OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData(Integer, OpenTK.Audio.OpenAL.FloatBufferFormat, System.Span(Of Single), Integer)
  name.vb: BufferData(Integer, FloatBufferFormat, Span(Of Single), Integer)
references:
- uid: OpenTK.Audio.OpenAL
  commentId: N:OpenTK.Audio.OpenAL
  href: OpenTK.html
  name: OpenTK.Audio.OpenAL
  nameWithType: OpenTK.Audio.OpenAL
  fullName: OpenTK.Audio.OpenAL
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Audio
    name: Audio
    href: OpenTK.Audio.html
  - name: .
  - uid: OpenTK.Audio.OpenAL
    name: OpenAL
    href: OpenTK.Audio.OpenAL.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Audio
    name: Audio
    href: OpenTK.Audio.html
  - name: .
  - uid: OpenTK.Audio.OpenAL
    name: OpenAL
    href: OpenTK.Audio.OpenAL.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: OpenTK.Audio.OpenAL.ALBase
  commentId: T:OpenTK.Audio.OpenAL.ALBase
  parent: OpenTK.Audio.OpenAL
  href: OpenTK.Audio.OpenAL.ALBase.html
  name: ALBase
  nameWithType: ALBase
  fullName: OpenTK.Audio.OpenAL.ALBase
- uid: OpenTK.Audio.OpenAL.ALBase.RegisterOpenALResolver
  commentId: M:OpenTK.Audio.OpenAL.ALBase.RegisterOpenALResolver
  parent: OpenTK.Audio.OpenAL.ALBase
  href: OpenTK.Audio.OpenAL.ALBase.html#OpenTK_Audio_OpenAL_ALBase_RegisterOpenALResolver
  name: RegisterOpenALResolver()
  nameWithType: ALBase.RegisterOpenALResolver()
  fullName: OpenTK.Audio.OpenAL.ALBase.RegisterOpenALResolver()
  spec.csharp:
  - uid: OpenTK.Audio.OpenAL.ALBase.RegisterOpenALResolver
    name: RegisterOpenALResolver
    href: OpenTK.Audio.OpenAL.ALBase.html#OpenTK_Audio_OpenAL_ALBase_RegisterOpenALResolver
  - name: (
  - name: )
  spec.vb:
  - uid: OpenTK.Audio.OpenAL.ALBase.RegisterOpenALResolver
    name: RegisterOpenALResolver
    href: OpenTK.Audio.OpenAL.ALBase.html#OpenTK_Audio_OpenAL_ALBase_RegisterOpenALResolver
  - name: (
  - name: )
- uid: OpenTK.Audio.OpenAL.ALBase.LoadDelegate``1(System.String)
  commentId: M:OpenTK.Audio.OpenAL.ALBase.LoadDelegate``1(System.String)
  parent: OpenTK.Audio.OpenAL.ALBase
  isExternal: true
  href: OpenTK.Audio.OpenAL.ALBase.html#OpenTK_Audio_OpenAL_ALBase_LoadDelegate__1_System_String_
  name: LoadDelegate<TDelegate>(string)
  nameWithType: ALBase.LoadDelegate<TDelegate>(string)
  fullName: OpenTK.Audio.OpenAL.ALBase.LoadDelegate<TDelegate>(string)
  nameWithType.vb: ALBase.LoadDelegate(Of TDelegate)(String)
  fullName.vb: OpenTK.Audio.OpenAL.ALBase.LoadDelegate(Of TDelegate)(String)
  name.vb: LoadDelegate(Of TDelegate)(String)
  spec.csharp:
  - uid: OpenTK.Audio.OpenAL.ALBase.LoadDelegate``1(System.String)
    name: LoadDelegate
    href: OpenTK.Audio.OpenAL.ALBase.html#OpenTK_Audio_OpenAL_ALBase_LoadDelegate__1_System_String_
  - name: <
  - name: TDelegate
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: OpenTK.Audio.OpenAL.ALBase.LoadDelegate``1(System.String)
    name: LoadDelegate
    href: OpenTK.Audio.OpenAL.ALBase.html#OpenTK_Audio_OpenAL_ALBase_LoadDelegate__1_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: OpenTK.Audio.OpenAL.AL.EXTFloat32.IsExtensionPresent*
  commentId: Overload:OpenTK.Audio.OpenAL.AL.EXTFloat32.IsExtensionPresent
  href: OpenTK.Audio.OpenAL.AL.EXTFloat32.html#OpenTK_Audio_OpenAL_AL_EXTFloat32_IsExtensionPresent
  name: IsExtensionPresent
  nameWithType: AL.EXTFloat32.IsExtensionPresent
  fullName: OpenTK.Audio.OpenAL.AL.EXTFloat32.IsExtensionPresent
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData*
  commentId: Overload:OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData
  href: OpenTK.Audio.OpenAL.AL.EXTFloat32.html#OpenTK_Audio_OpenAL_AL_EXTFloat32_BufferData_System_Int32_OpenTK_Audio_OpenAL_FloatBufferFormat_System_Single__System_Int32_System_Int32_
  name: BufferData
  nameWithType: AL.EXTFloat32.BufferData
  fullName: OpenTK.Audio.OpenAL.AL.EXTFloat32.BufferData
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: OpenTK.Audio.OpenAL.FloatBufferFormat
  commentId: T:OpenTK.Audio.OpenAL.FloatBufferFormat
  parent: OpenTK.Audio.OpenAL
  href: OpenTK.Audio.OpenAL.FloatBufferFormat.html
  name: FloatBufferFormat
  nameWithType: FloatBufferFormat
  fullName: OpenTK.Audio.OpenAL.FloatBufferFormat
- uid: System.Single*
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float*
  nameWithType: float*
  fullName: float*
  nameWithType.vb: Single*
  fullName.vb: Single*
  name.vb: Single*
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '*'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '*'
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
- uid: System.Span{System.Single}
  commentId: T:System.Span{System.Single}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<float>
  nameWithType: Span<float>
  fullName: System.Span<float>
  nameWithType.vb: Span(Of Single)
  fullName.vb: System.Span(Of Single)
  name.vb: Span(Of Single)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
