### YamlMime:ManagedReference
items:
- uid: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState
  commentId: T:OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState
  id: KeyboardState
  parent: OpenTK.Windowing.GraphicsLibraryFramework
  children:
  - OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.GetSnapshot
  - OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsAnyKeyDown
  - OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyDown(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  - OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyPressed(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  - OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyReleased(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  - OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.Item(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  - OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.ToString
  - OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.WasKeyDown(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  langs:
  - csharp
  - vb
  name: KeyboardState
  nameWithType: KeyboardState
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState
  type: Class
  source:
    id: KeyboardState
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\KeyboardState.cs
    startLine: 22
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Encapsulates the state of a Keyboard device.
  example: []
  syntax:
    content: public class KeyboardState
    content.vb: Public Class KeyboardState
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.Item(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  commentId: P:OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.Item(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  id: Item(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  parent: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState
  langs:
  - csharp
  - vb
  name: this[Keys]
  nameWithType: KeyboardState.this[Keys]
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.this[OpenTK.Windowing.GraphicsLibraryFramework.Keys]
  type: Property
  source:
    id: this[]
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\KeyboardState.cs
    startLine: 43
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Gets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> indicating whether the specified <xref href="OpenTK.Windowing.GraphicsLibraryFramework.Keys" data-throw-if-not-resolved="false"></xref> is currently down.
  example: []
  syntax:
    content: public bool this[Keys key] { get; }
    parameters:
    - id: key
      type: OpenTK.Windowing.GraphicsLibraryFramework.Keys
      description: The <xref href="OpenTK.Windowing.GraphicsLibraryFramework.Keys?text=key" data-throw-if-not-resolved="false"></xref> to check.
    return:
      type: System.Boolean
      description: <code>true</code> if key is down; <code>false</code> otherwise.
    content.vb: Public Default Property this[](key As Keys) As Boolean
  overload: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.Item*
  nameWithType.vb: KeyboardState.this[](Keys)
  fullName.vb: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.this[](OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  name.vb: this[](Keys)
- uid: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsAnyKeyDown
  commentId: P:OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsAnyKeyDown
  id: IsAnyKeyDown
  parent: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState
  langs:
  - csharp
  - vb
  name: IsAnyKeyDown
  nameWithType: KeyboardState.IsAnyKeyDown
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsAnyKeyDown
  type: Property
  source:
    id: IsAnyKeyDown
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\KeyboardState.cs
    startLine: 53
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Gets a value indicating whether any key is currently down.
  example: []
  syntax:
    content: public bool IsAnyKeyDown { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if any key is down; otherwise, <code>false</code>.
    content.vb: Public ReadOnly Property IsAnyKeyDown As Boolean
  overload: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsAnyKeyDown*
- uid: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.ToString
  commentId: M:OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.ToString
  id: ToString
  parent: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: KeyboardState.ToString()
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.ToString()
  type: Method
  source:
    id: ToString
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\KeyboardState.cs
    startLine: 80
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.ToString*
- uid: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyDown(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  commentId: M:OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyDown(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  id: IsKeyDown(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  parent: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState
  langs:
  - csharp
  - vb
  name: IsKeyDown(Keys)
  nameWithType: KeyboardState.IsKeyDown(Keys)
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyDown(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  type: Method
  source:
    id: IsKeyDown
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\KeyboardState.cs
    startLine: 111
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Gets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> indicating whether this key is currently down.
  example: []
  syntax:
    content: public bool IsKeyDown(Keys key)
    parameters:
    - id: key
      type: OpenTK.Windowing.GraphicsLibraryFramework.Keys
      description: The <xref href="OpenTK.Windowing.GraphicsLibraryFramework.Keys?text=key" data-throw-if-not-resolved="false"></xref> to check.
    return:
      type: System.Boolean
      description: <code>true</code> if <code class="paramref">key</code> is in the down state; otherwise, <code>false</code>.
    content.vb: Public Function IsKeyDown(key As Keys) As Boolean
  overload: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyDown*
- uid: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.WasKeyDown(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  commentId: M:OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.WasKeyDown(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  id: WasKeyDown(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  parent: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState
  langs:
  - csharp
  - vb
  name: WasKeyDown(Keys)
  nameWithType: KeyboardState.WasKeyDown(Keys)
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.WasKeyDown(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  type: Method
  source:
    id: WasKeyDown
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\KeyboardState.cs
    startLine: 121
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Gets a <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref> indicating whether this key was down in the previous frame.
  example: []
  syntax:
    content: public bool WasKeyDown(Keys key)
    parameters:
    - id: key
      type: OpenTK.Windowing.GraphicsLibraryFramework.Keys
      description: The <xref href="OpenTK.Windowing.GraphicsLibraryFramework.Keys" data-throw-if-not-resolved="false"></xref> to check.
    return:
      type: System.Boolean
      description: <code>true</code> if <code class="paramref">key</code> was in the down state; otherwise, <code>false</code>.
    content.vb: Public Function WasKeyDown(key As Keys) As Boolean
  overload: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.WasKeyDown*
- uid: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyPressed(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  commentId: M:OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyPressed(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  id: IsKeyPressed(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  parent: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState
  langs:
  - csharp
  - vb
  name: IsKeyPressed(Keys)
  nameWithType: KeyboardState.IsKeyPressed(Keys)
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyPressed(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  type: Method
  source:
    id: IsKeyPressed
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\KeyboardState.cs
    startLine: 134
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Gets whether the specified key is pressed in the current frame but released in the previous frame.
  remarks: "\"Frame\" refers to invocations of NativeWindow.ProcessEvents(double)  (NativeWindow.ProcessInputEvents() more precisely) here."
  example: []
  syntax:
    content: public bool IsKeyPressed(Keys key)
    parameters:
    - id: key
      type: OpenTK.Windowing.GraphicsLibraryFramework.Keys
      description: The <xref href="OpenTK.Windowing.GraphicsLibraryFramework.Keys?text=key" data-throw-if-not-resolved="false"></xref> to check.
    return:
      type: System.Boolean
      description: True if the key is pressed in this frame, but not the last frame.
    content.vb: Public Function IsKeyPressed(key As Keys) As Boolean
  overload: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyPressed*
- uid: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyReleased(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  commentId: M:OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyReleased(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  id: IsKeyReleased(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  parent: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState
  langs:
  - csharp
  - vb
  name: IsKeyReleased(Keys)
  nameWithType: KeyboardState.IsKeyReleased(Keys)
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyReleased(OpenTK.Windowing.GraphicsLibraryFramework.Keys)
  type: Method
  source:
    id: IsKeyReleased
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\KeyboardState.cs
    startLine: 147
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: Gets whether the specified key is released in the current frame but pressed in the previous frame.
  remarks: "\"Frame\" refers to invocations of NativeWindow.ProcessEvents(double)  (NativeWindow.ProcessInputEvents() more precisely) here."
  example: []
  syntax:
    content: public bool IsKeyReleased(Keys key)
    parameters:
    - id: key
      type: OpenTK.Windowing.GraphicsLibraryFramework.Keys
      description: The <xref href="OpenTK.Windowing.GraphicsLibraryFramework.Keys?text=key" data-throw-if-not-resolved="false"></xref> to check.
    return:
      type: System.Boolean
      description: True if the key is released in this frame, but pressed the last frame.
    content.vb: Public Function IsKeyReleased(key As Keys) As Boolean
  overload: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyReleased*
- uid: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.GetSnapshot
  commentId: M:OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.GetSnapshot
  id: GetSnapshot
  parent: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState
  langs:
  - csharp
  - vb
  name: GetSnapshot()
  nameWithType: KeyboardState.GetSnapshot()
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.GetSnapshot()
  type: Method
  source:
    id: GetSnapshot
    path: C:\Users\juliu\Documents\GitHub\opentk.net\website\opentk\src\OpenTK.Windowing.GraphicsLibraryFramework\Input\KeyboardState.cs
    startLine: 157
  assemblies:
  - OpenTK.Windowing.GraphicsLibraryFramework
  namespace: OpenTK.Windowing.GraphicsLibraryFramework
  summary: >-
    Gets an immutable snapshot of this KeyboardState.

    This can be used to save the current keyboard state for comparison later on.
  example: []
  syntax:
    content: public KeyboardState GetSnapshot()
    return:
      type: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState
      description: Returns an immutable snapshot of this KeyboardState.
    content.vb: Public Function GetSnapshot() As KeyboardState
  overload: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.GetSnapshot*
references:
- uid: OpenTK.Windowing.GraphicsLibraryFramework
  commentId: N:OpenTK.Windowing.GraphicsLibraryFramework
  href: OpenTK.html
  name: OpenTK.Windowing.GraphicsLibraryFramework
  nameWithType: OpenTK.Windowing.GraphicsLibraryFramework
  fullName: OpenTK.Windowing.GraphicsLibraryFramework
  spec.csharp:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Windowing
    name: Windowing
    href: OpenTK.Windowing.html
  - name: .
  - uid: OpenTK.Windowing.GraphicsLibraryFramework
    name: GraphicsLibraryFramework
    href: OpenTK.Windowing.GraphicsLibraryFramework.html
  spec.vb:
  - uid: OpenTK
    name: OpenTK
    href: OpenTK.html
  - name: .
  - uid: OpenTK.Windowing
    name: Windowing
    href: OpenTK.Windowing.html
  - name: .
  - uid: OpenTK.Windowing.GraphicsLibraryFramework
    name: GraphicsLibraryFramework
    href: OpenTK.Windowing.GraphicsLibraryFramework.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: OpenTK.Windowing.GraphicsLibraryFramework.Keys
  commentId: T:OpenTK.Windowing.GraphicsLibraryFramework.Keys
  parent: OpenTK.Windowing.GraphicsLibraryFramework
  href: OpenTK.Windowing.GraphicsLibraryFramework.Keys.html
  name: Keys
  nameWithType: Keys
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.Keys
- uid: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.Item*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.Item
  href: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.html#OpenTK_Windowing_GraphicsLibraryFramework_KeyboardState_Item_OpenTK_Windowing_GraphicsLibraryFramework_Keys_
  name: this
  nameWithType: KeyboardState.this
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.this
  nameWithType.vb: KeyboardState.this[]
  fullName.vb: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.this[]
  name.vb: this[]
- uid: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsAnyKeyDown*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsAnyKeyDown
  href: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.html#OpenTK_Windowing_GraphicsLibraryFramework_KeyboardState_IsAnyKeyDown
  name: IsAnyKeyDown
  nameWithType: KeyboardState.IsAnyKeyDown
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsAnyKeyDown
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.ToString*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.ToString
  href: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.html#OpenTK_Windowing_GraphicsLibraryFramework_KeyboardState_ToString
  name: ToString
  nameWithType: KeyboardState.ToString
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyDown*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyDown
  href: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.html#OpenTK_Windowing_GraphicsLibraryFramework_KeyboardState_IsKeyDown_OpenTK_Windowing_GraphicsLibraryFramework_Keys_
  name: IsKeyDown
  nameWithType: KeyboardState.IsKeyDown
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyDown
- uid: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.WasKeyDown*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.WasKeyDown
  href: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.html#OpenTK_Windowing_GraphicsLibraryFramework_KeyboardState_WasKeyDown_OpenTK_Windowing_GraphicsLibraryFramework_Keys_
  name: WasKeyDown
  nameWithType: KeyboardState.WasKeyDown
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.WasKeyDown
- uid: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyPressed*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyPressed
  href: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.html#OpenTK_Windowing_GraphicsLibraryFramework_KeyboardState_IsKeyPressed_OpenTK_Windowing_GraphicsLibraryFramework_Keys_
  name: IsKeyPressed
  nameWithType: KeyboardState.IsKeyPressed
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyPressed
- uid: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyReleased*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyReleased
  href: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.html#OpenTK_Windowing_GraphicsLibraryFramework_KeyboardState_IsKeyReleased_OpenTK_Windowing_GraphicsLibraryFramework_Keys_
  name: IsKeyReleased
  nameWithType: KeyboardState.IsKeyReleased
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.IsKeyReleased
- uid: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.GetSnapshot*
  commentId: Overload:OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.GetSnapshot
  href: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.html#OpenTK_Windowing_GraphicsLibraryFramework_KeyboardState_GetSnapshot
  name: GetSnapshot
  nameWithType: KeyboardState.GetSnapshot
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.GetSnapshot
- uid: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState
  commentId: T:OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState
  parent: OpenTK.Windowing.GraphicsLibraryFramework
  href: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState.html
  name: KeyboardState
  nameWithType: KeyboardState
  fullName: OpenTK.Windowing.GraphicsLibraryFramework.KeyboardState
